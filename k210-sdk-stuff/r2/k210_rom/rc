# r2 rdb project file
# flags
fs *
f ra 1 0x00000000 
fs *
f sp 1 0x00000000 
fs *
f gp 1 0x00000000 
fs *
f tp 1 0x00000000 
fs *
f t0 1 0x00000000 
fs *
f t1 1 0x00000000 
fs *
f t2 1 0x00000000 
fs *
f s0 1 0x00000000 
fs *
f s1 1 0x00000000 
fs *
f a0 1 0x00000000 
fs *
f a1 1 0x00000000 
fs *
f a2 1 0x00000000 
fs *
f a3 1 0x00000000 
fs *
f a4 1 0x00000000 
fs *
f a5 1 0x00000000 
fs *
f a6 1 0x00000000 
fs *
f a7 1 0x00000000 
fs *
f s2 1 0x00000000 
fs *
f s3 1 0x00000000 
fs *
f s4 1 0x00000000 
fs *
f s5 1 0x00000000 
fs *
f s6 1 0x00000000 
fs *
f s7 1 0x00000000 
fs *
f s8 1 0x00000000 
fs *
f s9 1 0x00000000 
fs *
f s10 1 0x00000000 
fs *
f s11 1 0x00000000 
fs *
f t3 1 0x00000000 
fs *
f t4 1 0x00000000 
fs *
f t5 1 0x00000000 
fs *
f t6 1 0x00000000 
fs *
f ft0 1 0x00000000 
fs *
f ft1 1 0x00000000 
fs *
f ft2 1 0x00000000 
fs *
f ft3 1 0x00000000 
fs *
f ft4 1 0x00000000 
fs *
f ft5 1 0x00000000 
fs *
f ft6 1 0x00000000 
fs *
f ft7 1 0x00000000 
fs *
f fs0 1 0x00000000 
fs *
f fs1 1 0x00000000 
fs *
f fa0 1 0x00000000 
fs *
f fa1 1 0x00000000 
fs *
f fa2 1 0x00000000 
fs *
f fa3 1 0x00000000 
fs *
f fa4 1 0x00000000 
fs *
f fa5 1 0x00000000 
fs *
f fa6 1 0x00000000 
fs *
f fa7 1 0x00000000 
fs *
f fs2 1 0x00000000 
fs *
f fs3 1 0x00000000 
fs *
f fs4 1 0x00000000 
fs *
f fs5 1 0x00000000 
fs *
f fs6 1 0x00000000 
fs *
f fs7 1 0x00000000 
fs *
f fs8 1 0x00000000 
fs *
f fs9 1 0x00000000 
fs *
f fs10 1 0x00000000 
fs *
f fs11 1 0x00000000 
fs *
f ft8 1 0x00000000 
fs *
f ft9 1 0x00000000 
fs *
f ft10 1 0x00000000 
fs *
f ft11 1 0x00000000 
fs *
f start 1 0x88000000 
fs functions
f panic_handler 0 0x8800008c 
f entry_hart0 0 0x88000124 
f fcn.8800013c 0 0x8800013c 
f fcn.88000288 0 0x88000288 
f fcn.880002e4 0 0x880002e4 
f fcn.88000430 0 0x88000430 
f fcn.8800048c 0 0x8800048c 
f fcn.880005d4 0 0x880005d4 
f fcn.88000638 0 0x88000638 
f fcn.880006fc 0 0x880006fc 
f fcn.880007d8 0 0x880007d8 
fs *
f tfp_format 0 0x88000b0c 
fs *
f init_printf 0 0x880012e4 
fs *
f tfp_printf 0 0x88001328 
fs *
f vsnprintf_putcf 0 0x880013a4 
fs *
f tfp_vsnprintf 0 0x88001418 
fs *
f tfp_snprintf 0 0x880014c8 
fs *
f vsprintf_putcf 0 0x8800153c 
fs *
f tfp_vsprintf 0 0x88001594 
fs *
f tfp_sprintf 0 0x88001604 
fs *
f uart_putf 0 0x88001674 
fs *
f printk 0 0x880016b0 
fs *
f panic_printf 0 0x8800172c 
fs functions
f exit 0 0x88001a04 
f panic_handler_internal 0 0x88001a44 
fs *
f aes_init 0 0x88001a80 
fs *
f aes_write_aad 0 0x88001f94 
fs *
f aes_write_text 0 0x88001fc8 
fs *
f gcm_write_tag 0 0x88001ffc 
fs *
f aes_get_data_in_flag 0 0x88002060 
fs functions
f fcn.8800208c_aes 0 0x8800208c 
fs *
f gcm_get_tag_in_flag 0 0x880020b8 
fs *
f aes_read_out_data 0 0x880020e4 
fs *
f gcm_get_tag_chk 0 0x8800210c 
fs *
f gcm_get_tag 0 0x88002138 
fs *
f gcm_clear_chk_tag 0 0x88002460 
fs *
f aes_process 0 0x88002488 
fs *
f aes_process_outer 0 0x880028a0 
fs *
f gcm_check_tag 0 0x88002a0c 
fs *
f clint_ipi_send 0 0x88002a84 
fs *
f clint_ipi_clear 0 0x88002ad8 
fs functions
f fpioa_init 0 0x88002b54 
fs *
f fpioa_get_io 0 0x88002d7c 
fs *
f fpioa_set_io 0 0x88002df0 
fs *
f fpioa_set_io_pull 0 0x88002e64 
fs *
f fpioa_get_io_pull 0 0x8800301c 
fs *
f fpioa_set_io_driving 0 0x880030f0 
fs *
f fpioa_get_io_driving 0 0x880031b4 
fs *
f fpioa_set_function_raw 0 0x88003220 
fs *
f fpioa_set_function 0 0x88003618 
fs *
f fpioa_set_tie_enable 0 0x8800373c 
fs *
f fpioa_set_tie_value 0 0x88003878 
fs functions
f otp_reset 0 0x880039b4 
fs *
f otp_set_78 0 0x88003a84 
fs *
f otp_clear_78 0 0x88003ab0 
fs *
f otp_set_0c 0 0x88003ad4 
fs *
f otp_clear_0c 0 0x88003afc 
fs functions
f otp_check_fuse_a_bit 0 0x88003b20 
fs *
f otp_clear_state18 0 0x88003b6c 
fs *
f otp_set_state18 0 0x88003c20 
fs functions
f fcn.88003cc0_otp 0 0x88003cc0 
f fcn.88003e20_otp 0 0x88003e20 
f fcn.88003ed4_otp 0 0x88003ed4 
f fcn.880042c0_otp 0 0x880042c0 
f otp_read_inner 0 0x8800453c 
f fcn.880046a8 0 0x880046a8 
f otp_read 0 0x8800476c 
f fcn.88004830 0 0x88004830 
f fcn.88004890_otp 0 0x88004890 
f fcn.88004b18_otp 0 0x88004b18 
f fcn.88004bd4_otp 0 0x88004bd4 
f fcn.88004c90_otp 0 0x88004c90 
f otp_check_fuse_b_bit 0 0x88004d58 
f fcn.88004e20_otp_read 0 0x88004e20 
f fcn.88004e9c_otp_read 0 0x88004e9c 
f fcn.88004f18_otp 0 0x88004f18 
fs *
f otp_b_read 0 0x88005154 
fs functions
f fcn.88005278 0 0x88005278 
f fcn.880052a0 0 0x880052a0 
fs *
f sha256_init 0 0x8800538c 
fs *
f sha256_update 0 0x88005538 
fs *
f sha256_final 0 0x880056c4 
fs functions
f sysctl_get_git_id 0 0x880057e4 
f sysctl_get_freq 0 0x8800580c 
f sysctl_reset_ctl 0 0x88005830 
f sysctl_reset 0 0x88005e90 
f sysctl_clock_bus_en 0 0x88005edc 
f sysctl_clock_device_en 0 0x88005ff0 
f sysctl_clock_enable 0 0x88006800 
f sysctl_clock_disable 0 0x88006868 
f sysctl_clock_set_threshold 0 0x880068d0 
f sysctl_clock_get_threshold 0 0x88006e5c 
f sysctl_clock_set_clock_select 0 0x880071a0 
f sysctl_clock_get_clock_select 0 0x88007444 
f sysctl_clock_source_get_freq 0 0x880075d8 
f sysctl_pll_is_lock 0 0x880076ac 
f sysctl_pll_clear_slip 0 0x88007784 
f sysctl_pll_enable 0 0x88007854 
f sysctl_pll_disable 0 0x88007a1c 
f sysctl_pll_get_freq 0 0x88007b18 
f sysctl_clock_get_freq 0 0x88007d98 
f sysctl_dma_select 0 0x880088dc 
f sysctl_pll_fast_enable_pll 0 0x88008a9c 
fs *
f uarths_putc 0 0x88008b68 
fs *
f uarths_getc 0 0x88008bd0 
fs *
f uarths_putchar 0 0x88008c20 
fs *
f uarths_puts 0 0x88008c5c 
fs functions
f serial_init 0 0x88008cc0 
fs *
f spi_receive_data_1 0 0x88008dd8 
fs *
f spi_send_data 0 0x88008f10 
fs *
f spi_receive_data_2 0 0x8800902c 
fs *
f w25qxx_write_enable 0 0x88009160 
fs *
f w25qxx_write_status_reg 0 0x880091f8 
fs *
f w25qxx_read_status_reg1 0 0x88009264 
fs *
f w25qxx_read_status_reg2 0 0x88009300 
fs *
f w25qxx_enable_quad_mode 0 0x8800939c 
fs *
f flash_read_mode0 0 0x88009410 
fs *
f flash_read_mode_1_2 0 0x8800955c 
fs *
f flash_spi3_config 0 0x88009770 
fs *
f spi_flash_read_manufacturer_id 0 0x88009918 
fs *
f flash_read 0 0x880099b4 
fs *
f flash_spi0_config 0 0x88009a34 
fs *
f spi_flash_set_read_mode 0 0x88009b94 
fs *
f fcn.88009bc8_slip 0 0x88009bc8 
fs functions
f slip_handle_pkt 0 0x88009da4 
fs *
f fcn.8800a160_slip 0 0x8800a160 
fs *
f isp_run 0 0x8800a300 
fs *
f boot_main 0 0x8800a5fc 
fs *
f pc 1 0x8800a834 
fs functions
f slip_sendch 0 0x8800aa54 
f slip_start 0 0x8800aad4 
f slip_sendinner 0 0x8800ab00 
f slip_sendpkt 0 0x8800ab6c 
fs *
f slip_unescape 0 0x8800abb4 
fs *
f uarths_set_baudrate 0 0x8800acdc 
fs *
f flash_spi3_init 0 0x8800ad70 
fs *
f flash_spi0_init 0 0x8800ae24 
fs *
f turbo_mode_boot 0 0x8800af34 
fs *
f memcpy 0 0x8800b32c 
fs *
f memset 0 0x8800b3ea 
fs functions
f strlen 0 0x8800b494 
fs *
f end_of_code 1 0x8800b4a6 
# eval
"e anal.a2f = false"
"e anal.arch = riscv"
"e anal.armthumb = false"
"e anal.autoname = false"
"e anal.bb.maxsize = 512K"
"e anal.brokenrefs = false"
"e anal.calls = false"
"e anal.cpp.abi = itanium"
"e anal.cpu = x86"
"e anal.datarefs = false"
"e anal.depth = 64"
"e anal.endsize = true"
"e anal.esil = false"
"e anal.fcnprefix = fcn"
"e anal.from = 0xffffffffffffffff"
"e anal.gp = 0"
"e anal.gp2 = 0"
"e anal.graph_depth = 256"
"e anal.hasnext = false"
"e anal.hpskip = false"
"e anal.ignbithints = false"
"e anal.in = io.maps.x"
"e anal.jmp.above = true"
"e anal.jmp.after = true"
"e anal.jmp.cref = false"
"e anal.jmp.eob = false"
"e anal.jmp.indir = false"
"e anal.jmp.mid = true"
"e anal.jmp.ref = true"
"e anal.jmp.tbl = true"
"e anal.limits = false"
"e anal.loads = false"
"e anal.nopskip = true"
"e anal.prelude = "
"e anal.ptrdepth = 3"
"e anal.pushret = false"
"e anal.recont = false"
"e anal.refstr = false"
"e anal.rnr = false"
"e anal.roregs = gp,zero"
"e anal.sleep = 0"
"e anal.strings = false"
"e anal.timeout = 0"
"e anal.to = 0xffffffffffffffff"
"e anal.types.constraint = false"
"e anal.types.spec = gcc"
"e anal.types.verbose = false"
"e anal.vars = true"
"e anal.verbose = false"
"e anal.vinfun = true"
"e anal.vinfunrange = false"
"e asm.anal = false"
"e asm.arch = riscv"
"e asm.assembler = "
"e asm.bb.line = false"
"e asm.bb.middle = false"
"e asm.bits = 64"
"e asm.bytes = true"
"e asm.bytespace = false"
"e asm.calls = true"
"e asm.capitalize = false"
"e asm.cmt.col = 71"
"e asm.cmt.flgrefs = true"
"e asm.cmt.fold = false"
"e asm.cmt.off = nodup"
"e asm.cmt.patch = false"
"e asm.cmt.refs = false"
"e asm.cmt.right = true"
"e asm.comments = true"
"e asm.cpu = x86"
"e asm.cycles = false"
"e asm.cyclespace = false"
"e asm.decode = false"
"e asm.decoff = false"
"e asm.demangle = true"
"e asm.describe = false"
"e asm.dwarf = true"
"e asm.dwarf.abspath = false"
"e asm.dwarf.file = true"
"e asm.emu = false"
"e asm.esil = false"
"e asm.family = false"
"e asm.fcnsig = true"
"e asm.features = "
"e asm.filter = true"
"e asm.flags = true"
"e asm.flags.inbytes = false"
"e asm.flags.inline = false"
"e asm.flags.limit = 0"
"e asm.flags.maxname = 0"
"e asm.flags.middle = 2"
"e asm.flags.offset = false"
"e asm.flags.real = false"
"e asm.functions = true"
"e asm.highlight = "
"e asm.hint.call = true"
"e asm.hint.cdiv = false"
"e asm.hint.jmp = true"
"e asm.hint.lea = false"
"e asm.hint.pos = 1"
"e asm.hints = true"
"e asm.imm.arm = 0"
"e asm.imm.str = true"
"e asm.imm.trim = false"
"e asm.indent = false"
"e asm.indentspace = 2"
"e asm.instr = true"
"e asm.invhex = false"
"e asm.jmpsub = false"
"e asm.lbytes = true"
"e asm.lines = true"
"e asm.lines.bb = true"
"e asm.lines.call = false"
"e asm.lines.fcn = true"
"e asm.lines.maxref = 0"
"e asm.lines.out = true"
"e asm.lines.ret = false"
"e asm.lines.right = false"
"e asm.lines.wide = false"
"e asm.lines.width = 7"
"e asm.marks = true"
"e asm.meta = true"
"e asm.midcursor = false"
"e asm.middle = false"
"e asm.minicols = false"
"e asm.nbytes = 6"
"e asm.nodup = false"
"e asm.noisy = true"
"e asm.offset = true"
"e asm.os = linux"
"e asm.parser = x86.pseudo"
"e asm.payloads = false"
"e asm.pcalign = 0"
"e asm.pseudo = false"
"e asm.refptr = true"
"e asm.regsub = false"
"e asm.reloff = false"
"e asm.reloff.flags = false"
"e asm.relsub = true"
"e asm.section = false"
"e asm.section.col = 20"
"e asm.section.name = true"
"e asm.section.perm = false"
"e asm.section.sub = false"
"e asm.seggrn = 4"
"e asm.segoff = false"
"e asm.size = false"
"e asm.slow = false"
"e asm.stackptr = false"
"e asm.strip = "
"e asm.symbol = false"
"e asm.symbol.col = 40"
"e asm.syntax = intel"
"e asm.tabs = 0"
"e asm.tabs.off = 0"
"e asm.tabs.once = false"
"e asm.tailsub = false"
"e asm.trace = false"
"e asm.tracespace = false"
"e asm.types = 1"
"e asm.ucase = false"
"e asm.usercomments = false"
"e asm.var = true"
"e asm.var.access = false"
"e asm.var.sub = true"
"e asm.var.submin = 256"
"e asm.var.subonly = true"
"e asm.var.summary = 0"
"e asm.xrefs = true"
"e asm.xrefs.code = true"
"e asm.xrefs.fold = 5"
"e asm.xrefs.max = 20"
"e bin.b64str = false"
"e bin.baddr = 0"
"e bin.classes = true"
"e bin.dbginfo = true"
"e bin.debase64 = false"
"e bin.demangle = true"
"e bin.demanglecmd = false"
"e bin.filter = true"
"e bin.force = "
"e bin.hashlimit = 10M"
"e bin.laddr = 0x88000000"
"e bin.lang = "
"e bin.libs = false"
"e bin.maxstr = 0"
"e bin.maxstrbuf = 0x00a00000"
"e bin.minstr = 0"
"e bin.prefix = "
"e bin.rawstr = false"
"e bin.relocs = true"
"e bin.str.enc = guess"
"e bin.str.filter = "
"e bin.str.purge = "
"e bin.strings = false"
"e bin.useldr = true"
"e bin.usextr = true"
"e bin.verbose = false"
"e cfg.bigendian = false"
"e cfg.corelog = false"
"e cfg.debug = false"
"e cfg.editor = vim"
"e cfg.fortunes = 1"
"e cfg.fortunes.clippy = false"
"e cfg.fortunes.tts = false"
"e cfg.fortunes.type = fun,tips,nsfw"
"e cfg.newtab = false"
"e cfg.plugins = true"
"e cfg.prefixdump = dump"
"e cfg.r2wars = false"
"e cfg.sandbox = false"
"e cfg.user = pid21279"
"e cfg.wseek = false"
"e cmd.bp = "
"e cmd.cprompt = "
"e cmd.depth = 10"
"e cmd.esil.intr = "
"e cmd.esil.ioer = "
"e cmd.esil.mdev = "
"e cmd.esil.step = "
"e cmd.esil.todo = "
"e cmd.esil.trap = "
"e cmd.fcn.delete = "
"e cmd.fcn.new = "
"e cmd.fcn.rename = "
"e cmd.gprompt = "
"e cmd.hexcursor = "
"e cmd.hit = "
"e cmd.hitinfo = 1"
"e cmd.load = "
"e cmd.log = "
"e cmd.onsyscall = "
"e cmd.open = "
"e cmd.pdc = "
"e cmd.prompt = "
"e cmd.repeat = false"
"e cmd.stack = "
"e cmd.times = "
"e cmd.visual = "
"e cmd.vprompt = "
"e cmd.xterm = xterm -bg black -fg gray -e"
"e dbg.aftersyscall = true"
"e dbg.args = "
"e dbg.backend = native"
"e dbg.bep = loader"
"e dbg.bpinmaps = true"
"e dbg.bpsize = 1"
"e dbg.bpsysign = false"
"e dbg.btalgo = fuzzy"
"e dbg.btdepth = 128"
"e dbg.clone = false"
"e dbg.consbreak = false"
"e dbg.exe.path = "
"e dbg.execs = false"
"e dbg.exitkills = true"
"e dbg.follow = 64"
"e dbg.follow.child = false"
"e dbg.forks = false"
"e dbg.funcarg = false"
"e dbg.gdb.page_size = 0x00001000"
"e dbg.gdb.retries = 10"
"e dbg.glibc.fc_offset = 576"
"e dbg.glibc.ma_offset = 0"
"e dbg.glibc.tcache = true"
"e dbg.hwbp = 0"
"e dbg.libc.dbglib = "
"e dbg.libs = "
"e dbg.malloc = glibc"
"e dbg.profile = "
"e dbg.skipover = false"
"e dbg.slow = false"
"e dbg.status = false"
"e dbg.swstep = false"
"e dbg.threads = false"
"e dbg.trace = false"
"e dbg.trace.inrange = false"
"e dbg.trace.libs = true"
"e dbg.trace.tag = 0"
"e dbg.unlibs = "
"e dbg.verbose = true"
"e diff.bare = false"
"e diff.from = 0"
"e diff.levenstein = false"
"e diff.sort = addr"
"e diff.to = 0"
"e dir.dbgsnap = ."
"e dir.depth = 10"
"e dir.home = /home/orion"
"e dir.magic = /opt/radare/share/radare2/3.5.0-git/magic"
"e dir.plugins = /opt/radare/lib/radare2/3.5.0-git"
"e dir.prefix = /opt/radare"
"e dir.projects = ~/.local/share/radare2/projects"
"e dir.source = "
"e dir.tmp = "
"e dir.types = /usr/include"
"e dir.zigns = ~/.local/share/radare2/zigns"
"e emu.lazy = false"
"e emu.pre = false"
"e emu.skip = ds"
"e emu.ssa = false"
"e emu.stack = false"
"e emu.str = false"
"e emu.str.flag = true"
"e emu.str.inv = true"
"e emu.str.lea = true"
"e emu.str.off = false"
"e emu.write = false"
"e esil.addr.size = 64"
"e esil.breakoninvalid = false"
"e esil.exectrap = false"
"e esil.fillstack = "
"e esil.gotolimit = 0x00001000"
"e esil.iotrap = true"
"e esil.mdev.range = "
"e esil.nonull = false"
"e esil.prestep = true"
"e esil.romem = false"
"e esil.stack.addr = 0x00100000"
"e esil.stack.depth = 32"
"e esil.stack.pattern = 0"
"e esil.stack.size = 0x000f0000"
"e esil.stats = false"
"e esil.verbose = 0"
"e file.desc = "
"e file.info = true"
"e file.lastpath = "
"e file.loadalign = 0x00000400"
"e file.location = "
"e file.md5 = "
"e file.offset = 0x88000000"
"e file.openmany = 1"
"e file.path = "
"e file.type = "
"e fs.view = normal"
"e graph.bytes = false"
"e graph.cmtright = false"
"e graph.comments = true"
"e graph.dotted = false"
"e graph.edges = 2"
"e graph.few = false"
"e graph.font = Courier"
"e graph.from = 0xffffffffffffffff"
"e graph.gv.current = false"
"e graph.gv.edge = "
"e graph.gv.format = gif"
"e graph.gv.graph = "
"e graph.gv.node = "
"e graph.gv.spline = "
"e graph.hints = true"
"e graph.invscroll = false"
"e graph.json.usenames = true"
"e graph.layout = 0"
"e graph.linemode = 1"
"e graph.nodejmps = true"
"e graph.offset = false"
"e graph.refs = false"
"e graph.scroll = 5"
"e graph.title = "
"e graph.to = 0xffffffffffffffff"
"e graph.trace = false"
"e graph.web = false"
"e hex.align = false"
"e hex.ascii = true"
"e hex.bytes = true"
"e hex.cols = 16"
"e hex.comments = false"
"e hex.compact = false"
"e hex.depth = 5"
"e hex.flagsz = 0"
"e hex.hdroff = false"
"e hex.header = true"
"e hex.onechar = false"
"e hex.pairs = true"
"e hex.stride = 0"
"e hex.style = false"
"e http.allow = "
"e http.auth = false"
"e http.authfile = "
"e http.authtok = r2admin:r2admin"
"e http.bind = localhost"
"e http.browser = xdg-open"
"e http.colon = false"
"e http.cors = false"
"e http.dietime = 0"
"e http.dirlist = false"
"e http.homeroot = ~/.local/share/radare2/www"
"e http.log = true"
"e http.logfile = "
"e http.maxport = 9999"
"e http.maxsize = 0"
"e http.port = 9090"
"e http.referer = "
"e http.root = /opt/radare/share/radare2/3.5.0-git/www"
"e http.sandbox = true"
"e http.sync = "
"e http.timeout = 3"
"e http.ui = m"
"e http.upget = false"
"e http.upload = false"
"e http.uproot = /tmp"
"e http.uri = "
"e http.verbose = false"
"e hud.path = "
"e io.0xff = 255"
"e io.aslr = false"
"e io.autofd = true"
"e io.cache = false"
"e io.cache.auto = false"
"e io.cache.read = false"
"e io.cache.write = false"
"e io.exec = true"
"e io.ff = true"
"e io.pava = false"
"e io.pcache = false"
"e io.pcache.read = false"
"e io.pcache.write = false"
"e io.unalloc = false"
"e io.unalloc.ch = ."
"e io.va = true"
"e key.S = "
"e key.f1 = "
"e key.f10 = "
"e key.f11 = "
"e key.f12 = "
"e key.f2 = "
"e key.f3 = "
"e key.f4 = "
"e key.f5 = "
"e key.f6 = "
"e key.f7 = "
"e key.f8 = "
"e key.f9 = "
"e key.s = "
"e lines.abs = false"
"e lines.from = 0"
"e lines.to = $s"
"e log.colors = false"
"e log.events = false"
"e log.file = "
"e log.level = 4"
"e log.srcinfo = false"
"e log.traplevel = 6"
"e magic.depth = 100"
"e pdb.autoload = 0"
"e pdb.extract = 1"
"e pdb.server = https://msdl.microsoft.com/download/symbols"
"e pdb.symstore = /home/orion/.local/share/radare2/pdb"
"e pdb.useragent = Microsoft-Symbol-Server/6.11.0001.402"
"e prj.files = false"
"e prj.git = false"
"e prj.gpg = false"
"e prj.name = k210_rom"
"e prj.simple = false"
"e prj.zip = false"
"e rap.loop = true"
"e rop.comments = false"
"e rop.conditional = false"
"e rop.db = true"
"e rop.len = 5"
"e rop.sdb = false"
"e rop.subchains = false"
"e scr.bgfill = false"
"e scr.breaklines = false"
"e scr.breakword = "
"e scr.color = 2"
"e scr.color.args = true"
"e scr.color.bytes = true"
"e scr.color.grep = false"
"e scr.color.ops = true"
"e scr.color.pipe = false"
"e scr.columns = 0"
"e scr.confirmquit = false"
"e scr.dumpcols = false"
"e scr.echo = false"
"e scr.feedback = 1"
"e scr.fgets = false"
"e scr.fix.columns = 0"
"e scr.fix.rows = 0"
"e scr.flush = false"
"e scr.fps = false"
"e scr.gadgets = false"
"e scr.highlight = "
"e scr.highlight.grep = false"
"e scr.histsave = true"
"e scr.html = false"
"e scr.interactive = 1"
"e scr.last = true"
"e scr.linesleep = 0"
"e scr.nkey = flag"
"e scr.null = false"
"e scr.pager = "
"e scr.pagesize = 1"
"e scr.prompt = 1"
"e scr.prompt.file = false"
"e scr.prompt.flag = false"
"e scr.prompt.sect = false"
"e scr.rainbow = false"
"e scr.randpal = false"
"e scr.responsive = false"
"e scr.rows = 0"
"e scr.scrollbar = false"
"e scr.seek = "
"e scr.slow = true"
"e scr.square = true"
"e scr.strconv = asciiesc"
"e scr.tee = "
"e scr.tts = false"
"e scr.utf8 = true"
"e scr.utf8.curvy = false"
"e scr.wheel = true"
"e scr.wheel.nkey = false"
"e scr.wheel.speed = 4"
"e scr.wideoff = false"
"e search.align = 0"
"e search.chunk = 0"
"e search.contiguous = true"
"e search.distance = 0"
"e search.esilcombo = 8"
"e search.flags = true"
"e search.from = 0xffffffffffffffff"
"e search.in = io.maps"
"e search.kwidx = 0"
"e search.maxhits = 0"
"e search.overlap = false"
"e search.prefix = hit"
"e search.show = true"
"e search.to = 0xffffffffffffffff"
"e stack.anotated = false"
"e stack.bytes = true"
"e stack.delta = 0"
"e stack.reg = SP"
"e stack.size = 64"
"e str.escbslash = false"
"e tcp.islocal = false"
"e time.fmt = %Y-%m-%d %H:%M:%S %z"
"e time.zone = 0"
"e zign.autoload = false"
"e zign.bytes = true"
"e zign.graph = true"
"e zign.hash = true"
"e zign.maxsz = 500"
"e zign.mincc = 10"
"e zign.minsz = 16"
"e zign.offset = true"
"e zign.prefix = sign"
"e zign.refs = true"
"e zoom.byte = h"
"e zoom.from = 0"
"e zoom.in = io.map"
"e zoom.maxsz = 512"
"e zoom.to = 0"
"ofs \"kendryte_rom.dat\" r-x"
om 3 0x88000000 0x20000 0x0 r-x
# meta
CCu base64:ZW50cnkgcG9pbnQgKGNhbGxlZCBmcm9tIFJPTUNQVSBib290IHZlY3RvciBhdCAweDEwMDAp @ 0x88000000
CCu base64:MHg4ODAwMDA4Yw== @ 0x88000014
CCu base64:bXR2ZWMgPSBNYWNoaW5lIFRyYXAtVmVjdG9yIEJhc2UtQWRkcmVzcyBSZWdpc3RlciA= @ 0x88000018
CCu base64:Z3A9MHg4MDVmYzgwMA== @ 0x88000028
CCu base64:dHA9MHg4MDVmYzAzZg== @ 0x88000030
CCu base64:dHA9MHg4MDVmYzAwMA== @ 0x88000034
CCu base64:aGFydGlkIDAgb3IgMQ== @ 0x88000038
CCu base64:YWRkIDB4MjAwMCBvciAweDQwMDAgYmFzZWQgb24gaGFydGlk @ 0x88000044
CCu base64:aGFydC1zcGVjaWZpYyBzdGFjaw== @ 0x8800004c
CCu base64:aGFydCAx @ 0x88000058
CCu base64:d2FpdCBmb3IgYW4gaW50ZXJydXB0IG9uIGhhcnQx @ 0x8800006c
CCu base64:bWFjaGluZS1tb2RlIGludGVycnVwdA== @ 0x88000070
CCu base64:b24gbWFjaGluZS1tb2RlIGludGVycnVwdCAodHJpZ2dlcmVkIGZyb20gY29yZSAwKSwganVtcCB0byBhZGRyZXNzIDB4ODAwMDAwMDA= @ 0x88000080
CCu base64:aGFydCAw @ 0x88000088
CCu base64:bWFjaGluZSB0cmFwIHZlY3Rvcg== @ 0x8800008c
CCu base64:c3RvcmUgYWxsIChpbnRlZ2VyKSByZWdpc3RlcnMgZm9yIHJlcG9ydGluZyBsYXRlcg== @ 0x88000090
CCu base64:bG9hZCBleGNlcHRpb24gY2F1c2Ug @ 0x8800010c
CCu base64:bG9hZCBleGNlcHRpb24gUEMgYWRkcmVzcw== @ 0x88000110
CCu base64:ZW50cnkgcG9pbnQgaGFydDA= @ 0x88000124
CCu base64:aW5pdCBVQVJUSFM= @ 0x88000134
CCu base64:cmVzdCBvZiBib290OiBkb2Vzbid0IHJldHVybg== @ 0x88000138
CCu base64:YTU8LTB4Mzc= @ 0x88000220
CCu base64:YTU8LTB4NTc= @ 0x88000228
CCu base64:YTU8LTB4MzA= @ 0x8800022c
CCu base64:MHgyZCwgJy0n @ 0x880002b8
CCu base64:bG9va3MgbGlrZSBhIHJlcGVhdCBvZiBhYm92ZQ== @ 0x880003c4
CCu base64:YW5kIGFnYWluIC4uLg== @ 0x88000564
CCu base64:YmVnaW5uaW5nIG9mIGZ1bmN0aW9uIHdpdGggZ2lhbnQgc3dpdGNoIHN0YXRlbWVudCwgbWlnaHQgYmUgZm9ybWF0dGluZyByZWxhdGVk @ 0x88000b0c
CCu base64:MHgyZA== @ 0x88000bb8
CCu base64:MHgzMA== @ 0x88000bc4
CCu base64:MHgyMw== @ 0x88000bd0
CCu base64:MHg2Yw== @ 0x88000e20
CCu base64:bWF0Y2ggb24gZm9ybWF0IGNoYXJhY3RlcnM= @ 0x88000e7c
CCu base64:MHg4MDVmYzAwMA== @ 0x880012fc
CCu base64:MHg4MDVmYzAwOA== @ 0x8800130c
CCu base64:MHg4MDVmYzAwOA== @ 0x88001368
CCu base64:MHg4MDVmYzAwMA== @ 0x88001374
CCu base64:MHg4ODAwMTNhNA== @ 0x88001470
CCu base64:MHg4ODAwMTY3NCB1YXJ0X3B1dGY= @ 0x88001708
CCu base64:MHg4ODAwYjkzOA== @ 0x880017a8
CCu base64:aW5maW5pdGUgbG9vcA== @ 0x88001a04
CCu base64:YTA9MHg4ODAwYjlkOCAiaW50ZXJlc3RpbmcsIHNvbWV0aGluZydzIHdyb25nLi4uIg== @ 0x88001a38
CCu base64:MHg4ODAwYmEzMCAiZnVjayB0aGUgY2hpcCBpcyBkZWFkISI= @ 0x88001a70
CCu base64:QUVT @ 0x88001b0c
CCu base64:cmVnOiBlbmRpYW4= @ 0x88001b10
CCu base64:QUVT @ 0x88001b18
CCu base64:c2V0IGxpdHRsZSBlbmRpYW4= @ 0x88001b1c
CCu base64:cmVnOiBlbmRpYW4g @ 0x88001b24
CCu base64:QUVT @ 0x88001b68
CCu base64:c2V0IGtleVthNV0= @ 0x88001b7c
CCu base64:QUVT @ 0x88001c40
CCu base64:c2V0IGtleVthNV0= @ 0x88001c54
CCu base64:QUVT @ 0x88001c98
CCu base64:c2V0IGtleQ== @ 0x88001cb0
CCu base64:QUVT @ 0x88001d74
CCu base64:cmVnOiBpdg== @ 0x88001d8c
CCu base64:QUVT @ 0x88001d90
CCu base64:cmVnOiBtb2RlX2N0bA== @ 0x88001d98
CCu base64:QUVT @ 0x88001d9c
CCu base64:cmVnOiBlbmNyeXB0X3NlbA== @ 0x88001da4
CCu base64:QUVT @ 0x88001da8
CCu base64:cmVnOiBnYl9hYWRfbnVt @ 0x88001db8
CCu base64:QUVT @ 0x88001dbc
CCu base64:cmVnOiBnYl9wY19udW07 @ 0x88001dcc
CCu base64:QUVT @ 0x88001dd0
CCu base64:cmVnOiBnYl9hZXNfZW4= @ 0x88001dd4
CCu base64:QUVT @ 0x88001ddc
CCu base64:ZW5hYmxlIG1vZHVsZQ== @ 0x88001de0
CCu base64:cmVnOiBnYl9hZXNfZW4= @ 0x88001de8
CCu base64:QUVT @ 0x88001fa8
CCu base64:cmVnOiBhZXNfYWFkX2RhdGE= @ 0x88001fb0
CCu base64:QUVT @ 0x88001fdc
CCu base64:cmVnOiBhZXNfdGV4dF9kYXRh @ 0x88001fe4
CCu base64:QUVT @ 0x8800200c
CCu base64:cmVnOiBnY21faW5fdGFnWzBd @ 0x88002018
CCu base64:QUVT @ 0x8800201c
CCu base64:cmVnOiBnY21faW5fdGFnWzFd @ 0x88002028
CCu base64:QUVT @ 0x8800202c
CCu base64:cmVnOiBnY21faW5fdGFnWzJd @ 0x88002038
CCu base64:QUVT @ 0x8800203c
CCu base64:cmVnOiBnY21faW5fdGFnWzNd @ 0x88002048
CCu base64:QUVT @ 0x8800206c
CCu base64:cmVnOiBkYXRhX2luX2ZsYWc= @ 0x88002070
CCu base64:QUVT @ 0x88002098
CCu base64:ZGF0YV9vdXRfZmxhZw== @ 0x8800209c
CCu base64:QUVT @ 0x880020c4
CCu base64:cmVnOiB0YWdfaW5fZmxhZw== @ 0x880020c8
CCu base64:QUVT @ 0x880020f0
CCu base64:cmVnOiBhZXNfb3V0X2RhdGE= @ 0x880020f4
CCu base64:QUVT @ 0x88002118
CCu base64:cmVnOiB0YWdfY2hr @ 0x8800211c
CCu base64:QUVT @ 0x8800214c
CCu base64:cmVnOiBnY21fb3V0X3RhZ1szXQ== @ 0x88002150
CCu base64:QUVT @ 0x8800220c
CCu base64:cmVnOiBnY21fb3V0X3RhZ1syXQ== @ 0x88002210
CCu base64:QUVT @ 0x880022cc
CCu base64:cmVnOiBnY21fb3V0X3RhZ1sxXQ== @ 0x880022d0
CCu base64:QUVT @ 0x8800238c
CCu base64:cmVnOiBnY21fb3V0X3RhZ1swXQ== @ 0x88002390
CCu base64:QUVT @ 0x8800246c
CCu base64:cmVnOiB0YWdfY2xlYXI= @ 0x88002470
CCu base64:c2V0IGxvdyBiaXQgYXQgQ0xJTlQgKyBhMCo0 @ 0x88002a84
CCu base64:Y2xlYXIgbG93IGJpdCBhdCBDTElOVCArIGEwKjQ= @ 0x88002ad8
CCu base64:RlBJT0E= @ 0x88002cec
CCu base64:RlBJT0E= @ 0x88002d1c
CCu base64:Z2V0IGkvbyBtYXBwaW5nIGZvciBhMCBpbiBbYTFdIGFmbiBmcGlvX2dldF9yYXcgYWZuIGZwaW9fZ2V0X3Jhdw== @ 0x88002d7c
CCu base64:RlBJT0E= @ 0x88002dc0
CCu base64:RlBJT0E= @ 0x88002e34
CCu base64:RlBJT0E= @ 0x88002eb8
CCu base64:RlBJT0E= @ 0x88002ff0
CCu base64:RlBJT0E= @ 0x88003054
CCu base64:Yml0IDE2OiBwdQ== @ 0x88003078
CCu base64:RlBJT0E= @ 0x88003144
CCu base64:RlBJT0E= @ 0x88003188
CCu base64:RlBJT0E= @ 0x880031ec
CCu base64:RlBJT0E= @ 0x8800327c
CCu base64:RlBJT0E= @ 0x880036a0
CCu base64:RlBJT0E= @ 0x88003780
CCu base64:RlBJT0E= @ 0x880037c4
CCu base64:RlBJT0E= @ 0x880037f0
CCu base64:RlBJT0E= @ 0x8800383c
CCu base64:MHg1MDJiMDAwMCAgICAgICAgICAgICAgRlBJT0EgKFVuZGVyIEFQQjEgMzIgYml0KSA= @ 0x880038bc
CCu base64:MHg1MDJiMDAwMCAgICAgICAgICAgICAgRlBJT0EgKFVuZGVyIEFQQjEgMzIgYml0KSA= @ 0x88003900
CCu base64:MHg1MDJiMDAwMCAgICAgICAgICAgICAgRlBJT0EgKFVuZGVyIEFQQjEgMzIgYml0KSA= @ 0x8800392c
CCu base64:MHg1MDJiMDAwMCAgICAgICAgICAgICAgRlBJT0EgKFVuZGVyIEFQQjEgMzIgYml0KQ== @ 0x88003978
CCu base64:dGFrZXMgdWludDhfdCBwYXJhbSBpbiBhMA== @ 0x880039b4
CCu base64:U1lTQ1RMX0NMT0NLX09UUA== @ 0x880039cc
CCu base64:MHg1MDQyMDAwMCAgICAgICAgICAgICAgT1RQIChVbmRlciBBUEIyIDMyIGJpdCk= @ 0x880039d4
CCu base64:T1RQ @ 0x88003a90
CCu base64:MHhjYWFj @ 0x88003a98
CCu base64:YWZuIG90cF9jbGVhcl83OA== @ 0x88003ab0
CCu base64:T1RQ @ 0x88003abc
CCu base64:T1RQ @ 0x88003ae0
CCu base64:T1RQ @ 0x88003b08
CCu base64:Y2hlY2sgYml0IG9mIE9UUCByZXR1cm5zIDE1IChpZiBzZXQpIG9yIDE2IChvdGhlcndpc2Up @ 0x88003b20
CCu base64:T1RQ @ 0x88003b34
CCu base64:T1RQ @ 0x88003b7c
CCu base64:T1RQ @ 0x88003b88
CCu base64:T1RQ @ 0x88003b94
CCu base64:T1RQ @ 0x88003ba0
CCu base64:T1RQ @ 0x88003ba8
CCu base64:T1RQ @ 0x88003bdc
CCu base64:T1RQ @ 0x88003bec
CCu base64:T1RQ @ 0x88003bf4
CCu base64:T1RQ @ 0x88003c30
CCu base64:T1RQ @ 0x88003c3c
CCu base64:T1RQ @ 0x88003c48
CCu base64:T1RQ @ 0x88003c54
CCu base64:T1RQ @ 0x88003c60
CCu base64:T1RQ @ 0x88003c94
CCu base64:T1RQ @ 0x88003ca4
CCu base64:T1RQ @ 0x88003cf8
CCu base64:T1RQ @ 0x88003d04
CCu base64:T1RQ @ 0x88003d10
CCu base64:T1RQ @ 0x88003d1c
CCu base64:T1RQ @ 0x88003d24
CCu base64:T1RQ @ 0x88003d58
CCu base64:T1RQ @ 0x88003d68
CCu base64:T1RQ @ 0x88003e30
CCu base64:T1RQ @ 0x88003e3c
CCu base64:T1RQ @ 0x88003e48
CCu base64:T1RQ @ 0x88003e54
CCu base64:T1RQ @ 0x88003e88
CCu base64:T1RQ @ 0x88003e98
CCu base64:T1RQ @ 0x88003eb0
CCu base64:T1RQ @ 0x88003ee0
CCu base64:T1RQ @ 0x88003eec
CCu base64:T1RQ @ 0x88003ef8
CCu base64:T1RQ @ 0x88003f04
CCu base64:T1RQ @ 0x88003f0c
CCu base64:T1RQ @ 0x88003f14
CCu base64:T1RQ @ 0x88003f8c
CCu base64:T1RQ @ 0x88003f9c
CCu base64:T1RQ @ 0x88003fc4
CCu base64:T1RQ @ 0x88003fd4
CCu base64:T1RQ @ 0x88003fe4
CCu base64:T1RQ @ 0x88003ff0
CCu base64:T1RQ @ 0x8800402c
CCu base64:T1RQ @ 0x8800403c
CCu base64:T1RQ @ 0x88004054
CCu base64:T1RQ @ 0x88004064
CCu base64:T1RQ @ 0x880040ec
CCu base64:T1RQ @ 0x8800419c
CCu base64:T1RQ @ 0x880041b4
CCu base64:T1RQ @ 0x8800427c
CCu base64:T1RQ @ 0x8800429c
CCu base64:T1RQ @ 0x880042e8
CCu base64:T1RQ @ 0x880043a8
CCu base64:T1RQ @ 0x880043c8
CCu base64:YTAsYTEsYTI= @ 0x8800453c
CCu base64:D09UUA== @ 0x88004560
CCu base64:T1RQ @ 0x88004568
CCu base64:T1RQ @ 0x88004570
CCu base64:T1RQ @ 0x88004578
CCu base64:bXVsdGlwbHkgb2Zmc2V0IGJ5IDg= @ 0x88004580
CCu base64:b2Zmc2V0 @ 0x88004598
CCu base64:MHhmZmZmZmU= @ 0x880045b0
CCu base64:D09UUA== @ 0x880045c0
CCu base64:T1RQ @ 0x880045dc
CCu base64:T1RQ @ 0x880045e8
CCu base64:T1RQ @ 0x88004624
CCu base64:T1RQ @ 0x88004654
CCu base64:YTAgb2Zmc2V0IGExIGRlc3QgYTIgc2l6ZQ== @ 0x8800476c
CCu base64:MHgzZGNm @ 0x880047a0
CCu base64:cmV0dXJuIGNvZGUgMiBpZiBvZmZzZXQgdG9vIGhpZ2g= @ 0x880047a8
CCu base64:MHgzZGQw @ 0x880047b4
CCu base64:Y29weSBvbmx5IHVwIHRvIG9mZnNldCAweDNkZDAgYXQgbW9zdA== @ 0x880047d8
CCu base64:PXNpemU= @ 0x880047e8
CCu base64:PWExPWRlc3Q= @ 0x880047ec
CCu base64:PWEwPW9mZnNldA== @ 0x880047f0
CCu base64:D09UUA== @ 0x880048a4
CCu base64:T1RQ @ 0x88004910
CCu base64:D09UUA== @ 0x88004988
CCu base64:T1RQ @ 0x88004a00
CCu base64:T1RQ @ 0x88004a78
CCu base64:T1RQ @ 0x88004ab4
CCu base64:T1RQ @ 0x88004ac4
CCu base64:T1RQ @ 0x88004ae4
CCu base64:T1RQ @ 0x88004b48
CCu base64:T1RQ @ 0x88004bb4
CCu base64:T1RQ @ 0x88004c04
CCu base64:T1RQ @ 0x88004c70
CCu base64:T1RQ @ 0x88004cb4
CCu base64:T1RQ @ 0x88004cfc
CCu base64:Yml0IGEwOiByZXR1cm5zIDkgaWYgb3V0IG9mIHJhbmdlIDAuLjYzLCAxMyBpZiBub3Qgc2V0LCAxNCBpZiBzZXQ= @ 0x88004d58
CCu base64:T1RQ @ 0x88004d7c
CCu base64:T1RQ @ 0x88004dc4
CCu base64:cmVhZHMgZnJvbSBPVFAgaW50ZXJuYWxseTogdGFrZXMgYTAgMC4uNjMsIHJldHVybnMgOSBpZiBvdXQgb2YgcmFuZ2U= @ 0x88004e20
CCu base64:LzQ= @ 0x88004e4c
CCu base64:MHgzZmQw @ 0x88004e58
CCu base64:cmVhZCBkdW1teQ== @ 0x88004e64
CCu base64:cmVhZCBvbmUgYnl0ZQ== @ 0x88004e68
CCu base64:cmVhZHMgT1RQIGludGVybmFsbHk= @ 0x88004e9c
CCu base64:LzQ= @ 0x88004ec8
CCu base64:MHgzZmUw @ 0x88004ed4
CCu base64:YTAsYTEsYTI= @ 0x88004f18
CCu base64:T1RQ @ 0x88004f3c
CCu base64:YW5vdGhlciBPVFAgcmVhZCAodXNpbmcgZGlmZmVyZW50IE9UUCByZWdpc3RlcnMpIA== @ 0x88005154
CCu base64:YTAgb2Zmc2V0IGluIE9UUCwgYTEgYWRkcmVzcyBpbiBtZW1vcnksIGEyIHNpemU= @ 0x88005158
CCu base64:T1RQ @ 0x88005178
CCu base64:bG9hZCBvZmZzZXQ= @ 0x880051e4
CCu base64:bG9hZCB1OCB2YWx1ZQ== @ 0x880051f8
CCu base64:c3RvcmUgdTggdmFsdWU= @ 0x88005214
CCu base64:YWRkIDggYml0cw== @ 0x88005220
CCu base64:YTM9Y29udGV4dA== @ 0x8800538c
CCu base64:U1lTQ1RMX0NMT0NLX1NIQQ== @ 0x880053bc
CCu base64:U1lTQ1RMX1JFU0VUX1NIQQ== @ 0x880053c4
CCu base64:MHg1MDJjMDAwMCAgICAgICAgICAgICAgU0hBMjU2IChVbmRlciBBUEIxIDMyIGJpdCk= @ 0x880053ec
CCu base64:U0hB @ 0x88005434
CCu base64:U0hB @ 0x88005480
CCu base64:MHg2YTA5ZTY2NyAoU0hBMjU2IGNvbnN0YW50cyk= @ 0x880054a0
CCu base64:MHhiYjY3YWU4NQ== @ 0x880054b0
CCu base64:MHgzYzZlZjM3Mg== @ 0x880054c0
CCu base64:MHhhNTRmZjUzYQ== @ 0x880054d0
CCu base64:MHg1MTBlNTI3Zg== @ 0x880054e0
CCu base64:MHg5YjA1Njg4Yw== @ 0x880054f0
CCu base64:MHgxZjgzZDlhYg== @ 0x88005500
CCu base64:MHg1YmUwY2QxOQ== @ 0x88005510
CCu base64:U0hB @ 0x88005648
CCu base64:cmVnOiBzaGFfZnVuY3Rpb25fcmVnXzE7 @ 0x8800564c
CCu base64:U0hB @ 0x88005660
CCu base64:cmVnOiBzaGFfZGF0YV9pbjE= @ 0x8800567c
CCu base64:U0hB @ 0x88005754
CCu base64:U0hB @ 0x8800577c
CCu base64:MHg1MDQ0MDAwMCAgICAgICAgICAgICAgU1lTQ1RMIChVbmRlciBBUEIyIDMyIGJpdCk= @ 0x880057f0
CCu base64:c3lzY3RsX3Jlc2V0X2N0bChzeXNjdGxfcmVzZXRfdCByZXNldCwgdWludDhfdCByc3RfdmFsdWUp @ 0x88005830
CCu base64:MC4uMzA= @ 0x88005858
CCu base64:MHg4ODAwYmU3OA== @ 0x88005880
CCu base64:U1lTQ1RM @ 0x8800588c
CCu base64:YWZuIHN5c2N0bF9jbG9ja19idXNfZW4= @ 0x88005edc
CCu base64:U1lTQ1RM @ 0x88005f4c
CCu base64:Q2VudHJhbCBjbG9jayBlbmFibGU= @ 0x88005f5c
CCu base64:U1lTQ1RM @ 0x8800604c
CCu base64:UExMMA== @ 0x8800605c
CCu base64:UExMMA== @ 0x88006078
CCu base64:UExMMQ== @ 0x88006090
CCu base64:UExMMQ== @ 0x880060ac
CCu base64:UExMMg== @ 0x880060c4
CCu base64:UExMMg== @ 0x880060e0
CCu base64:Y2xrX2VuX2NlbnQ= @ 0x880060f8
CCu base64:Y2xrX2VuX2NlbnQ= @ 0x88006110
CCu base64:Y2xrX2VuX2NlbnQ= @ 0x88006128
CCu base64:Y2xrX2VuX2NlbnQ= @ 0x8800613c
CCu base64:Y2xrX2VuX2NlbnQ= @ 0x88006154
CCu base64:Y2xrX2VuX2NlbnQ= @ 0x88006168
CCu base64:Y2xrX2VuX2NlbnQ= @ 0x88006180
CCu base64:Y2xrX2VuX2NlbnQ= @ 0x88006194
CCu base64:RlBJT0E= @ 0x8800692c
CCu base64:Y2xrX3NlbDA= @ 0x8800693c
CCu base64:Y2xrX3NlbDA= @ 0x88006950
CCu base64:Y2xrX3NlbDA= @ 0x88006968
CCu base64:Y2xrX3NlbDA= @ 0x8800697c
CCu base64:Y2xrX3NlbDA= @ 0x88006994
CCu base64:Y2xrX3NlbDA= @ 0x880069b0
CCu base64:Y2xrX3RoMA== @ 0x880069c8
CCu base64:U1lTQ1RM @ 0x880071fc
CCu base64:cGxsMA== @ 0x8800720c
CCu base64:cGxsMA== @ 0x88007228
CCu base64:cGxsMQ== @ 0x88007240
CCu base64:cGxsMQ== @ 0x8800725c
CCu base64:U1lTQ1RM @ 0x88007708
CCu base64:cGxsX2xvY2s= @ 0x8800770c
CCu base64:MHg1MDQ0MDAwMCAgICAgICAgICAgICAgU1lTQ1RMIChVbmRlciBBUEIyIDMyIGJpdCk= @ 0x880088fc
CCu base64:Y2FsbGVkIGZyb20gUk9YTQ== @ 0x88008a9c
CCu base64:U1lTQ1RM @ 0x88008aac
CCu base64:dHJhbnNtaXQgY2hhciBhMA== @ 0x88008b68
CCu base64:bG9vcDogd2FpdCB1bnRpbCBwb3NzaWJsZSB0byBzZW5kIHRocm91Z2ggVUFSVEhT @ 0x88008b80
CCu base64:VUFSVEhT @ 0x88008b84
CCu base64:VUFSVEhTLnR4ZGF0YQ== @ 0x88008b88
CCu base64:dHJhbnNtaXQgY2hhciBhMCA= @ 0x88008c20
CCu base64:c2VyaWFsIGluaXQ= @ 0x88008cc0
CCu base64:VUFSVEhT @ 0x88008d00
CCu base64:YTU8LVVBUlRIUy5kaXY= @ 0x88008d08
CCu base64:VUFSVEhTLmRpdjwtYTU= @ 0x88008d2c
CCu base64:VUFSVEhT @ 0x88008d30
CCu base64:YTU8LVVBUlRIUy50eGN0cmw= @ 0x88008d34
CCu base64:VUFSVEhTLnR4Y3RybDwtYTU= @ 0x88008d3c
CCu base64:VUFSVEhT @ 0x88008d40
CCu base64:YTU8LVVBUlRIUy5yeGN0cmw= @ 0x88008d44
CCu base64:VUFSVEhTLnJ4Y3RybDwtYTU= @ 0x88008d4c
CCu base64:VUFSVEhT @ 0x88008d50
CCu base64:YTU8LVVBUlRIUy50eGN0cmw= @ 0x88008d54
CCu base64:VUFSVEhTLnR4Y3RybDwtYTU= @ 0x88008d64
CCu base64:VUFSVEhT @ 0x88008d68
CCu base64:YTU8LVVBUlRIUy50eGN0cmw= @ 0x88008d6c
CCu base64:VUFSVEhTLnR4Y3RybDwtYTU= @ 0x88008d7c
CCu base64:VUFSVEhT @ 0x88008d80
CCu base64:YTU8LVVBUlRIUy5pcA== @ 0x88008d84
CCu base64:VUFSVEhTLmlwPC1hNQ== @ 0x88008d8c
CCu base64:VUFSVEhT @ 0x88008d90
CCu base64:YTU8LVVBUlRIUy5pcA== @ 0x88008d94
CCu base64:VUFSVEhTLmlwPC1hNQ== @ 0x88008d9c
CCu base64:VUFSVEhT @ 0x88008da0
CCu base64:YTU8LVVBUlRIUy5pZQ== @ 0x88008da4
CCu base64:VUFSVEhTLmllPC1hNQ== @ 0x88008dac
CCu base64:VUFSVEhT @ 0x88008db0
CCu base64:YTU8LVVBUlRIUy5pZQ== @ 0x88008db4
CCu base64:VUFSVEhTLmllPC1hNQ== @ 0x88008dbc
CCu base64:U1BJIGZsYXNoIGhhbmRsaW5nOiBhMCwgYTEsIGEyLCBhMw== @ 0x88008dd8
CCu base64:MHg4MDVmYzAxMCBTUEkgYmFzZSBhZGRyZXNzIChjb25maWd1cmFibGUp @ 0x88008e04
CCu base64:U1BJeC5jdHJscjE= @ 0x88008e18
CCu base64:MHg4MDVmYzAxMA== @ 0x88008e20
CCu base64:MHg4MDVmYzAxMA== @ 0x88008e48
CCu base64:U1BJeC5kclswXQ== @ 0x88008e54
CCu base64:MHg4MDVmYzAxMA== @ 0x88008e6c
CCu base64:U1BJeC5zZXI= @ 0x88008e78
CCu base64:MHg4MDVmYzAxMA== @ 0x88008e84
CCu base64:U1BJeC5yeGZscg== @ 0x88008e8c
CCu base64:MHg4MDVmYzAxMA== @ 0x88008ea8
CCu base64:U1BJeC5kclswXQ== @ 0x88008eb0
CCu base64:MHg4MDVmYzAxMA== @ 0x88008ee4
CCu base64:U1BJeC5zZXI= @ 0x88008eec
CCu base64:MHg4MDVmYzAxMA== @ 0x88008ef4
CCu base64:U1BJeC5zc2llbnI= @ 0x88008efc
CCu base64:U1BJIGZsYXNoIGhhbmRsaW5nOiBhMCwgYTEsIGEyLCBhMw== @ 0x88008f10
CCu base64:MHg4MDVmYzAxMA== @ 0x88008f3c
CCu base64:U1BJeC5zc2llbnI= @ 0x88008f48
CCu base64:MHg4MDVmYzAxMA== @ 0x88008f64
CCu base64:U1BJeC5kclswXQ== @ 0x88008f70
CCu base64:MHg4MDVmYzAxMA== @ 0x88008f9c
CCu base64:U1BJeC5kclswXQ== @ 0x88008fa8
CCu base64:MHg4MDVmYzAxMA== @ 0x88008fd8
CCu base64:U1BJeC5zcg== @ 0x88008fe0
CCu base64:MHg4MDVmYzAxMA== @ 0x88009000
CCu base64:U1BJeC5zZXI= @ 0x88009004
CCu base64:MHg4MDVmYzAxMA== @ 0x88009010
CCu base64:U1BJLnNzaWVucg== @ 0x88009018
CCu base64:U1BJIGZsYXNoIGhhbmRsaW5nOiBhMCwgYTEsIGEyLCBhMw== @ 0x8800902c
CCu base64:MHg4MDVmYzAxMA== @ 0x88009058
CCu base64:U1BJeC5jdHJscjE= @ 0x8800906c
CCu base64:MHg4MDVmYzAxMA== @ 0x88009074
CCu base64:U1BJeC5zc2llbnI= @ 0x88009080
CCu base64:MHg4MDVmYzAxMA== @ 0x88009098
CCu base64:U1BJeC5kclswXQ== @ 0x880090a4
CCu base64:MHg4MDVmYzAxMA== @ 0x880090bc
CCu base64:U1BJeC5zZXI= @ 0x880090c8
CCu base64:MHg4MDVmYzAxMA== @ 0x880090d4
CCu base64:U1BJeC5yeGZscg== @ 0x880090dc
CCu base64:FjB4ODA1ZmMwMTA= @ 0x880090f8
CCu base64:U1BJeC5kclswXQ== @ 0x88009100
CCu base64:MHg4MDVmYzAxMA== @ 0x88009134
CCu base64:MHg4MDVmYzAxMA== @ 0x88009144
CCu base64:U1BJIGZsYXNoIGhhbmRsaW5nICA= @ 0x88009160
CCu base64:MHg4MDVmYzAxOA== @ 0x8800917c
CCu base64:MHg4MDVmYzAxOQ== @ 0x88009198
CCu base64:MHg4MDVmYzAxMA== @ 0x880091bc
CCu base64:U1BJeC5jdHJscjA= @ 0x880091c8
CCu base64:U1BJIGZsYXNoIGhhbmRsaW5nOiBhMCwgYTE7IGJ1aWxkIHRocmVlLWJ5dGUgY29tbWFuZCBhbmQgc2VuZCBpdA== @ 0x880091f8
CCu base64:cmVzdWx0IHJldHVybmVkIGluIFt1OEBhMF0= @ 0x88009264
CCu base64:b3Bjb2RlIDUgUkVBRF9SRUcx @ 0x88009278
CCu base64:MHg4MDVmYzAxOCBkZnNfb2Zmc2V0 @ 0x88009284
CCu base64:MHg4MDVmYzAxOSB0bW9kX29mZnNldA== @ 0x880092a0
CCu base64:MHg4MDVmYzAxMA== @ 0x880092c4
CCu base64:U1BJeC5jdHJscjAgIGRmcyA3ICg4IGJpdCkgdG1vZCAzIChTUElfVE1PRF9FRVJPTSk= @ 0x880092d0
CCu base64:cmVzdWx0IHJldHVybmVkIGluIFt1OEBhMF0= @ 0x88009300
CCu base64:b3Bjb2RlIDB4MzUgUkVBRF9SRUcy @ 0x88009314
CCu base64:MHg4MDVmYzAxOCBkZnNfb2Zmc2V0 @ 0x88009320
CCu base64:MHg4MDVmYzAxOSB0bW9kX29mZnNldA== @ 0x8800933c
CCu base64:MHg4MDVmYzAxMA== @ 0x88009360
CCu base64:U1BJeC5jdHJscjAgZGZzIDcgKDggYml0KSB0bW9kIDMgKFNQSV9UTU9EX0VFUk9NKQ== @ 0x8800936c
CCu base64:U1BJIGZsYXNoIGhhbmRsaW5nICA= @ 0x8800939c
CCu base64:UkVHMl9RVUFMX01BU0s= @ 0x880093c0
CCu base64:U1BJIGZsYXNoIGhhbmRsaW5n @ 0x88009410
CCu base64:MHg4MDVmYzAxOA== @ 0x8800943c
CCu base64:MHg4MDVmYzAxOQ== @ 0x88009458
CCu base64:MHg4MDVmYzAxMA== @ 0x8800947c
CCu base64:U1BJeC5jdHJscjA= @ 0x88009488
CCu base64:U1BJIGZsYXNoIGhhbmRsaW5nICBhZm4gZmxhc2hfcmVhZF9tb2RlXzFfMg== @ 0x8800955c
CCu base64:MHg4MDVmYzAxYg== @ 0x88009588
CCu base64:MHg4MDVmYzAxOA== @ 0x880095a0
CCu base64:MHg4MDVmYzAxOQ== @ 0x880095bc
CCu base64:MHg4MDVmYzAxYQ== @ 0x880095e0
CCu base64:MHg4MDVmYzAxMA== @ 0x88009604
CCu base64:U1BJeC5jdHJscjA= @ 0x88009610
CCu base64:MHg4MDVmYzAxMA== @ 0x88009618
CCu base64:MHg4MDVmYzAxOA== @ 0x8800963c
CCu base64:MHg4MDVmYzAxOQ== @ 0x88009658
CCu base64:MHg4MDVmYzAxYQ== @ 0x8800967c
CCu base64:MHg4MDVmYzAxMA== @ 0x880096a0
CCu base64:U1BJeC5jdHJscjA= @ 0x880096ac
CCu base64:MHg4MDVmYzAxMA== @ 0x880096b4
CCu base64:U1BJeC5zcGlfY3RybHIw @ 0x880096c0
CCu base64:U1lTQ1RM @ 0x88009790
CCu base64:PC1TWVNDVEwuY2xrX2VuX3Blcmk= @ 0x88009794
CCu base64:U1lTQ1RM @ 0x8800979c
CCu base64:Yml0IHNwaTNfY2xrX2Vu @ 0x880097a4
CCu base64:LT4gU1lTQ1RMLmNsa19lbl9wZXJp @ 0x880097ac
CCu base64:PC0gU1lTQ1RMLmNsa190aDE= @ 0x880097b8
CCu base64:Y2xlYXIgdXBwZXIgOCBiaXQgKHNwaTNfY2xrX3RocmVzaG9sZCk= @ 0x880097d0
CCu base64:LT4gU1lTQ1RMLmNsa190aDE= @ 0x880097d8
CCu base64:MHg1NDAwMDAwMCAgICAgICAgICAgICAgU1BJMyAoVW5kZXIgQVBCMyAzMiBiaXQp @ 0x880097dc
CCu base64:MHg4MDVmYzAxMCA= @ 0x880097e4
CCu base64:c3RvcmUgU1BJIGJhc2UgYWRkcmVzcw== @ 0x880097e8
CCu base64:MHg4MDVmYzAxMA== @ 0x880097f4
CCu base64:U1BJeC5zc2llbnI= @ 0x880097f8
CCu base64:MHg4MDVmYzAxMA== @ 0x88009804
CCu base64:U1BJeC5zZXI= @ 0x88009808
CCu base64:U1BJeC5iYXVkcg== @ 0x8800981c
CCu base64:MHg4MDVmYzAxMA== @ 0x88009828
CCu base64:U1BJeC5pbXI= @ 0x8800982c
CCu base64:MHg4MDVmYzAxOCBkZnNfb2Zmc2V0 @ 0x88009838
CCu base64:MHg4MDVmYzAxOSB0bW9kX29mZnNldA== @ 0x88009848
CCu base64:MHg4MDVmYzAxYSBmcmZfb2Zmc2V0 @ 0x88009858
CCu base64:MHg4MDVmYzAxYiA/ @ 0x88009864
CCu base64:MHg4MDVmYzAxOA== @ 0x8800986c
CCu base64:MHg4MDVmYzAxOQ== @ 0x88009888
CCu base64:MHg4MDVmYzAxMA== @ 0x880098ac
CCu base64:U1BJeC5jdHJscjAgIGRmcyA3ICg4IGJpdCkgdG1vZCAxICg9U1BJX1RNT0RfVFJBTlMp @ 0x880098b8
CCu base64:SkVERUMgaWQgMzIgaXMgU1RNaWNyb2VsZWN0cm9uaWM= @ 0x880098e8
CCu base64:aW4gd2hpY2ggY2FzZSwgc2tpcCBnb2luZyB0byBxdWFkIG1vZGU= @ 0x880098ec
CCu base64:U1BJIGZsYXNoIGhhbmRsaW5nOiBhMCA= @ 0x88009918
CCu base64:b3Bjb2RlIDB4OUYgUmVhZCBJZGVudGlmaWNhdGlvbiAoUkRJRCk= @ 0x8800992c
CCu base64:MHg4MDVmYzAxOA== @ 0x88009938
CCu base64:MHg4MDVmYzAxOQ== @ 0x88009954
CCu base64:MHg4MDVmYzAxMA== @ 0x88009978
CCu base64:U1BJeC5jdHJscjAgZGZzIDcgKDggYml0KSB0bW9kIDEgKD1TUElfVE1PRF9UUkFOUyk= @ 0x88009984
CCu base64:Z2VuZXJpYyBTUEkgZmxhc2ggcmVhZDogb2Zmc2V0IGEwLCBzaXplIGEyIHRvIGRlc3RpbmF0aW9uIGFkZHJlc3MgYTEg @ 0x880099b4
CCu base64:MHg4MDVmYzAxYiBtb2RlPw== @ 0x880099e0
CCu base64:cmVhZCBtb2RlIDEvMg== @ 0x880099ec
CCu base64:cmVhZCBtb2RlIDA= @ 0x88009a08
CCu base64:MHg1MjAwMDAwMCAgICAgICAgICAgICAgU1BJMCAoVW5kZXIgQVBCMyAzMiBiaXQp @ 0x88009a54
CCu base64:c3RvcmUgU1BJIGJhc2UgYWRkcmVzcyAweDgwNWZjMDEw @ 0x88009a5c
CCu base64:MHg4MDVmYzAxMA== @ 0x88009a68
CCu base64:MHg4MDVmYzAxMA== @ 0x88009a78
CCu base64:MHg4MDVmYzAxMA== @ 0x88009a88
CCu base64:MHg4MDVmYzAxMA== @ 0x88009a9c
CCu base64:MHg4MDVmYzAxOCBkZnNfb2Zmc2V0 @ 0x88009aac
CCu base64:MHg4MDVmYzAxOSB0bW9kX29mZnNldA== @ 0x88009abc
CCu base64:MHg4MDVmYzAxYSBmcmZfb2Zmc2V0 @ 0x88009acc
CCu base64:MHg4MDVmYzAxYiA/ @ 0x88009adc
CCu base64:MHg4MDVmYzAxOA== @ 0x88009ae8
CCu base64:MHg4MDVmYzAxOQ== @ 0x88009b04
CCu base64:MHg4MDVmYzAxMA== @ 0x88009b28
CCu base64:U1BJeC5jdHJscjAg @ 0x88009b34
CCu base64:SkVERUMgSUQgMzIgaXMgU1RNaWNyb2VsZWN0cm9uaQ== @ 0x88009b64
CCu base64:c2V0IHU4QDB4ODA1ZmMwMWIgdG8gYTAgKGlzIHBhc3NlZCAwLCAxIG9yIDIp @ 0x88009b94
CCu base64:MHg4MDVmYzAxYg== @ 0x88009bac
CCu base64:c2V0IGJhdWRyYXRlIHRvIGEw @ 0x88009d10
CCu base64:U1lTQ1RMX0NMT0NLX0NQVQ== @ 0x88009d28
CCu base64:MHg4ODAwYjkyMA== @ 0x88009d5c
CCu base64:bG9hZHMgMHgzODAwMDAwMCAoVUFSVEhTKQ== @ 0x88009d60
CCu base64:c2V0IFVBUlRIUy5kaXY= @ 0x88009d8c
CCu base64:aGFuZGxlIHNsaXAgcGFja2V0 @ 0x88009da4
CCu base64:bG9va3MgbGlrZSAweGMxIChOT1ApIGFuZCAweGM0IChJU1BfTUVNT1JZX1JFQUQpIGZyb20ga2ZsYXNoIGFyZW4ndCBpbXBsZW1lbnRlZA== @ 0x88009de4
CCu base64:PTB4YzMgSVNQX01FTU9SWV9XUklURQ== @ 0x88009de8
CCu base64:PTB4YzIgSVNQX05PUA== @ 0x88009e00
CCu base64:aW52YWxpZA== @ 0x88009e08
CCu base64:PTB4YzUgSVNQX01FTU9SWV9CT09U @ 0x88009e10
CCu base64:PTB4YzYgVUFSVEhTX0JBVURSQVRFX1NFVA== @ 0x88009e1c
CCu base64:aW52YWxpZA== @ 0x88009e24
CCu base64:aGFuZGxlIGJhdWRyYXRlIHNldA== @ 0x8800a050
CCu base64:MHhlMCBJU1BfUkVUX09L @ 0x8800a134
CCu base64:aW52YWxpZCBvcGNvZGVzIGVuZCB1cCBoZXJl @ 0x8800a140
CCu base64:MHhlMyBJU1BfUkVUX0lOVkFMSURfQ09NTUFORA== @ 0x8800a144
CCu base64:cnVuIElTUCBtb2Rl @ 0x8800a300
CCu base64:aWYgRnVzZXMgQSBiaXQgMSAoPTIpIGlzIHNldCwgYWxsb3cgcnVubmluZyBJU1AgZXZlbiBpZiBkaXNhbGxvd2VkIGJ5IEZ1c2VzIEI= @ 0x8800a338
CCu base64:aWYgZnVzZXMgQiBiaXQgNyBpcyBzZXQsIGRpc2FsbG93IGVudGVyaW5nIElTUA== @ 0x8800a354
CCu base64:cmVjZWl2ZSBjaGFyYWN0ZXIgZnJvbSBVQVJUIGluIGEw @ 0x8800a3dc
CCu base64:aWYgZnVzZXMgQSBiaXQgMSBzZXQsIGp1bXAgZGlyZWN0bHkgdG8gbm9uLXR1cmJvIGJvb3Q= @ 0x8800a63c
CCu base64:cmVhZCBST00gInBhdGNoIiBmcm9tIE9UUA== @ 0x8800a65c
CCu base64:Y2hlY2sgZm9yIGhlYWRlcjogMHg0ZDU4NGY1MiBST1hN @ 0x8800a66c
CCu base64:c2l6ZQ== @ 0x8800a678
CCu base64:YTE9MHg4MDVmODAwMA== @ 0x8800a698
CCu base64:cmVhZCBST1hNIGNvZGUgZnJvbSBPVFAgdG8gbWVtb3J5 @ 0x8800a6a0
CCu base64:anVtcCB0byBST1hNIGNvZGUgYXQgMHg4MDVmODAwMA== @ 0x8800a6a8
CCu base64:Yml0IDYzIGRldGVybWluZXMga2luZHMgb2YgYm9vdCAoaXMgdGhpcyB0aGUgVFVSQk8gTU9ERSBtZW50aW9uZWQgaW4gdGhlIGRhdGFzaGVldD8p @ 0x8800a6ac
CCu base64:anVtcCBpZiBiaXQgNjMgbm90IHNldCAocmV0dXJuIHZhbHVlIGlzIDE0IGlmIHNldCk= @ 0x8800a6c4
CCu base64:anVtcCBiYWNrIGZyb20gMHg4MDVmODB4eCBhcnJpdmVzIGhlcmUgaWYgYml0IDMxIG9mIGZ1c2VzLUIgbm90IHNldA== @ 0x8800a6cc
CCu base64:Yml0IDcgZGlzYWxsb3dzIGVudGVyaW5nIElTUA== @ 0x8800a6ec
CCu base64:MHg4ODAwYjhjMA== @ 0x8800a70c
CCu base64:MHgzODAwMTAwMCAoR1BJT0hTKQ== @ 0x8800a710
CCu base64:MHg4ODAwYjhjMA== @ 0x8800a724
CCu base64:MHgzODAwMTAwMCAoR1BJT0hTKQ== @ 0x8800a728
CCu base64:R1BJT0hTIGlucHV0IHZhbCwgYml0IDA= @ 0x8800a72c
CCu base64:ZW50ZXIgSVNQIGlmIEdQSU9IUyBpbnB1dCB2YWwgYml0IDAgaXMgbm90IHNldA== @ 0x8800a740
CCu base64:ZW5jcnlwdGlvbiBmbGFn @ 0x8800a74c
CCu base64:c2l6ZQ== @ 0x8800a760
CCu base64:bWF4IHNpemUgY2FuIGJlIH42IE1C @ 0x8800a77c
CCu base64:bG9hZCBleHBlY3RlZCBTSEEyNTYgaGFzaCBmcm9tIGZsYXNo @ 0x8800a7b0
CCu base64:ZnVzZSBCIGJpdCA5IGRldGVybWluZXMgd2hldGhlciB0byBjaGVjayBTSEEyNTYgYWdhaW5zdCBPVFA= @ 0x8800a7d4
CCu base64:c2tpcCBTSEEyNTYgY2hlY2sgYWdhaW5zdCBPVFA= @ 0x8800a808
CCu base64:T1RQIG9mZnNldCAweDNkYjA= @ 0x8800a81c
CCu base64:Y29tcGFyZSBhZ2FpbnN0IFNIQTI1NiBoYXNoIGluIE9UUCAoYnl0ZSBwZXIgYnl0ZSk= @ 0x8800a82c
CCu base64:anVtcCB0byBJU1Agb24gY2hlY2sgZmFpbHVyZQ== @ 0x8800a850
CCu base64:aGFzaCBmaXJzdCBieXRlIG9mIGZsYXNoIChhZXNfY2lwaGVyX2ZsYWcp @ 0x8800a8a8
CCu base64:aGFzaCBmaXJtd2FyZSBzaXplICg0IGJ5dGVzKQ== @ 0x8800a8c0
CCu base64:MHg4MDAwMDAwMCBzdGFydCBvZiBTUkFN @ 0x8800a8d4
CCu base64:aGFzaCBmaXJtd2FyZQ== @ 0x8800a8dc
CCu base64:b3V0cHV0 @ 0x8800a8e0
CCu base64:Y2hlY2sgMzIgYnl0ZSBTSEEyNTYgaGFzaA== @ 0x8800a8fc
CCu base64:cmVmZXJlbmNlOiAtMTIwKHMwKQ== @ 0x8800a908
CCu base64:Y2hlY2sgdy8gb3V0cHV0IGF0IC04OChzMCk= @ 0x8800a918
CCu base64:anVtcCB0byBJU1Agb24gY2hlY2sgZmFpbHVyZQ== @ 0x8800a920
CCu base64:ZnVzZSBCIGJpdCA4IHNraXBzIGRlY3J5cHRpb24gaWYgc2V0 @ 0x8800a950
CCu base64:c2tpcCBkZWNyeXB0aW9uIGlmIGJpdCA4IHNldCA= @ 0x8800a968
CCu base64:LTUxKHMwKSBob2xkcyB0aGUgZmlyc3QgYnl0ZSBvZiBmbGFzaA== @ 0x8800a96c
CCu base64:Yml0IDA= @ 0x8800a974
CCu base64:c2tpcCBkZWNyeXB0aW9uIGlmIGJpdCAwIGlzIHVuc2V0 @ 0x8800a97c
CCu base64:dXNlIGtleSBmcm9tIE9UUD8= @ 0x8800a980
CCu base64:Y2xlYXIgaW5wdXRfa2V5ICgxNiBieXRlcyk= @ 0x8800a984
CCu base64:Y2xlYXIgSVYgKDE2IGJ5dGVzKQ== @ 0x8800a98c
CCu base64:U1lTQ1RMX0NMT0NLX0FFUw== @ 0x8800a9a0
CCu base64:U1lTQ1RMX1JFU0VUX0FFUw== @ 0x8800a9a8
CCu base64:c3RvcCB1c2luZyBrZXkgZnJvbSBPVFA/ @ 0x8800aa38
CCu base64:Z2V0IGhhcnQgaWQ= @ 0x8800aa3c
CCu base64:amFsciAweDgwMDAwMDAwIChqdW1wIHRvIFNSQU0p @ 0x8800aa50
CCu base64:c2VuZCBzbGlwLWVzY2FwZWQgY2hhcmFjdGVy @ 0x8800aa54
CCu base64:aWYgc2VuZGluZyAweGMw @ 0x8800aa78
CCu base64:MHhkYg== @ 0x8800aa8c
CCu base64:MHhkYw== @ 0x8800aa94
CCu base64:MHhkYg== @ 0x8800aaa0
CCu base64:MHhkZA== @ 0x8800aaa8
CCu base64:c2VuZCBzbGlwIHN0YXJ0L2VuZCBtYXJrZXI= @ 0x8800aad4
CCu base64:c3RhcnQgb2YgU0xJUCBwYWNrZXQ= @ 0x8800aae4
CCu base64:aGFuZGxlIHNsaXAgc3BlY2lhbCBjaGFyYWN0ZXJzICgweGMwIDB4ZGIgMHhkYyAweGRkKQ== @ 0x8800abb4
CCu base64:MHhjMA== @ 0x8800abd4
CCu base64:MHhkYg== @ 0x8800ac4c
CCu base64:MHhkYw== @ 0x8800ac80
CCu base64:MHhkZA== @ 0x8800aca4
CCu base64:U1lTQ1RMX0NMT0NLX0NQVQ== @ 0x8800acf4
CCu base64:ZGl2aWRlIGNsb2NrIHJhdGUgYnkgcGFyYW1ldGVy @ 0x8800ad0c
CCu base64:dHJ1bmNhdGUgdG8gMTYgYml0cw== @ 0x8800ad14
CCu base64:MHg4ODAwYjkyMA== @ 0x8800ad28
CCu base64:MHgzODAwMDAwMCBVQVJUSFM= @ 0x8800ad2c
CCu base64:U1BJMyBpcyBoYXJkLXdpcmVkIHRvIDEyOE1iaXQgZmxhc2ggb24gRGFuIG1vZHVsZTsgcmV0dXJuIDAgaWYgdGhlcmUgaXMgYSB2YWxpZCBmaXJtd2FyZSBoZWFkZXIgaGVyZQ== @ 0x8800ad70
CCu base64:U1BJMyBjbG9jaw== @ 0x8800ad84
CCu base64:U1lTQ1RMX0NMT0NLX1NFTEVDVF9TUEkz @ 0x8800ad88
CCu base64:U1lTQ1RMX1RIUkVTSE9MRF9TUEkz @ 0x8800ad94
CCu base64:cmVhZCBmaXJzdCBieXRlIG9mIGZsYXNoIA== @ 0x8800add8
CCu base64:Yml0IDEgZGV0ZXJtaW5lcyBmbGFzaCByZWFkIG1vZGUgMSAoaWYgc2V0KSBvciAyIChpZiBub3Qgc2V0KQ== @ 0x8800adec
CCu base64:c2V0IHVwIEZQSU9BIG1hcHBpbmcgZm9yIFNQSTAgKGV4dGVybmFsIGZsYXNoKSwgcmV0dXJucyAwIGlmIHRoZXJlIGlzIGEgdmFsaWQgZmlybXdhcmUgdGhlcmU= @ 0x8800ae24
CCu base64:U1lTQ1RMX0NMT0NLX0ZQSU9B @ 0x8800ae3c
CCu base64:U1lTQ1RMX1JFU0VUX1NQSTA= @ 0x8800ae44
CCu base64:U1lTQ1RMX0NMT0NLX1NQSTA= @ 0x8800ae4c
CCu base64:U1lTQ1RMX1RIUkVTSE9MRF9TUEkw @ 0x8800ae58
CCu base64:RlVOQ19TUEkwX1NTMA== @ 0x8800ae60
CCu base64:aS9vIHBpbiAyNDogTUlDX0xFRF9EQVQgb24gTWFpeA== @ 0x8800ae64
CCu base64:RlVOQ19TUEkwX1NDTEs= @ 0x8800ae6c
CCu base64:aS9vIHBpbiAyNzogU1BJMF9TQ0xLIG9uIE1haXg= @ 0x8800ae70
CCu base64:RlVOQ19TUEkwX0Qw @ 0x8800ae78
CCu base64:aS9vIHBpbiAyNTogTUlDX0xFRF9DTEsgb24gTWFpeA== @ 0x8800ae7c
CCu base64:RlVOQ19TUEkwX0Qx @ 0x8800ae84
CCu base64:aS9vIHBpbiAyNjogU1BJMF9NSVNPIG9uIE1haXg= @ 0x8800ae88
CCu base64:RlVOQ19TUEkwX0Qy @ 0x8800ae90
CCu base64:aS9vIHBpbiAyODogU1BJMF9NT1NJIG9uIE1haXg= @ 0x8800ae94
CCu base64:RlVOQ19TUEkwX0Qz @ 0x8800ae9c
CCu base64:aS9vIHBpbiAyOTogU1BJMF9DUzAgb24gTWFpeA== @ 0x8800aea0
CCu base64:cmVhZCBmaXJzdCBieXRlIG9mIGZsYXNo @ 0x8800aee8
CCu base64:Yml0IDEgZGV0ZXJtaW5lcyByZWFkIG1vZGUgMSAoaWYgc2V0KSBvciAyIChpZiBub3Qgc2V0KQ== @ 0x8800af04
CCu base64:ZGVjcnlwdCBmbGFzaCB1c2luZyBrZXkgZnJvbSBPVFAsIGFuZCBqdW1wIHRvIGl0 @ 0x8800af34
CCu base64:PWhhcnRpZA== @ 0x8800af50
CCu base64:ZXhpdCBpZiBlbmRpbmcgdXAgaGVyZSAoaW4gdHVyYm8gbW9kZSBib290KSBhbmQgZnVzZXMgQSBiaXQgMSBpcyBzZXQ= @ 0x8800af6c
CCu base64:YTA9MTE1MjAw @ 0x8800af80
CCu base64:anVtcCBiYWNrIGZyb20gMHg4MDVmODB4eCBhcnJpdmVzIGhlcmUgaWYgZnVzZXMtQiBiaXQgMzEgc2V0LCBza2lwcGluZyBvdmVyIGV2ZXJ5dGhpbmcgYWJvdmUgaGVyZQ== @ 0x8800af88
CCu base64:R1BJT0hTIGNoZWNrIGZvciBJU1AgYml0 @ 0x8800afac
CCu base64:aWYgZnVzZSBCIGJpdCA2MiBzZXQsIHRyeSBib290aW5nIHNwaTAgZmlyc3QgdGhlbiBzcGkz @ 0x8800aff0
CCu base64:ZnVuY3Rpb24gcmV0dXJucyAxNCBpZiBzZXQ= @ 0x8800b004
CCu base64:anVtcCBpZiBiaXQgNjIgbm90IHNldA== @ 0x8800b008
CCu base64:Yml0IDYxOiBpZiBzZXQsIGJvb3Qgc3BpMCwgZWxzZSBzcGkz @ 0x8800b020
CCu base64:ZnVuY3Rpb24gcmV0dXJucyAxNCBpZiBzZXQ= @ 0x8800b034
CCu base64:anVtcCBpZiBiaXQgNjEgbm90IHNldA== @ 0x8800b038
CCu base64:ZnVzZXMgQiBiaXQgOTogZmlybXdhcmUgU0hBIGNoZWNrIGFnYWluc3QgT1RQ @ 0x8800b0c0
CCu base64:ZnVzZXMgQiBiaXQgODogc2tpcCBkZWNyeXB0aW9uIG9mIGZpcm13YXJl @ 0x8800b228
CCu base64:QUVTIGtleSBmcm9tIE9UUD8= @ 0x8800b258
CCu base64:Y2xlYXIga2V5IGFuZCBJVg== @ 0x8800b25c
CCu base64:U1lTQ1RMX0NMT0NLX0FFUw== @ 0x8800b278
CCu base64:U1lTQ1RMX1JFU0VUX0FFUw== @ 0x8800b280
CCu base64:Y2xlYXIgQUVTIGtleSBmcm9tIE9UUA== @ 0x8800b310
CCu base64:anVtcCB0byAweDgwMDAwMDAwIChTUkFNKQ== @ 0x8800b328
CCu base64:YTAsYTEsYTI= @ 0x8800b3ea
axC 0x88005830 0x88005eb4
axC 0x88005830 0x88005ec4
axC 0x88005edc 0x8800683c
axC 0x88005ff0 0x8800684c
axC 0x88005edc 0x880068a4
axC 0x88005ff0 0x880068b4
axC 0x880076ac 0x88007828
axC 0x880075d8 0x88007b90
axC 0x880075d8 0x88007c0c
axC 0x880075d8 0x88007ccc
axC 0x88008b68 0x88008c40
axC 0x8800580c 0x88008cd0
axC 0x88009bc8 0x88009ec4
axC 0x88009d10 0x8800a0ac
axC 0x8800abb4 0x8800a1b4
axC 0x88003b20 0x8800a31c
axC 0x88004d58 0x8800a340
axC 0x88001a04 0x8800a35c
axC 0x8800b3ea 0x8800a384
axC 0x8800b3ea 0x8800a3a8
axC 0x88008bd0 0x8800a3dc
axC 0x8800a160 0x8800a404
axC 0x88009da4 0x8800a4f8
axC 0x8800ab6c 0x8800a544
axC 0x8800ab6c 0x8800a5ec
axC 0x88003b20 0x8800a620
axC 0x880039b4 0x8800a644
axC 0x8800476c 0x8800a65c
axC 0x8800476c 0x8800a684
axC 0x8800476c 0x8800a6a0
axC 0x88004d58 0x8800a6b0
axC 0x8800af34 0x8800a6c8
axC 0x88004d58 0x8800a6f0
axC 0x8800a300 0x8800a740
axC 0x88009770 0x8800a748
axC 0x880099b4 0x8800a75c
axC 0x880099b4 0x8800a770
axC 0x88001a04 0x8800a788
axC 0x880099b4 0x8800a7a0
axC 0x880099b4 0x8800a7c0
axC 0x88004d58 0x8800a7d8
axC 0x8800476c 0x8800a820
axC 0x8800538c 0x8800a890
axC 0x88005538 0x8800a8a8
axC 0x88005538 0x8800a8c0
axC 0x88005538 0x8800a8dc
axC 0x880056c4 0x8800a8f0
axC 0x88008c20 0x8800aa90
axC 0x88008c20 0x8800aa98
axC 0x88008c20 0x8800aaa4
axC 0x88008c20 0x8800aaac
axC 0x88008c20 0x8800aae8
axC 0x8800aad4 0x8800ab88
axC 0x8800ab00 0x8800ab98
axC 0x8800aad4 0x8800ab9c
"f serial_init 280 0x88008cc0"
"af+ 0x88008cc0 serial_init f n"
afc rvg @ 0x88008cc0
afb+ 0x88008cc0 0x88008cc0 280 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88008cc0
"f uarths_putc 104 0x88008b68"
"af+ 0x88008b68 uarths_putc f n"
afc rvg @ 0x88008b68
afb+ 0x88008b68 0x88008b68 104 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88008b68
"f uarths_getc 80 0x88008bd0"
"af+ 0x88008bd0 uarths_getc f n"
afc rvg @ 0x88008bd0
afb+ 0x88008bd0 0x88008bd0 48 0x88008c04 0x88008c00 n
afb+ 0x88008bd0 0x88008c00 4 0xffffffffffffffff 0xffffffffffffffff n
afb+ 0x88008bd0 0x88008c04 28 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88008bd0
"f uarths_putchar 60 0x88008c20"
"af+ 0x88008c20 uarths_putchar f n"
afc rvg @ 0x88008c20
afb+ 0x88008c20 0x88008c20 60 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88008c20
"f uarths_puts 100 0x88008c5c"
"af+ 0x88008c5c uarths_puts f n"
afc rvg @ 0x88008c5c
afb+ 0x88008c5c 0x88008c5c 100 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88008c5c
"f clint_ipi_send 84 0x88002a84"
"af+ 0x88002a84 clint_ipi_send f n"
afc rvg @ 0x88002a84
afb+ 0x88002a84 0x88002a84 28 0x88002aa8 0x88002aa0 n
afb+ 0x88002a84 0x88002aa0 8 0xffffffffffffffff 0xffffffffffffffff n
afb+ 0x88002a84 0x88002aa8 48 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88002a84
"f clint_ipi_clear 124 0x88002ad8"
"af+ 0x88002ad8 clint_ipi_clear f n"
afc rvg @ 0x88002ad8
afb+ 0x88002ad8 0x88002ad8 28 0x88002afc 0x88002af4 n
afb+ 0x88002ad8 0x88002af4 8 0xffffffffffffffff 0xffffffffffffffff n
afb+ 0x88002ad8 0x88002afc 32 0x88002b40 0x88002b1c n
afb+ 0x88002ad8 0x88002b1c 36 0xffffffffffffffff 0xffffffffffffffff n
afb+ 0x88002ad8 0x88002b40 20 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88002ad8
"f slip_start 44 0x8800aad4"
"af+ 0x8800aad4 slip_start f n"
afc rvg @ 0x8800aad4
afb+ 0x8800aad4 0x8800aad4 44 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x8800aad4
"f slip_sendinner 108 0x8800ab00"
"af+ 0x8800ab00 slip_sendinner f n"
afc rvg @ 0x8800ab00
afb+ 0x8800ab00 0x8800ab00 108 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x8800ab00
"f slip_sendpkt 72 0x8800ab6c"
"af+ 0x8800ab6c slip_sendpkt f n"
afc rvg @ 0x8800ab6c
afb+ 0x8800ab6c 0x8800ab6c 72 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x8800ab6c
"f slip_sendch 128 0x8800aa54"
"af+ 0x8800aa54 slip_sendch f n"
afc rvg @ 0x8800aa54
afb+ 0x8800aa54 0x8800aa54 128 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x8800aa54
"f isp_run 764 0x8800a300"
"af+ 0x8800a300 isp_run f n"
afc rvg @ 0x8800a300
afb+ 0x8800a300 0x8800a300 764 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x8800a300
"f fcn.8800a160_slip 416 0x8800a160"
"af+ 0x8800a160 fcn.8800a160_slip f n"
afc rvg @ 0x8800a160
afb+ 0x8800a160 0x8800a160 108 0x8800a248 0x8800a1cc n
afb+ 0x8800a160 0x8800a1cc 100 0x8800a248 0x8800a230 n
afb+ 0x8800a160 0x8800a230 24 0x8800a248 0xffffffffffffffff n
afb+ 0x8800a160 0x8800a248 16 0x8800a2e8 0x8800a258 n
afb+ 0x8800a160 0x8800a258 28 0x8800a2b0 0x8800a274 n
afb+ 0x8800a160 0x8800a274 60 0xffffffffffffffff 0xffffffffffffffff n
afb+ 0x8800a160 0x8800a2b0 56 0x8800a2e8 0xffffffffffffffff n
afb+ 0x8800a160 0x8800a2e8 24 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x8800a160
"f slip_handle_pkt 956 0x88009da4"
"af+ 0x88009da4 slip_handle_pkt f n"
afc rvg @ 0x88009da4
afb+ 0x88009da4 0x88009da4 956 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88009da4
"f fcn.88009bc8_slip 328 0x88009bc8"
"af+ 0x88009bc8 fcn.88009bc8_slip f n"
afc rvg @ 0x88009bc8
afb+ 0x88009bc8 0x88009bc8 328 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88009bc8
"f flash_spi3_config 424 0x88009770"
"af+ 0x88009770 flash_spi3_config f n"
afc rvg @ 0x88009770
afb+ 0x88009770 0x88009770 424 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88009770
"f spi_flash_read_manufacturer_id 156 0x88009918"
"af+ 0x88009918 spi_flash_read_manufacturer_id f n"
afc rvg @ 0x88009918
afb+ 0x88009918 0x88009918 156 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88009918
"f flash_read 128 0x880099b4"
"af+ 0x880099b4 flash_read f n"
afc rvg @ 0x880099b4
afb+ 0x880099b4 0x880099b4 128 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x880099b4
"f flash_spi0_config 352 0x88009a34"
"af+ 0x88009a34 flash_spi0_config f n"
afc rvg @ 0x88009a34
afb+ 0x88009a34 0x88009a34 352 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88009a34
"f spi_flash_set_read_mode 52 0x88009b94"
"af+ 0x88009b94 spi_flash_set_read_mode f n"
afc rvg @ 0x88009b94
afb+ 0x88009b94 0x88009b94 52 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88009b94
"f flash_read_mode_1_2 532 0x8800955c"
"af+ 0x8800955c flash_read_mode_1_2 f n"
afc rvg @ 0x8800955c
afb+ 0x8800955c 0x8800955c 532 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x8800955c
"f flash_read_mode0 332 0x88009410"
"af+ 0x88009410 flash_read_mode0 f n"
afc rvg @ 0x88009410
afb+ 0x88009410 0x88009410 332 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88009410
"f w25qxx_enable_quad_mode 116 0x8800939c"
"af+ 0x8800939c w25qxx_enable_quad_mode f n"
afc rvg @ 0x8800939c
afb+ 0x8800939c 0x8800939c 116 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x8800939c
"f w25qxx_read_status_reg2 156 0x88009300"
"af+ 0x88009300 w25qxx_read_status_reg2 f n"
afc rvg @ 0x88009300
afb+ 0x88009300 0x88009300 156 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88009300
"f w25qxx_read_status_reg1 156 0x88009264"
"af+ 0x88009264 w25qxx_read_status_reg1 f n"
afc rvg @ 0x88009264
afb+ 0x88009264 0x88009264 156 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88009264
"f w25qxx_write_status_reg 108 0x880091f8"
"af+ 0x880091f8 w25qxx_write_status_reg f n"
afc rvg @ 0x880091f8
afb+ 0x880091f8 0x880091f8 108 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x880091f8
"f w25qxx_write_enable 152 0x88009160"
"af+ 0x88009160 w25qxx_write_enable f n"
afc rvg @ 0x88009160
afb+ 0x88009160 0x88009160 152 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88009160
"f spi_receive_data_2 308 0x8800902c"
"af+ 0x8800902c spi_receive_data_2 f n"
afc rvg @ 0x8800902c
afb+ 0x8800902c 0x8800902c 308 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x8800902c
"f spi_send_data 284 0x88008f10"
"af+ 0x88008f10 spi_send_data f n"
afc rvg @ 0x88008f10
afb+ 0x88008f10 0x88008f10 284 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88008f10
"f spi_receive_data_1 312 0x88008dd8"
"af+ 0x88008dd8 spi_receive_data_1 f n"
afc rvg @ 0x88008dd8
afb+ 0x88008dd8 0x88008dd8 312 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88008dd8
"f sysctl_pll_fast_enable_pll 204 0x88008a9c"
"af+ 0x88008a9c sysctl_pll_fast_enable_pll f n"
afc rvg @ 0x88008a9c
afb+ 0x88008a9c 0x88008a9c 204 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88008a9c
"f sysctl_dma_select 448 0x880088dc"
"af+ 0x880088dc sysctl_dma_select f n"
afc rvg @ 0x880088dc
afb+ 0x880088dc 0x880088dc 448 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x880088dc
"f sysctl_clock_get_freq 2884 0x88007d98"
"af+ 0x88007d98 sysctl_clock_get_freq f n"
afc rvg @ 0x88007d98
afb+ 0x88007d98 0x88007d98 2884 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88007d98
"f sysctl_pll_get_freq 640 0x88007b18"
"af+ 0x88007b18 sysctl_pll_get_freq f n"
afc rvg @ 0x88007b18
afb+ 0x88007b18 0x88007b18 640 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88007b18
"f sysctl_pll_disable 252 0x88007a1c"
"af+ 0x88007a1c sysctl_pll_disable f n"
afc rvg @ 0x88007a1c
afb+ 0x88007a1c 0x88007a1c 252 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88007a1c
"f sysctl_pll_enable 456 0x88007854"
"af+ 0x88007854 sysctl_pll_enable f n"
afc rvg @ 0x88007854
afb+ 0x88007854 0x88007854 456 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88007854
"f sysctl_pll_clear_slip 208 0x88007784"
"af+ 0x88007784 sysctl_pll_clear_slip f n"
afc rvg @ 0x88007784
afb+ 0x88007784 0x88007784 208 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88007784
"f sysctl_pll_is_lock 216 0x880076ac"
"af+ 0x880076ac sysctl_pll_is_lock f n"
afc rvg @ 0x880076ac
afb+ 0x880076ac 0x880076ac 216 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x880076ac
"f sysctl_clock_source_get_freq 212 0x880075d8"
"af+ 0x880075d8 sysctl_clock_source_get_freq f n"
afc rvg @ 0x880075d8
afb+ 0x880075d8 0x880075d8 212 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x880075d8
"f sysctl_clock_get_clock_select 404 0x88007444"
"af+ 0x88007444 sysctl_clock_get_clock_select f n"
afc rvg @ 0x88007444
afb+ 0x88007444 0x88007444 404 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88007444
"f sysctl_clock_set_clock_select 676 0x880071a0"
"af+ 0x880071a0 sysctl_clock_set_clock_select f n"
afc rvg @ 0x880071a0
afb+ 0x880071a0 0x880071a0 676 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x880071a0
"f sysctl_clock_get_threshold 836 0x88006e5c"
"af+ 0x88006e5c sysctl_clock_get_threshold f n"
afc rvg @ 0x88006e5c
afb+ 0x88006e5c 0x88006e5c 836 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88006e5c
"f sysctl_clock_set_threshold 1420 0x880068d0"
"af+ 0x880068d0 sysctl_clock_set_threshold f n"
afc rvg @ 0x880068d0
afb+ 0x880068d0 0x880068d0 1420 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x880068d0
"f sysctl_clock_disable 104 0x88006868"
"af+ 0x88006868 sysctl_clock_disable f n"
afc rvg @ 0x88006868
afb+ 0x88006868 0x88006868 104 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88006868
"f sysctl_clock_enable 104 0x88006800"
"af+ 0x88006800 sysctl_clock_enable f n"
afc rvg @ 0x88006800
afb+ 0x88006800 0x88006800 104 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88006800
"f sysctl_clock_device_en 2064 0x88005ff0"
"af+ 0x88005ff0 sysctl_clock_device_en f n"
afc rvg @ 0x88005ff0
afb+ 0x88005ff0 0x88005ff0 2064 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88005ff0
"f sysctl_clock_bus_en 276 0x88005edc"
"af+ 0x88005edc sysctl_clock_bus_en f n"
afc rvg @ 0x88005edc
afb+ 0x88005edc 0x88005edc 276 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88005edc
"f sysctl_reset 76 0x88005e90"
"af+ 0x88005e90 sysctl_reset f n"
afc rvg @ 0x88005e90
afb+ 0x88005e90 0x88005e90 76 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88005e90
"f sysctl_reset_ctl 1632 0x88005830"
"af+ 0x88005830 sysctl_reset_ctl f n"
afc rvg @ 0x88005830
afb+ 0x88005830 0x88005830 1632 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88005830
"f sysctl_get_freq 36 0x8800580c"
"af+ 0x8800580c sysctl_get_freq f n"
afc rvg @ 0x8800580c
afb+ 0x8800580c 0x8800580c 36 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x8800580c
"f sysctl_get_git_id 40 0x880057e4"
"af+ 0x880057e4 sysctl_get_git_id f n"
afc rvg @ 0x880057e4
afb+ 0x880057e4 0x880057e4 40 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x880057e4
"f sha256_final 288 0x880056c4"
"af+ 0x880056c4 sha256_final f n"
afc rvg @ 0x880056c4
afb+ 0x880056c4 0x880056c4 288 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x880056c4
"f sha256_update 396 0x88005538"
"af+ 0x88005538 sha256_update f n"
afc rvg @ 0x88005538
afb+ 0x88005538 0x88005538 396 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88005538
"f sha256_init 428 0x8800538c"
"af+ 0x8800538c sha256_init f n"
afc rvg @ 0x8800538c
afb+ 0x8800538c 0x8800538c 428 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x8800538c
"f fcn.880052a0 236 0x880052a0"
"af+ 0x880052a0 fcn.880052a0 f n"
afc rvg @ 0x880052a0
afb+ 0x880052a0 0x880052a0 236 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x880052a0
"f fcn.88005278 40 0x88005278"
"af+ 0x88005278 fcn.88005278 f n"
afc rvg @ 0x88005278
afb+ 0x88005278 0x88005278 40 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88005278
"f otp_b_read 292 0x88005154"
"af+ 0x88005154 otp_b_read f n"
afc rvg @ 0x88005154
afb+ 0x88005154 0x88005154 292 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88005154
"f fcn.88004f18_otp 572 0x88004f18"
"af+ 0x88004f18 fcn.88004f18_otp f n"
afc rvg @ 0x88004f18
afb+ 0x88004f18 0x88004f18 572 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88004f18
"f fcn.88004e9c_otp_read 124 0x88004e9c"
"af+ 0x88004e9c fcn.88004e9c_otp_read f n"
afc rvg @ 0x88004e9c
afb+ 0x88004e9c 0x88004e9c 124 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88004e9c
"f fcn.88004e20_otp_read 124 0x88004e20"
"af+ 0x88004e20 fcn.88004e20_otp_read f n"
afc rvg @ 0x88004e20
afb+ 0x88004e20 0x88004e20 124 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88004e20
"f otp_check_fuse_b_bit 200 0x88004d58"
"af+ 0x88004d58 otp_check_fuse_b_bit f n"
afc rvg @ 0x88004d58
afb+ 0x88004d58 0x88004d58 200 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88004d58
"f fcn.88004c90_otp 200 0x88004c90"
"af+ 0x88004c90 fcn.88004c90_otp f n"
afc rvg @ 0x88004c90
afb+ 0x88004c90 0x88004c90 200 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88004c90
"f fcn.88004bd4_otp 188 0x88004bd4"
"af+ 0x88004bd4 fcn.88004bd4_otp f n"
afc rvg @ 0x88004bd4
afb+ 0x88004bd4 0x88004bd4 188 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88004bd4
"f fcn.88004b18_otp 188 0x88004b18"
"af+ 0x88004b18 fcn.88004b18_otp f n"
afc rvg @ 0x88004b18
afb+ 0x88004b18 0x88004b18 188 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88004b18
"f fcn.88004890_otp 648 0x88004890"
"af+ 0x88004890 fcn.88004890_otp f n"
afc rvg @ 0x88004890
afb+ 0x88004890 0x88004890 648 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88004890
"f fcn.88004830 96 0x88004830"
"af+ 0x88004830 fcn.88004830 f n"
afc rvg @ 0x88004830
afb+ 0x88004830 0x88004830 96 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88004830
"f otp_read 196 0x8800476c"
"af+ 0x8800476c otp_read f n"
afc rvg @ 0x8800476c
afb+ 0x8800476c 0x8800476c 196 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x8800476c
"f fcn.880046a8 196 0x880046a8"
"af+ 0x880046a8 fcn.880046a8 f n"
afc rvg @ 0x880046a8
afb+ 0x880046a8 0x880046a8 196 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x880046a8
"f otp_read_inner 364 0x8800453c"
"af+ 0x8800453c otp_read_inner f n"
afc rvg @ 0x8800453c
afb+ 0x8800453c 0x8800453c 364 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x8800453c
"f fcn.880042c0_otp 636 0x880042c0"
"af+ 0x880042c0 fcn.880042c0_otp f n"
afc rvg @ 0x880042c0
afb+ 0x880042c0 0x880042c0 636 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x880042c0
"f fcn.88003ed4_otp 1004 0x88003ed4"
"af+ 0x88003ed4 fcn.88003ed4_otp f n"
afc rvg @ 0x88003ed4
afb+ 0x88003ed4 0x88003ed4 1004 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88003ed4
"f fcn.88003e20_otp 180 0x88003e20"
"af+ 0x88003e20 fcn.88003e20_otp f n"
afc rvg @ 0x88003e20
afb+ 0x88003e20 0x88003e20 180 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88003e20
"f fcn.88003cc0_otp 352 0x88003cc0"
"af+ 0x88003cc0 fcn.88003cc0_otp f n"
afc rvg @ 0x88003cc0
afb+ 0x88003cc0 0x88003cc0 352 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88003cc0
"f otp_set_state18 160 0x88003c20"
"af+ 0x88003c20 otp_set_state18 f n"
afc rvg @ 0x88003c20
afb+ 0x88003c20 0x88003c20 160 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88003c20
"f otp_clear_state18 180 0x88003b6c"
"af+ 0x88003b6c otp_clear_state18 f n"
afc rvg @ 0x88003b6c
afb+ 0x88003b6c 0x88003b6c 180 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88003b6c
"f otp_check_fuse_a_bit 76 0x88003b20"
"af+ 0x88003b20 otp_check_fuse_a_bit f n"
afc rvg @ 0x88003b20
afb+ 0x88003b20 0x88003b20 76 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88003b20
"f otp_clear_0c 36 0x88003afc"
"af+ 0x88003afc otp_clear_0c f n"
afc rvg @ 0x88003afc
afb+ 0x88003afc 0x88003afc 36 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88003afc
"f otp_set_0c 40 0x88003ad4"
"af+ 0x88003ad4 otp_set_0c f n"
afc rvg @ 0x88003ad4
afb+ 0x88003ad4 0x88003ad4 40 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88003ad4
"f otp_clear_78 36 0x88003ab0"
"af+ 0x88003ab0 otp_clear_78 f n"
afc rvg @ 0x88003ab0
afb+ 0x88003ab0 0x88003ab0 36 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88003ab0
"f otp_set_78 44 0x88003a84"
"af+ 0x88003a84 otp_set_78 f n"
afc rvg @ 0x88003a84
afb+ 0x88003a84 0x88003a84 44 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88003a84
"f otp_reset 208 0x880039b4"
"af+ 0x880039b4 otp_reset f n"
afc rvg @ 0x880039b4
afb+ 0x880039b4 0x880039b4 208 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x880039b4
"f fpioa_set_tie_value 316 0x88003878"
"af+ 0x88003878 fpioa_set_tie_value f n"
afc rvg @ 0x88003878
afb+ 0x88003878 0x88003878 316 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88003878
"f fpioa_set_tie_enable 316 0x8800373c"
"af+ 0x8800373c fpioa_set_tie_enable f n"
afc rvg @ 0x8800373c
afb+ 0x8800373c 0x8800373c 316 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x8800373c
"f fpioa_set_function 292 0x88003618"
"af+ 0x88003618 fpioa_set_function f n"
afc rvg @ 0x88003618
afb+ 0x88003618 0x88003618 292 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88003618
"f fpioa_set_function_raw 1016 0x88003220"
"af+ 0x88003220 fpioa_set_function_raw f n"
afc rvg @ 0x88003220
afb+ 0x88003220 0x88003220 1016 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88003220
"f fpioa_get_io_driving 108 0x880031b4"
"af+ 0x880031b4 fpioa_get_io_driving f n"
afc rvg @ 0x880031b4
afb+ 0x880031b4 0x880031b4 108 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x880031b4
"f fpioa_set_io_driving 196 0x880030f0"
"af+ 0x880030f0 fpioa_set_io_driving f n"
afc rvg @ 0x880030f0
afb+ 0x880030f0 0x880030f0 196 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x880030f0
"f fpioa_get_io_pull 212 0x8800301c"
"af+ 0x8800301c fpioa_get_io_pull f n"
afc rvg @ 0x8800301c
afb+ 0x8800301c 0x8800301c 212 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x8800301c
"f fpioa_set_io_pull 440 0x88002e64"
"af+ 0x88002e64 fpioa_set_io_pull f n"
afc rvg @ 0x88002e64
afb+ 0x88002e64 0x88002e64 440 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88002e64
"f fpioa_set_io 116 0x88002df0"
"af+ 0x88002df0 fpioa_set_io f n"
afc rvg @ 0x88002df0
afb+ 0x88002df0 0x88002df0 116 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88002df0
"f fpioa_get_io 116 0x88002d7c"
"af+ 0x88002d7c fpioa_get_io f n"
afc rvg @ 0x88002d7c
afb+ 0x88002d7c 0x88002d7c 116 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88002d7c
"f fpioa_init 552 0x88002b54"
"af+ 0x88002b54 fpioa_init f n"
afc rvg @ 0x88002b54
afb+ 0x88002b54 0x88002b54 552 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88002b54
"f gcm_check_tag 120 0x88002a0c"
"af+ 0x88002a0c gcm_check_tag f n"
afc rvg @ 0x88002a0c
afb+ 0x88002a0c 0x88002a0c 120 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88002a0c
"f aes_process_outer 364 0x880028a0"
"af+ 0x880028a0 aes_process_outer f n"
afc rvg @ 0x880028a0
afb+ 0x880028a0 0x880028a0 364 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x880028a0
"f aes_process 1048 0x88002488"
"af+ 0x88002488 aes_process f n"
afc rvg @ 0x88002488
afb+ 0x88002488 0x88002488 1048 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88002488
"f gcm_clear_chk_tag 40 0x88002460"
"af+ 0x88002460 gcm_clear_chk_tag f n"
afc rvg @ 0x88002460
afb+ 0x88002460 0x88002460 40 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88002460
"f gcm_get_tag 808 0x88002138"
"af+ 0x88002138 gcm_get_tag f n"
afc rvg @ 0x88002138
afb+ 0x88002138 0x88002138 808 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88002138
"f gcm_get_tag_chk 44 0x8800210c"
"af+ 0x8800210c gcm_get_tag_chk f n"
afc rvg @ 0x8800210c
afb+ 0x8800210c 0x8800210c 44 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x8800210c
"f aes_read_out_data 40 0x880020e4"
"af+ 0x880020e4 aes_read_out_data f n"
afc rvg @ 0x880020e4
afb+ 0x880020e4 0x880020e4 40 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x880020e4
"f gcm_get_tag_in_flag 44 0x880020b8"
"af+ 0x880020b8 gcm_get_tag_in_flag f n"
afc rvg @ 0x880020b8
afb+ 0x880020b8 0x880020b8 44 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x880020b8
"f fcn.8800208c_aes 44 0x8800208c"
"af+ 0x8800208c fcn.8800208c_aes f n"
afc rvg @ 0x8800208c
afb+ 0x8800208c 0x8800208c 44 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x8800208c
"f aes_get_data_in_flag 44 0x88002060"
"af+ 0x88002060 aes_get_data_in_flag f n"
afc rvg @ 0x88002060
afb+ 0x88002060 0x88002060 44 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88002060
"f gcm_write_tag 100 0x88001ffc"
"af+ 0x88001ffc gcm_write_tag f n"
afc rvg @ 0x88001ffc
afb+ 0x88001ffc 0x88001ffc 100 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88001ffc
"f aes_write_text 52 0x88001fc8"
"af+ 0x88001fc8 aes_write_text f n"
afc rvg @ 0x88001fc8
afb+ 0x88001fc8 0x88001fc8 52 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88001fc8
"f aes_write_aad 52 0x88001f94"
"af+ 0x88001f94 aes_write_aad f n"
afc rvg @ 0x88001f94
afb+ 0x88001f94 0x88001f94 52 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88001f94
"f panic_printf 728 0x8800172c"
"af+ 0x8800172c panic_printf f n"
afc rvg @ 0x8800172c
afb+ 0x8800172c 0x8800172c 728 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x8800172c
"f printk 124 0x880016b0"
"af+ 0x880016b0 printk f n"
afc rvg @ 0x880016b0
afb+ 0x880016b0 0x880016b0 124 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x880016b0
"f uart_putf 60 0x88001674"
"af+ 0x88001674 uart_putf f n"
afc rvg @ 0x88001674
afb+ 0x88001674 0x88001674 60 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88001674
"f tfp_sprintf 112 0x88001604"
"af+ 0x88001604 tfp_sprintf f n"
afc rvg @ 0x88001604
afb+ 0x88001604 0x88001604 112 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88001604
"f tfp_vsprintf 112 0x88001594"
"af+ 0x88001594 tfp_vsprintf f n"
afc rvg @ 0x88001594
afb+ 0x88001594 0x88001594 112 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88001594
"f _vsprintf_putcf 88 0x8800153c"
"af+ 0x8800153c _vsprintf_putcf f n"
afc rvg @ 0x8800153c
afb+ 0x8800153c 0x8800153c 88 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x8800153c
"f tfp_snprintf 116 0x880014c8"
"af+ 0x880014c8 tfp_snprintf f n"
afc rvg @ 0x880014c8
afb+ 0x880014c8 0x880014c8 116 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x880014c8
"f tfp_vsnprintf 176 0x88001418"
"af+ 0x88001418 tfp_vsnprintf f n"
afc rvg @ 0x88001418
afb+ 0x88001418 0x88001418 176 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88001418
"f _vsnprintf_putcf 116 0x880013a4"
"af+ 0x880013a4 _vsnprintf_putcf f n"
afc rvg @ 0x880013a4
afb+ 0x880013a4 0x880013a4 116 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x880013a4
"f tfp_printf 124 0x88001328"
"af+ 0x88001328 tfp_printf f n"
afc rvg @ 0x88001328
afb+ 0x88001328 0x88001328 124 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88001328
"f init_printf 68 0x880012e4"
"af+ 0x880012e4 init_printf f n"
afc rvg @ 0x880012e4
afb+ 0x880012e4 0x880012e4 68 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x880012e4
"f tfp_format 2008 0x88000b0c"
"af+ 0x88000b0c tfp_format f n"
afc rvg @ 0x88000b0c
afb+ 0x88000b0c 0x88000b0c 2008 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88000b0c
"f fcn.880007d8 820 0x880007d8"
"af+ 0x880007d8 fcn.880007d8 f n"
afc rvg @ 0x880007d8
afb+ 0x880007d8 0x880007d8 820 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x880007d8
"f fcn.880006fc 220 0x880006fc"
"af+ 0x880006fc fcn.880006fc f n"
afc rvg @ 0x880006fc
afb+ 0x880006fc 0x880006fc 220 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x880006fc
"f fcn.88000638 196 0x88000638"
"af+ 0x88000638 fcn.88000638 f n"
afc rvg @ 0x88000638
afb+ 0x88000638 0x88000638 196 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88000638
"f fcn.880005d4 100 0x880005d4"
"af+ 0x880005d4 fcn.880005d4 f n"
afc rvg @ 0x880005d4
afb+ 0x880005d4 0x880005d4 100 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x880005d4
"f fcn.8800048c 328 0x8800048c"
"af+ 0x8800048c fcn.8800048c f n"
afc rvg @ 0x8800048c
afb+ 0x8800048c 0x8800048c 328 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x8800048c
"f fcn.88000430 92 0x88000430"
"af+ 0x88000430 fcn.88000430 f n"
afc rvg @ 0x88000430
afb+ 0x88000430 0x88000430 92 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88000430
"f fcn.880002e4 332 0x880002e4"
"af+ 0x880002e4 fcn.880002e4 f n"
afc rvg @ 0x880002e4
afb+ 0x880002e4 0x880002e4 332 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x880002e4
"f fcn.88000288 92 0x88000288"
"af+ 0x88000288 fcn.88000288 f n"
afc rvg @ 0x88000288
afb+ 0x88000288 0x88000288 92 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88000288
"f fcn.8800013c 332 0x8800013c"
"af+ 0x8800013c fcn.8800013c f n"
afc rvg @ 0x8800013c
afb+ 0x8800013c 0x8800013c 332 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x8800013c
"f exit 64 0x88001a04"
"af+ 0x88001a04 exit f n"
afc rvg @ 0x88001a04
afb+ 0x88001a04 0x88001a04 64 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88001a04
"f panic_handler_internal 60 0x88001a44"
"af+ 0x88001a44 panic_handler_internal f n"
afc rvg @ 0x88001a44
afb+ 0x88001a44 0x88001a44 60 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88001a44
"f aes_init 1300 0x88001a80"
"af+ 0x88001a80 aes_init f n"
afc rvg @ 0x88001a80
afb+ 0x88001a80 0x88001a80 1300 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88001a80
"f entry_hart0 24 0x88000124"
"af+ 0x88000124 entry_hart0 f n"
afc rvg @ 0x88000124
afb+ 0x88000124 0x88000124 24 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88000124
"f panic_handler 152 0x8800008c"
"af+ 0x8800008c panic_handler f n"
afc rvg @ 0x8800008c
afb+ 0x8800008c 0x8800008c 152 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x8800008c
"f uarths_set_baudrate 148 0x88009d10"
"af+ 0x88009d10 uarths_set_baudrate f n"
afc rvg @ 0x88009d10
afb+ 0x88009d10 0x88009d10 148 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x88009d10
"f boot_main 1112 0x8800a5fc"
"af+ 0x8800a5fc boot_main f n"
afc rvg @ 0x8800a5fc
afb+ 0x8800a5fc 0x8800a5fc 1112 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x8800a5fc
"f slip_unescape 296 0x8800abb4"
"af+ 0x8800abb4 slip_unescape f n"
afc rvg @ 0x8800abb4
afb+ 0x8800abb4 0x8800abb4 296 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x8800abb4
"f uarths_set_baudrate 148 0x8800acdc"
"af+ 0x8800acdc uarths_set_baudrate f n"
afc rvg @ 0x8800acdc
afb+ 0x8800acdc 0x8800acdc 148 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x8800acdc
"f flash_spi3_init 180 0x8800ad70"
"af+ 0x8800ad70 flash_spi3_init f n"
afc rvg @ 0x8800ad70
afb+ 0x8800ad70 0x8800ad70 180 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x8800ad70
"f flash_spi0_init 272 0x8800ae24"
"af+ 0x8800ae24 flash_spi0_init f n"
afc rvg @ 0x8800ae24
afb+ 0x8800ae24 0x8800ae24 272 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x8800ae24
"f turbo_mode_boot 1016 0x8800af34"
"af+ 0x8800af34 turbo_mode_boot f n"
afc rvg @ 0x8800af34
afb+ 0x8800af34 0x8800af34 1016 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x8800af34
"f memcpy 190 0x8800b32c"
"af+ 0x8800b32c memcpy f n"
afc rvg @ 0x8800b32c
afb+ 0x8800b32c 0x8800b32c 190 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x8800b32c
"f memset 170 0x8800b3ea"
"af+ 0x8800b3ea memset f n"
afc rvg @ 0x8800b3ea
afb+ 0x8800b3ea 0x8800b3ea 170 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x8800b3ea
"f strlen 18 0x8800b494"
"af+ 0x8800b494 strlen f n"
afc rvg @ 0x8800b494
afb+ 0x8800b494 0x8800b494 18 0xffffffffffffffff 0xffffffffffffffff n
afS 0 @ 0x8800b494

f.handle_memory_write@0x88009e28
f.handle_nop@0x8800a130
f.handle_memory_boot@0x8800a0c0
f.handle_baudrate@0x8800a050
# types
tk *aligned_alloc=func
tk _Exit=func
tk __assert_fail=func
tk __libc_init=func
tk __libc_init_array=func
tk __libc_start_main=func
tk __stack_chk_fail=func
tk __uClibc_main=func
tk _exit=func
tk abort=func
tk abs=func
tk access=func
tk acos=func
tk acosf=func
tk acosh=func
tk acoshf=func
tk acoshl=func
tk acosl=func
tk arc4random=func
tk asctime=func
tk asin=func
tk asinf=func
tk asinh=func
tk asinhf=func
tk asinhl=func
tk asinl=func
tk at_quick_exit=func
tk atan=func
tk atan2=func
tk atan2f=func
tk atan2l=func
tk atanf=func
tk atanh=func
tk atanhf=func
tk atanhl=func
tk atanl=func
tk atexit=func
tk atof=func
tk atoi=func
tk atol=func
tk atoll=func
tk basename=func
tk bindtextdomain=func
tk bsearch=func
tk btowc=func
tk bzero=func
tk calloc=func
tk cbrt=func
tk cbrtf=func
tk cbrtl=func
tk ceil=func
tk ceilf=func
tk ceill=func
tk char=type
tk char *=type
tk chmod=func
tk clearerr=func
tk clock=func
tk close=func
tk compat_mode=func
tk connect=func
tk copysign=func
tk copysignf=func
tk copysignl=func
tk cos=func
tk cosf=func
tk cosh=func
tk coshf=func
tk coshl=func
tk cosl=func
tk ctime=func
tk difftime=func
tk div=func
tk double=type
tk erf=func
tk erfc=func
tk erfcf=func
tk erfcl=func
tk erff=func
tk erfl=func
tk err=func
tk errc=func
tk error=func
tk errx=func
tk exit=func
tk exp=func
tk exp2=func
tk exp2f=func
tk exp2l=func
tk expf=func
tk expl=func
tk expm1=func
tk expm1f=func
tk expm1l=func
tk fabs=func
tk fabsf=func
tk fabsl=func
tk fchmod=func
tk fclose=func
tk fdim=func
tk fdimf=func
tk fdiml=func
tk feclearexcept=func
tk fegetenv=func
tk fegetexceptflag=func
tk fegetround=func
tk feholdexcept=func
tk feof=func
tk feraiseexcept=func
tk ferror=func
tk fesetenv=func
tk fesetexceptflag=func
tk fesetround=func
tk fetestexcept=func
tk feupdateenv=func
tk fflush=func
tk fgetc=func
tk fgetpos=func
tk fgets=func
tk fgetwc=func
tk fgetws=func
tk fileno=func
tk float=type
tk floor=func
tk floorf=func
tk floorl=func
tk fma=func
tk fmaf=func
tk fmal=func
tk fmax=func
tk fmaxf=func
tk fmaxl=func
tk fmin=func
tk fminf=func
tk fminl=func
tk fmod=func
tk fmodf=func
tk fmodl=func
tk fopen=func
tk fpclassify=func
tk fprintf=func
tk fputc=func
tk fputs=func
tk fputwc=func
tk fputws=func
tk fread=func
tk free=func
tk freopen=func
tk frexp=func
tk frexpf=func
tk frexpl=func
tk fscanf=func
tk fseek=func
tk fsetpos=func
tk fstat=func
tk ftell=func
tk fts_children_INODE64=func
tk fts_close_INODE64=func
tk fts_open_INODE64=func
tk fts_read_INODE64=func
tk fts_set_INODE64=func
tk func.*aligned_alloc.arg.0=size_t,alignment
tk func.*aligned_alloc.arg.1=size_t,size
tk func.*aligned_alloc.args=2
tk func.*aligned_alloc.ret=void
tk func._Exit.arg.0=int,status
tk func._Exit.args=1
tk func._Exit.noreturn=true
tk func._Exit.ret=void
tk func.__assert_fail.arg.0=const char *,assertion
tk func.__assert_fail.arg.1=const char *,file
tk func.__assert_fail.arg.2=unsigned int,line
tk func.__assert_fail.arg.3=const char *,function
tk func.__assert_fail.args=4
tk func.__assert_fail.noreturn=true
tk func.__assert_fail.ret=void
tk func.__libc_init.arg.0=int,argc
tk func.__libc_init.arg.1=char **,argv
tk func.__libc_init.arg.2=char **,envp
tk func.__libc_init.args=3
tk func.__libc_init.noreturn=true
tk func.__libc_init.ret=void
tk func.__libc_init_array.args=0
tk func.__libc_init_array.ret=void
tk func.__libc_start_main.arg.0=func,main
tk func.__libc_start_main.arg.1=int,argc
tk func.__libc_start_main.arg.2=char **,ubp_av
tk func.__libc_start_main.arg.3=func,init
tk func.__libc_start_main.arg.4=func,fini
tk func.__libc_start_main.arg.5=func,rtld_fini
tk func.__libc_start_main.arg.6=void *,stack_end
tk func.__libc_start_main.args=7
tk func.__libc_start_main.noreturn=true
tk func.__libc_start_main.ret=int
tk func.__stack_chk_fail.args=0
tk func.__stack_chk_fail.noreturn=true
tk func.__stack_chk_fail.ret=void
tk func.__uClibc_main.arg.0=func,main
tk func.__uClibc_main.arg.1=int,argc
tk func.__uClibc_main.arg.2=char **,argv
tk func.__uClibc_main.arg.3=func,app_init
tk func.__uClibc_main.arg.4=func,app_fini
tk func.__uClibc_main.arg.5=func,rtld_fini
tk func.__uClibc_main.arg.6=void *,stack_end
tk func.__uClibc_main.args=7
tk func.__uClibc_main.noreturn=true
tk func.__uClibc_main.ret=int
tk func._exit.arg.0=int,status
tk func._exit.args=1
tk func._exit.noreturn=true
tk func._exit.ret=void
tk func.abort.args=0
tk func.abort.noreturn=true
tk func.abort.ret=void
tk func.abs.arg.0=int,j
tk func.abs.args=1
tk func.abs.ret=int
tk func.access.arg.0=const char *,path
tk func.access.arg.1=int,mode
tk func.access.args=2
tk func.access.ret=int
tk func.acos.arg.0=arithmetic,x
tk func.acos.args=1
tk func.acos.ret=floating_point
tk func.acosf.arg.0=float,x
tk func.acosf.args=1
tk func.acosf.ret=float
tk func.acosh.arg.0=arithmetic,x
tk func.acosh.args=1
tk func.acosh.ret=floating_point
tk func.acoshf.arg.0=float,x
tk func.acoshf.args=1
tk func.acoshf.ret=float
tk func.acoshl.arg.0=long double,x
tk func.acoshl.args=1
tk func.acoshl.ret=long double
tk func.acosl.arg.0=long double,x
tk func.acosl.args=1
tk func.acosl.ret=long double
tk func.arc4random.args=0
tk func.arc4random.ret=uint32_t
tk func.asctime.arg.0=const tm *,timeptr
tk func.asctime.args=1
tk func.asctime.ret=char *
tk func.asin.arg.0=arithmetic,x
tk func.asin.args=1
tk func.asin.ret=floating_point
tk func.asinf.arg.0=float,x
tk func.asinf.args=1
tk func.asinf.ret=float
tk func.asinh.arg.0=arithmetic,x
tk func.asinh.args=1
tk func.asinh.ret=floating_point
tk func.asinhf.arg.0=float,x
tk func.asinhf.args=1
tk func.asinhf.ret=float
tk func.asinhl.arg.0=long double,x
tk func.asinhl.args=1
tk func.asinhl.ret=long double
tk func.asinl.arg.0=long double,x
tk func.asinl.args=1
tk func.asinl.ret=long double
tk func.at_quick_exit.args=0
tk func.at_quick_exit.ret=int
tk func.atan.arg.0=arithmetic,x
tk func.atan.args=1
tk func.atan.ret=floating_point
tk func.atan2.arg.0=arithmetic,y
tk func.atan2.arg.1=arithmetic,x
tk func.atan2.args=2
tk func.atan2.ret=floating_point
tk func.atan2f.arg.0=float,y
tk func.atan2f.arg.1=float,x
tk func.atan2f.args=2
tk func.atan2f.ret=float
tk func.atan2l.arg.0=long double,y
tk func.atan2l.arg.1=long double,x
tk func.atan2l.args=2
tk func.atan2l.ret=long double
tk func.atanf.arg.0=float,x
tk func.atanf.args=1
tk func.atanf.ret=float
tk func.atanh.arg.0=arithmetic,x
tk func.atanh.args=1
tk func.atanh.ret=floating_point
tk func.atanhf.arg.0=float,x
tk func.atanhf.args=1
tk func.atanhf.ret=float
tk func.atanhl.arg.0=long double,x
tk func.atanhl.args=1
tk func.atanhl.ret=long double
tk func.atanl.arg.0=long double,x
tk func.atanl.args=1
tk func.atanl.ret=long double
tk func.atexit.arg.0=func,function
tk func.atexit.args=1
tk func.atexit.ret=int
tk func.atof.arg.0=const char *,str
tk func.atof.args=1
tk func.atof.ret=double
tk func.atoi.arg.0=const char *,str
tk func.atoi.args=1
tk func.atoi.ret=int
tk func.atol.arg.0=const char *,str
tk func.atol.args=1
tk func.atol.ret=long
tk func.atoll.arg.0=const char *,str
tk func.atoll.args=1
tk func.atoll.ret=long long
tk func.basename.arg.0=char *,path
tk func.basename.args=1
tk func.basename.ret=char *
tk func.bindtextdomain.arg.0=char *,domainname
tk func.bindtextdomain.arg.1=char *,dirname
tk func.bindtextdomain.args=2
tk func.bindtextdomain.ret=char *
tk func.bsearch.arg.0=const void *,key
tk func.bsearch.arg.1=const void *,base
tk func.bsearch.arg.2=size_t,nmemb
tk func.bsearch.arg.3=size_t,size
tk func.bsearch.arg.4=int,(*compar)(const void *,const void *)
tk func.bsearch.args=5
tk func.btowc.arg.0=int,c
tk func.btowc.args=1
tk func.btowc.ret=wint_t
tk func.bzero.arg.0=void *,s
tk func.bzero.arg.1=size_t,n
tk func.bzero.args=2
tk func.bzero.ret=void
tk func.calloc.arg.0=size_t,nmeb
tk func.calloc.arg.1=size_t,size
tk func.calloc.args=2
tk func.calloc.ret=void *
tk func.cbrt.arg.0=arithmetic,x
tk func.cbrt.args=1
tk func.cbrt.ret=floating_point
tk func.cbrtf.arg.0=float,x
tk func.cbrtf.args=1
tk func.cbrtf.ret=float
tk func.cbrtl.arg.0=long double,x
tk func.cbrtl.args=1
tk func.cbrtl.ret=long double
tk func.ceil.arg.0=arithmetic,x
tk func.ceil.args=1
tk func.ceil.ret=floating_point
tk func.ceilf.arg.0=float,x
tk func.ceilf.args=1
tk func.ceilf.ret=float
tk func.ceill.arg.0=long double,x
tk func.ceill.args=1
tk func.ceill.ret=long double
tk func.chmod.arg.0=const char *,path
tk func.chmod.arg.1=int,mode
tk func.chmod.args=2
tk func.chmod.ret=int
tk func.clearerr.arg.0=FILE *,stream
tk func.clearerr.args=1
tk func.clearerr.ret=void
tk func.clock.args=0
tk func.clock.ret=clock_t
tk func.close.arg.0=int,fildes
tk func.close.args=1
tk func.close.ret=int
tk func.compat_mode.arg.0=const char *,function
tk func.compat_mode.arg.1=const char *,mode
tk func.compat_mode.args=2
tk func.compat_mode.ret=bool
tk func.connect.arg.0=int,socket
tk func.connect.arg.1=void *,addr
tk func.connect.arg.2=size_t,addrlen
tk func.connect.args=3
tk func.connect.ret=ssize_t
tk func.copysign.arg.0=arithmetic,x
tk func.copysign.arg.1=arithmetic,y
tk func.copysign.args=2
tk func.copysign.ret=floating_point
tk func.copysignf.arg.0=float,x
tk func.copysignf.arg.1=float,y
tk func.copysignf.args=2
tk func.copysignf.ret=float
tk func.copysignl.arg.0=long double,x
tk func.copysignl.arg.1=long double,y
tk func.copysignl.args=2
tk func.copysignl.ret=long double
tk func.cos.arg.0=arithmetic,x
tk func.cos.args=1
tk func.cos.ret=floating_point
tk func.cosf.arg.0=float,x
tk func.cosf.args=1
tk func.cosf.ret=float
tk func.cosh.arg.0=arithmetic,x
tk func.cosh.args=1
tk func.cosh.ret=floating_point
tk func.coshf.arg.0=float,x
tk func.coshf.args=1
tk func.coshf.ret=float
tk func.coshl.arg.0=long double,x
tk func.coshl.args=1
tk func.coshl.ret=long double
tk func.cosl.arg.0=long double,x
tk func.cosl.args=1
tk func.cosl.ret=long double
tk func.ctime.arg.0=const time_t *,timer
tk func.ctime.args=1
tk func.ctime.ret=char *
tk func.difftime.arg.0=time_t,time1
tk func.difftime.arg.1=time_t,time0
tk func.difftime.args=2
tk func.difftime.ret=double
tk func.div.arg.0=int,numer
tk func.div.arg.1=int,denom
tk func.div.args=2
tk func.div.ret=div_t
tk func.erf.arg.0=arithmetic,x
tk func.erf.args=1
tk func.erf.ret=floating_point
tk func.erfc.arg.0=arithmetic,x
tk func.erfc.args=1
tk func.erfc.ret=floating_point
tk func.erfcf.arg.0=float,x
tk func.erfcf.args=1
tk func.erfcf.ret=float
tk func.erfcl.arg.0=long double,x
tk func.erfcl.args=1
tk func.erfcl.ret=long double
tk func.erff.arg.0=float,x
tk func.erff.args=1
tk func.erff.ret=float
tk func.erfl.arg.0=long double,x
tk func.erfl.args=1
tk func.erfl.ret=long double
tk func.err.arg.0=int,eval
tk func.err.arg.1=const char *,fmt
tk func.err.args=1
tk func.err.noreturn=true
tk func.err.ret=void
tk func.errc.arg.0=int,eval
tk func.errc.arg.1=int,code
tk func.errc.arg.2=const char *,fmt
tk func.errc.args=1
tk func.errc.noreturn=true
tk func.errc.ret=void
tk func.error.arg.0=int,status
tk func.error.arg.1=int,errname
tk func.error.arg.2=char *,format
tk func.error.args=3
tk func.error.ret=void
tk func.errx.arg.0=int,eval
tk func.errx.arg.1=const char *,fmt
tk func.errx.args=1
tk func.errx.noreturn=true
tk func.errx.ret=void
tk func.exit.arg.0=int,status
tk func.exit.args=1
tk func.exit.noreturn=true
tk func.exit.ret=void
tk func.exp.arg.0=arithmetic,x
tk func.exp.args=1
tk func.exp.ret=floating_point
tk func.exp2.arg.0=arithmetic,x
tk func.exp2.args=1
tk func.exp2.ret=floating_point
tk func.exp2f.arg.0=float,x
tk func.exp2f.args=1
tk func.exp2f.ret=float
tk func.exp2l.arg.0=long double,x
tk func.exp2l.args=1
tk func.exp2l.ret=long double
tk func.expf.arg.0=float,x
tk func.expf.args=1
tk func.expf.ret=float
tk func.expl.arg.0=long double,x
tk func.expl.args=1
tk func.expl.ret=long double
tk func.expm1.arg.0=arithmetic,x
tk func.expm1.args=1
tk func.expm1.ret=floating_point
tk func.expm1f.arg.0=float,x
tk func.expm1f.args=1
tk func.expm1f.ret=float
tk func.expm1l.arg.0=long double,x
tk func.expm1l.args=1
tk func.expm1l.ret=long double
tk func.fabs.arg.0=arithmetic,x
tk func.fabs.args=1
tk func.fabs.ret=floating_point
tk func.fabsf.arg.0=float,x
tk func.fabsf.args=1
tk func.fabsf.ret=float
tk func.fabsl.arg.0=long double,x
tk func.fabsl.args=1
tk func.fabsl.ret=long double
tk func.fchmod.arg.0=int,fd
tk func.fchmod.arg.1=int,mode
tk func.fchmod.args=2
tk func.fchmod.ret=int
tk func.fclose.arg.0=FILE *,stream
tk func.fclose.args=1
tk func.fclose.ret=int
tk func.fdim.arg.0=arithmetic,x
tk func.fdim.arg.1=arithmetic,y
tk func.fdim.args=2
tk func.fdim.ret=floating_point
tk func.fdimf.arg.0=float,x
tk func.fdimf.arg.1=float,y
tk func.fdimf.args=2
tk func.fdimf.ret=float
tk func.fdiml.arg.0=long double,x
tk func.fdiml.arg.1=long double,y
tk func.fdiml.args=2
tk func.fdiml.ret=long double
tk func.feclearexcept.arg.0=int,excepts
tk func.feclearexcept.args=1
tk func.feclearexcept.ret=int
tk func.fegetenv.arg.0=fenv_t *,envp
tk func.fegetenv.args=1
tk func.fegetenv.ret=int
tk func.fegetexceptflag.arg.0=fexcept_t *,flagp
tk func.fegetexceptflag.arg.1=int,excepts
tk func.fegetexceptflag.args=2
tk func.fegetexceptflag.ret=int
tk func.fegetround.args=0
tk func.fegetround.ret=int
tk func.feholdexcept.arg.0=fenv_t *,envp
tk func.feholdexcept.args=1
tk func.feholdexcept.ret=int
tk func.feof.arg.0=FILE *,stream
tk func.feof.args=1
tk func.feof.ret=int
tk func.feraiseexcept.arg.0=int,excepts
tk func.feraiseexcept.args=1
tk func.feraiseexcept.ret=int
tk func.ferror.arg.0=FILE *,stream
tk func.ferror.args=1
tk func.ferror.ret=int
tk func.fesetenv.arg.0=const,fenv_t*
tk func.fesetenv.args=1
tk func.fesetenv.ret=int
tk func.fesetexceptflag.arg.0=const,fexcept_t*
tk func.fesetexceptflag.arg.1=int,excepts
tk func.fesetexceptflag.args=2
tk func.fesetexceptflag.ret=int
tk func.fesetround.arg.0=int,round
tk func.fesetround.args=1
tk func.fesetround.ret=int
tk func.fetestexcept.arg.0=int,excepts
tk func.fetestexcept.args=1
tk func.fetestexcept.ret=int
tk func.feupdateenv.arg.0=const,fenv_t*
tk func.feupdateenv.args=1
tk func.feupdateenv.ret=int
tk func.fflush.arg.0=FILE *,stream
tk func.fflush.args=1
tk func.fflush.ret=int
tk func.fgetc.arg.0=FILE *,stream
tk func.fgetc.args=1
tk func.fgetc.ret=int
tk func.fgetpos.arg.0=FILE *,stream
tk func.fgetpos.arg.1=fpos_t*,pos
tk func.fgetpos.args=2
tk func.fgetpos.ret=int
tk func.fgets.arg.0=char *,s
tk func.fgets.arg.1=int,size
tk func.fgets.arg.2=FILE *,stream
tk func.fgets.args=3
tk func.fgets.ret=char *
tk func.fgetwc.arg.0=FILE *,stream
tk func.fgetwc.args=1
tk func.fgetwc.ret=wint_t
tk func.fgetws.arg.0=wchar_t *,s
tk func.fgetws.arg.1=int,n
tk func.fgetws.arg.2=FILE *,stream
tk func.fgetws.args=3
tk func.fgetws.ret=wchar_t*
tk func.fileno.arg.0=FILE *,stream
tk func.fileno.args=1
tk func.fileno.ret=int
tk func.floor.arg.0=arithmetic,x
tk func.floor.args=1
tk func.floor.ret=floating_point
tk func.floorf.arg.0=float,x
tk func.floorf.args=1
tk func.floorf.ret=float
tk func.floorl.arg.0=long double,x
tk func.floorl.args=1
tk func.floorl.ret=long double
tk func.fma.arg.0=arithmetic,x
tk func.fma.arg.1=arithmetic,y
tk func.fma.arg.2=arithmetic,z
tk func.fma.args=3
tk func.fma.ret=floating_point
tk func.fmaf.arg.0=float,x
tk func.fmaf.arg.1=float,y
tk func.fmaf.arg.2=float,z
tk func.fmaf.args=3
tk func.fmaf.ret=float
tk func.fmal.arg.0=long double,x
tk func.fmal.arg.1=long double,y
tk func.fmal.arg.2=long double,z
tk func.fmal.args=3
tk func.fmal.ret=long double
tk func.fmax.arg.0=arithmetic,x
tk func.fmax.arg.1=arithmetic,y
tk func.fmax.args=2
tk func.fmax.ret=floating_point
tk func.fmaxf.arg.0=float,x
tk func.fmaxf.arg.1=float,y
tk func.fmaxf.args=2
tk func.fmaxf.ret=float
tk func.fmaxl.arg.0=long double,x
tk func.fmaxl.arg.1=long double,y
tk func.fmaxl.args=2
tk func.fmaxl.ret=long double
tk func.fmin.arg.0=arithmetic,x
tk func.fmin.arg.1=arithmetic,y
tk func.fmin.args=2
tk func.fmin.ret=floating_point
tk func.fminf.arg.0=float,x
tk func.fminf.arg.1=float,y
tk func.fminf.args=2
tk func.fminf.ret=float
tk func.fminl.arg.0=long double,x
tk func.fminl.arg.1=long double,y
tk func.fminl.args=2
tk func.fminl.ret=long double
tk func.fmod.arg.0=arithmetic,x
tk func.fmod.arg.1=arithmetic,y
tk func.fmod.args=2
tk func.fmod.ret=floating_point
tk func.fmodf.arg.0=float,x
tk func.fmodf.arg.1=float,y
tk func.fmodf.args=2
tk func.fmodf.ret=float
tk func.fmodl.arg.0=long double,x
tk func.fmodl.arg.1=long double,y
tk func.fmodl.args=2
tk func.fmodl.ret=long double
tk func.fopen.arg.0=const char *,filename
tk func.fopen.arg.1=const char *,mode
tk func.fopen.args=2
tk func.fopen.ret=file*
tk func.fpclassify.arg.0=arithmetic,x
tk func.fpclassify.args=1
tk func.fpclassify.ret=int
tk func.fprintf.arg.0=FILE *,stream
tk func.fprintf.arg.1=const char *,format
tk func.fprintf.arg.2= ,...
tk func.fprintf.args=3
tk func.fprintf.ret=int
tk func.fputc.arg.0=int,c
tk func.fputc.arg.1=FILE *,stream
tk func.fputc.args=2
tk func.fputc.ret=int
tk func.fputs.arg.0=const char *,s
tk func.fputs.arg.1=FILE *,stream
tk func.fputs.args=2
tk func.fputs.ret=int
tk func.fputwc.arg.0=wchar_t,c
tk func.fputwc.arg.1=FILE *,stream
tk func.fputwc.args=2
tk func.fputwc.ret=wint_t
tk func.fputws.arg.0=const wchar_t *,s
tk func.fputws.arg.1=FILE *,stream
tk func.fputws.args=2
tk func.fputws.ret=int
tk func.fread.arg.0=void *,ptr
tk func.fread.arg.1=size_t,size
tk func.fread.arg.2=size_t,nmemb
tk func.fread.arg.3=FILE *,stream
tk func.fread.args=4
tk func.fread.ret=size_t
tk func.free.arg.0=void *,ptr
tk func.free.args=1
tk func.free.ret=void
tk func.freopen.arg.0=const char *,filename
tk func.freopen.arg.1=const char *,mode
tk func.freopen.arg.2=FILE *,stream
tk func.freopen.args=3
tk func.freopen.ret=file*
tk func.frexp.arg.0=arithmetic,value
tk func.frexp.arg.1=int *,exp
tk func.frexp.args=2
tk func.frexp.ret=floating_point
tk func.frexpf.arg.0=float,value
tk func.frexpf.arg.1=int *,exp
tk func.frexpf.args=2
tk func.frexpf.ret=float
tk func.frexpl.arg.0=long double,value
tk func.frexpl.arg.1=int *,exp
tk func.frexpl.args=2
tk func.frexpl.ret=long double
tk func.fscanf.arg.0=FILE *,stream
tk func.fscanf.arg.1=const char *,format
tk func.fscanf.arg.2=,...
tk func.fscanf.args=3
tk func.fscanf.ret=int
tk func.fseek.arg.0=FILE *,stream
tk func.fseek.arg.1=long,offset
tk func.fseek.arg.2=int,whence
tk func.fseek.args=3
tk func.fseek.ret=int
tk func.fsetpos.arg.0=FILE *,stream
tk func.fsetpos.arg.1=const fpos_t*,pos
tk func.fsetpos.args=2
tk func.fsetpos.ret=int
tk func.fstat.arg.0=int,fildes
tk func.fstat.arg.1=void *,buf
tk func.fstat.args=2
tk func.fstat.ret=int
tk func.ftell.arg.0=FILE *,stream
tk func.ftell.args=1
tk func.ftell.ret=long
tk func.fts_children_INODE64.arg.0=void*,ftsp
tk func.fts_children_INODE64.arg.1=int,opotions
tk func.fts_children_INODE64.args=2
tk func.fts_children_INODE64.ret=void *
tk func.fts_close_INODE64.arg.0=void*,ftsp
tk func.fts_close_INODE64.args=1
tk func.fts_close_INODE64.ret=int
tk func.fts_open_INODE64.arg.0=const char *,path_argv
tk func.fts_open_INODE64.arg.1=int,options
tk func.fts_open_INODE64.arg.2=void *,compar
tk func.fts_open_INODE64.arg.3=void *,ftsen$INODE64t
tk func.fts_open_INODE64.args=4
tk func.fts_open_INODE64.ret=void *
tk func.fts_read_INODE64.arg.0=void*,ftsp
tk func.fts_read_INODE64.args=1
tk func.fts_read_INODE64.ret=void *
tk func.fts_set_INODE64.arg.0=void*,ftsp
tk func.fts_set_INODE64.arg.1=void*,f
tk func.fts_set_INODE64.arg.2=int,options
tk func.fts_set_INODE64.args=3
tk func.fts_set_INODE64.ret=int
tk func.fwide.arg.0=FILE *,stream
tk func.fwide.arg.1=int,mode
tk func.fwide.args=2
tk func.fwide.ret=int
tk func.fwprintf.arg.0=FILE *,stream
tk func.fwprintf.arg.1=const wchar_t *,format
tk func.fwprintf.args=2
tk func.fwprintf.ret=int
tk func.fwrite.arg.0=const void *,ptr
tk func.fwrite.arg.1=size_t,size
tk func.fwrite.arg.2=size_t,nitems
tk func.fwrite.arg.3=FILE *,stream
tk func.fwrite.args=4
tk func.fwrite.ret=size_t
tk func.fwscanf.arg.0=FILE *,stream
tk func.fwscanf.arg.1=const wchar_t *,format
tk func.fwscanf.args=2
tk func.fwscanf.ret=int
tk func.getc.arg.0=FILE *,stream
tk func.getc.args=1
tk func.getc.ret=int
tk func.getchar.args=0
tk func.getchar.ret=int
tk func.getenv.arg.0=const char *,name
tk func.getenv.args=1
tk func.getenv.ret=char *
tk func.geteuid.args=0
tk func.geteuid.ret=uid_t
tk func.getopt.arg.0=int,argc
tk func.getopt.arg.1=const char * *,argv
tk func.getopt.arg.2=const char *,optstring
tk func.getopt.args=3
tk func.getopt.ret=int
tk func.getpid.args=0
tk func.getpid.ret=int
tk func.getprogname.args=0
tk func.getprogname.ret=const char *
tk func.gets.arg.0=char *,s
tk func.gets.args=1
tk func.gets.ret=char *
tk func.getsockname.arg.0=int,sockfd
tk func.getsockname.arg.1=struct sockaddr *,addr
tk func.getsockname.arg.2=socklen_t *,addrlen
tk func.getsockname.args=3
tk func.getsockname.ret=int
tk func.getsockopt.arg.0=int,sockfd
tk func.getsockopt.arg.1=int,level
tk func.getsockopt.arg.2=int,optname
tk func.getsockopt.arg.3=void *,optval
tk func.getsockopt.arg.4=socklen_t *,optlen
tk func.getsockopt.args=5
tk func.getsockopt.ret=int
tk func.getuid.args=0
tk func.getuid.ret=uid_t
tk func.getwc.arg.0=FILE *,stream
tk func.getwc.args=1
tk func.getwc.ret=wint_t
tk func.getwchar.args=0
tk func.getwchar.ret=wint_t
tk func.gmtime.arg.0=const time_t *,timer
tk func.gmtime.args=1
tk func.gmtime.ret=tm*
tk func.humanize_number.arg.0=char *,buf
tk func.humanize_number.arg.1=size_t,len
tk func.humanize_number.arg.2=int64_t,number
tk func.humanize_number.arg.3=const char *,suffix
tk func.humanize_number.arg.4=int,scale
tk func.humanize_number.arg.5=int,flags
tk func.humanize_number.args=1
tk func.humanize_number.ret=int
tk func.hypot.arg.0=arithmetic,x
tk func.hypot.arg.1=arithmetic,y
tk func.hypot.args=2
tk func.hypot.ret=floating_point
tk func.hypotf.arg.0=float,x
tk func.hypotf.arg.1=float,y
tk func.hypotf.args=2
tk func.hypotf.ret=float
tk func.hypotl.arg.0=long double,x
tk func.hypotl.arg.1=long double,y
tk func.hypotl.args=2
tk func.hypotl.ret=long double
tk func.ilogb.arg.0=arithmetic,x
tk func.ilogb.args=1
tk func.ilogb.ret=int
tk func.ilogbf.arg.0=float,x
tk func.ilogbf.args=1
tk func.ilogbf.ret=int
tk func.ilogbl.arg.0=long double,x
tk func.ilogbl.args=1
tk func.ilogbl.ret=int
tk func.imaxabs.arg.0=intmax_t,j
tk func.imaxabs.args=1
tk func.imaxabs.ret=intmax_t
tk func.imaxdiv.arg.0=intmax_t,numer
tk func.imaxdiv.arg.1=intmax_t,denom
tk func.imaxdiv.args=2
tk func.imaxdiv.ret=imaxdiv_t
tk func.inet_aton.arg.0=const char *,cp
tk func.inet_aton.arg.1=void *,pin
tk func.inet_aton.args=2
tk func.inet_aton.ret=int
tk func.inet_ntoa.arg.0=void *,in
tk func.inet_ntoa.args=1
tk func.inet_ntoa.ret=char *
tk func.initstate.arg.0=uint32_t,state
tk func.initstate.arg.1=char *,state
tk func.initstate.arg.2=size_t,size
tk func.initstate.args=3
tk func.initstate.ret=char *
tk func.ioctl.arg.0=int,fd
tk func.ioctl.arg.1=unsigned long,request
tk func.ioctl.args=2
tk func.ioctl.ret=int
tk func.isalnum.arg.0=int,c
tk func.isalnum.args=1
tk func.isalnum.ret=int
tk func.isalpha.arg.0=int,c
tk func.isalpha.args=1
tk func.isalpha.ret=int
tk func.isatty.arg.0=int,fd
tk func.isatty.args=1
tk func.isatty.ret=int
tk func.isblank.arg.0=int,c
tk func.isblank.args=1
tk func.isblank.ret=int
tk func.iscntrl.arg.0=int,c
tk func.iscntrl.args=1
tk func.iscntrl.ret=int
tk func.isdigit.arg.0=int,c
tk func.isdigit.args=1
tk func.isdigit.ret=int
tk func.isfinite.arg.0=arithmetic,x
tk func.isfinite.args=1
tk func.isfinite.ret=bool
tk func.isgraph.arg.0=int,c
tk func.isgraph.args=1
tk func.isgraph.ret=int
tk func.isgreater.arg.0=arithmetic,x
tk func.isgreater.arg.1=arithmetic,y
tk func.isgreater.args=2
tk func.isgreater.ret=bool
tk func.isgreaterequal.arg.0=arithmetic,x
tk func.isgreaterequal.arg.1=arithmetic,y
tk func.isgreaterequal.args=2
tk func.isgreaterequal.ret=bool
tk func.isinf.arg.0=arithmetic,x
tk func.isinf.args=1
tk func.isinf.ret=bool
tk func.isless.arg.0=arithmetic,x
tk func.isless.arg.1=arithmetic,y
tk func.isless.args=2
tk func.isless.ret=bool
tk func.islessequal.arg.0=arithmetic,x
tk func.islessequal.arg.1=arithmetic,y
tk func.islessequal.args=2
tk func.islessequal.ret=bool
tk func.islessgreater.arg.0=arithmetic,x
tk func.islessgreater.arg.1=arithmetic,y
tk func.islessgreater.args=2
tk func.islessgreater.ret=bool
tk func.islower.arg.0=int,c
tk func.islower.args=1
tk func.islower.ret=int
tk func.isnan.arg.0=arithmetic,x
tk func.isnan.args=1
tk func.isnan.ret=bool
tk func.isnormal.arg.0=arithmetic,x
tk func.isnormal.args=1
tk func.isnormal.ret=bool
tk func.isprint.arg.0=int,c
tk func.isprint.args=1
tk func.isprint.ret=int
tk func.ispunct.arg.0=int,c
tk func.ispunct.args=1
tk func.ispunct.ret=int
tk func.isspace.arg.0=int,c
tk func.isspace.args=1
tk func.isspace.ret=int
tk func.isunordered.arg.0=arithmetic,x
tk func.isunordered.arg.1=arithmetic,y
tk func.isunordered.args=2
tk func.isunordered.ret=bool
tk func.isupper.arg.0=int,c
tk func.isupper.args=1
tk func.isupper.ret=int
tk func.iswalnum.arg.0=wint_t,wc
tk func.iswalnum.args=1
tk func.iswalnum.ret=int
tk func.iswalpha.arg.0=wint_t,wc
tk func.iswalpha.args=1
tk func.iswalpha.ret=int
tk func.iswblank.arg.0=wint_t,wc
tk func.iswblank.args=1
tk func.iswblank.ret=int
tk func.iswcntrl.arg.0=wint_t,wc
tk func.iswcntrl.args=1
tk func.iswcntrl.ret=int
tk func.iswctype.arg.0=wint_t,wc
tk func.iswctype.arg.1=wctype_t,desc
tk func.iswctype.args=2
tk func.iswctype.ret=int
tk func.iswdigit.arg.0=wint_t,wc
tk func.iswdigit.args=1
tk func.iswdigit.ret=int
tk func.iswgraph.arg.0=wint_t,wc
tk func.iswgraph.args=1
tk func.iswgraph.ret=int
tk func.iswlower.arg.0=wint_t,wc
tk func.iswlower.args=1
tk func.iswlower.ret=int
tk func.iswprint.arg.0=wint_t,wc
tk func.iswprint.args=1
tk func.iswprint.ret=int
tk func.iswpunct.arg.0=wint_t,wc
tk func.iswpunct.args=1
tk func.iswpunct.ret=int
tk func.iswspace.arg.0=wint_t,wc
tk func.iswspace.args=1
tk func.iswspace.ret=int
tk func.iswupper.arg.0=wint_t,wc
tk func.iswupper.args=1
tk func.iswupper.ret=int
tk func.iswxdigit.arg.0=wint_t,wc
tk func.iswxdigit.args=1
tk func.iswxdigit.ret=int
tk func.isxdigit.arg.0=int,c
tk func.isxdigit.args=1
tk func.isxdigit.ret=int
tk func.labs.arg.0=long,j
tk func.labs.args=1
tk func.labs.ret=long
tk func.ldexp.arg.0=arithmetic,value
tk func.ldexp.arg.1=int,exp
tk func.ldexp.args=2
tk func.ldexp.ret=floating_point
tk func.ldexpf.arg.0=float,value
tk func.ldexpf.arg.1=int,exp
tk func.ldexpf.args=2
tk func.ldexpf.ret=float
tk func.ldexpl.arg.0=long double,value
tk func.ldexpl.arg.1=int,exp
tk func.ldexpl.args=2
tk func.ldexpl.ret=long double
tk func.ldiv.arg.0=long,numer
tk func.ldiv.arg.1=long,denom
tk func.ldiv.args=2
tk func.ldiv.ret=ldiv_t
tk func.lgamma.arg.0=arithmetic,x
tk func.lgamma.args=1
tk func.lgamma.ret=floating_point
tk func.lgammaf.arg.0=float,x
tk func.lgammaf.args=1
tk func.lgammaf.ret=float
tk func.lgammal.arg.0=long double,x
tk func.lgammal.args=1
tk func.lgammal.ret=long double
tk func.llabs.arg.0=long long,j
tk func.llabs.args=1
tk func.llabs.ret=long long
tk func.lldiv.arg.0=long long,numer
tk func.lldiv.arg.1=long long,denom
tk func.lldiv.args=2
tk func.lldiv.ret=lldiv_t
tk func.llrint.arg.0=arithmetic,x
tk func.llrint.args=1
tk func.llrint.ret=long long
tk func.llrintf.arg.0=float,x
tk func.llrintf.args=1
tk func.llrintf.ret=long long
tk func.llrintl.arg.0=long double,x
tk func.llrintl.args=1
tk func.llrintl.ret=long long
tk func.llround.arg.0=arithmetic,x
tk func.llround.args=1
tk func.llround.ret=long long
tk func.llroundf.arg.0=float,x
tk func.llroundf.args=1
tk func.llroundf.ret=long long
tk func.llroundl.arg.0=long double,x
tk func.llroundl.args=1
tk func.llroundl.ret=long long
tk func.localeconv.args=0
tk func.localeconv.ret=lconv*
tk func.localtime.arg.0=const time_t *,timer
tk func.localtime.args=1
tk func.localtime.ret=tm*
tk func.log.arg.0=arithmetic,x
tk func.log.args=1
tk func.log.ret=floating_point
tk func.log10.arg.0=arithmetic,x
tk func.log10.args=1
tk func.log10.ret=floating_point
tk func.log10f.arg.0=float,x
tk func.log10f.args=1
tk func.log10f.ret=float
tk func.log10l.arg.0=long double,x
tk func.log10l.args=1
tk func.log10l.ret=long double
tk func.log1p.arg.0=arithmetic,x
tk func.log1p.args=1
tk func.log1p.ret=floating_point
tk func.log1pf.arg.0=float,x
tk func.log1pf.args=1
tk func.log1pf.ret=float
tk func.log1pl.arg.0=long double,x
tk func.log1pl.args=1
tk func.log1pl.ret=long double
tk func.log2.arg.0=arithmetic,x
tk func.log2.args=1
tk func.log2.ret=floating_point
tk func.log2f.arg.0=float,x
tk func.log2f.args=1
tk func.log2f.ret=float
tk func.log2l.arg.0=long double,x
tk func.log2l.args=1
tk func.log2l.ret=long double
tk func.logb.arg.0=arithmetic,x
tk func.logb.args=1
tk func.logb.ret=floating_point
tk func.logbf.arg.0=float,x
tk func.logbf.args=1
tk func.logbf.ret=float
tk func.logbl.arg.0=long double,x
tk func.logbl.args=1
tk func.logbl.ret=long double
tk func.logf.arg.0=float,x
tk func.logf.args=1
tk func.logf.ret=float
tk func.logl.arg.0=long double,x
tk func.logl.args=1
tk func.logl.ret=long double
tk func.longjmp.arg.0=jmp_buf,env
tk func.longjmp.arg.1=int,val
tk func.longjmp.args=2
tk func.longjmp.ret=void
tk func.lrint.arg.0=arithmetic,x
tk func.lrint.args=1
tk func.lrint.ret=long
tk func.lrintf.arg.0=float,x
tk func.lrintf.args=1
tk func.lrintf.ret=long
tk func.lrintl.arg.0=long double,x
tk func.lrintl.args=1
tk func.lrintl.ret=long
tk func.lround.arg.0=arithmetic,x
tk func.lround.args=1
tk func.lround.ret=long
tk func.lroundf.arg.0=float,x
tk func.lroundf.args=1
tk func.lroundf.ret=long
tk func.lroundl.arg.0=long double,x
tk func.lroundl.args=1
tk func.lroundl.ret=long
tk func.lstat.arg.0=const char *,path
tk func.lstat.arg.1=void *,buf
tk func.lstat.args=2
tk func.lstat.ret=void
tk func.main.arg.0=int,argc
tk func.main.arg.1=char **,argv
tk func.main.arg.2=char **,envp
tk func.main.args=3
tk func.main.ret=int
tk func.malloc.arg.0=size_t,size
tk func.malloc.args=1
tk func.malloc.ret= void *
tk func.maskrune.arg.0=uint32_t,c
tk func.maskrune.arg.1=unsigned long,f
tk func.maskrune.args=2
tk func.maskrune.ret=int
tk func.mblen.arg.0=const char *,s
tk func.mblen.arg.1=size_t,n
tk func.mblen.args=2
tk func.mblen.ret=int
tk func.mbrlen.arg.0=const char *,s
tk func.mbrlen.arg.1=size_t,n
tk func.mbrlen.arg.2=mbstate_t *,ps
tk func.mbrlen.args=3
tk func.mbrlen.ret=size_t
tk func.mbrtowc.arg.0=wchar_t *,pwc
tk func.mbrtowc.arg.1=const char *,s
tk func.mbrtowc.arg.2=size_t,n
tk func.mbrtowc.arg.3=mbstate_t *,ps
tk func.mbrtowc.args=4
tk func.mbrtowc.ret=size_t
tk func.mbsinit.arg.0=const mbstate_t *,ps
tk func.mbsinit.args=1
tk func.mbsinit.ret=int
tk func.mbsrtowcs.arg.0=wchar_t *,dst
tk func.mbsrtowcs.arg.1=const char * *,src
tk func.mbsrtowcs.arg.2=size_t,len
tk func.mbsrtowcs.arg.3=mbstate_t *,ps
tk func.mbsrtowcs.args=4
tk func.mbsrtowcs.ret=size_t
tk func.mbstowcs.arg.0=wchar_t *,pwcs
tk func.mbstowcs.arg.1=const char *,s
tk func.mbstowcs.arg.2=size_t,n
tk func.mbstowcs.args=3
tk func.mbstowcs.ret=size_t
tk func.mbtowc.arg.0=wchar_t *,pwc
tk func.mbtowc.arg.1=const char *,s
tk func.mbtowc.arg.2=size_t,n
tk func.mbtowc.args=3
tk func.mbtowc.ret=int
tk func.memchr.arg.0=void *,s
tk func.memchr.arg.1=int,c
tk func.memchr.arg.2=size_t,n
tk func.memchr.args=3
tk func.memchr.ret=void *
tk func.memcmp.arg.0=const void *,s1
tk func.memcmp.arg.1=const void *,s2
tk func.memcmp.arg.2=size_t,n
tk func.memcmp.args=3
tk func.memcmp.ret=int
tk func.memcpy.arg.0=void *,s1
tk func.memcpy.arg.1=const void *,s2
tk func.memcpy.arg.2=size_t,n
tk func.memcpy.args=3
tk func.memcpy.ret=void *
tk func.memmem.arg.0=const void *,big
tk func.memmem.arg.1=int,big_len
tk func.memmem.arg.2=const void *,little
tk func.memmem.arg.3=int,little_len
tk func.memmem.args=4
tk func.memmem.ret=void *
tk func.memmove.arg.0=void *,s1
tk func.memmove.arg.1=const void *,s2
tk func.memmove.arg.2=size_t,n
tk func.memmove.args=3
tk func.memmove.ret=void *
tk func.memset.arg.0=void *,s
tk func.memset.arg.1=int,c
tk func.memset.arg.2=size_t,n
tk func.memset.args=3
tk func.memset.ret=void *
tk func.mkstemp.arg.0=char *,template
tk func.mkstemp.args=1
tk func.mkstemp.ret=int
tk func.mktemp.arg.0=char *,template
tk func.mktemp.args=1
tk func.mktemp.ret=char *
tk func.mktime.arg.0=tm *,timeptr
tk func.mktime.args=1
tk func.mktime.ret=time_t
tk func.mmap.arg.0=void*,addr
tk func.mmap.arg.1=size_t,length
tk func.mmap.arg.2=int,prot
tk func.mmap.arg.3=int,flags
tk func.mmap.arg.4=int,fd
tk func.mmap.arg.5=size_t,offset
tk func.mmap.args=6
tk func.mmap.ret=void*
tk func.modf.arg.0=floating_point,value
tk func.modf.arg.1=floating_point *,iptr
tk func.modf.args=2
tk func.modf.ret=floating_point
tk func.modff.arg.0=float,value
tk func.modff.arg.1=float *,iptr
tk func.modff.args=2
tk func.modff.ret=float
tk func.modfl.arg.0=long double,value
tk func.modfl.arg.1=long double *,iptr
tk func.modfl.args=2
tk func.modfl.ret=long double
tk func.munmap.arg.0=void*,addr
tk func.munmap.arg.1=size_t,length
tk func.munmap.args=2
tk func.munmap.ret=int
tk func.nan.arg.0=const char *,str
tk func.nan.args=1
tk func.nan.ret=double
tk func.nanf.arg.0=const char *,str
tk func.nanf.args=1
tk func.nanf.ret=float
tk func.nanl.arg.0=const char *,str
tk func.nanl.args=1
tk func.nanl.ret=long double
tk func.nanosleep.arg.0=const struct timespec *,req
tk func.nanosleep.arg.1=struct timespec *,rem
tk func.nanosleep.args=2
tk func.nanosleep.ret=int
tk func.nearbyint.arg.0=arithmetic,x
tk func.nearbyint.args=1
tk func.nearbyint.ret=floating_point
tk func.nearbyintf.arg.0=float,x
tk func.nearbyintf.args=1
tk func.nearbyintf.ret=float
tk func.nearbyintl.arg.0=long double,x
tk func.nearbyintl.args=1
tk func.nearbyintl.ret=long double
tk func.nextafter.arg.0=arithmetic,x
tk func.nextafter.arg.1=arithmetic,y
tk func.nextafter.args=2
tk func.nextafter.ret=floating_point
tk func.nextafterf.arg.0=float,x
tk func.nextafterf.arg.1=float,y
tk func.nextafterf.args=2
tk func.nextafterf.ret=float
tk func.nextafterl.arg.0=long double,x
tk func.nextafterl.arg.1=long double,y
tk func.nextafterl.args=2
tk func.nextafterl.ret=long double
tk func.nexttoward.arg.0=arithmetic,x
tk func.nexttoward.arg.1=long double,y
tk func.nexttoward.args=2
tk func.nexttoward.ret=floating_point
tk func.nexttowardf.arg.0=float,x
tk func.nexttowardf.arg.1=long double,y
tk func.nexttowardf.args=2
tk func.nexttowardf.ret=float
tk func.nexttowardl.arg.0=long double,x
tk func.nexttowardl.arg.1=long double,y
tk func.nexttowardl.args=2
tk func.nexttowardl.ret=long double
tk func.nl_langinfo.arg.0=nl_item,item
tk func.nl_langinfo.args=1
tk func.nl_langinfo.ret=char *
tk func.nl_langinfo_l.arg.0=nl_item,item
tk func.nl_langinfo_l.arg.1=locale_t locale
tk func.nl_langinfo_l.args=2
tk func.nl_langinfo_l.ret=char *
tk func.objc_enumerationMutation.arg.0=void *,instance
tk func.objc_enumerationMutation.args=1
tk func.objc_enumerationMutation.ret=void
tk func.objc_msgSend.arg.0=void *,instance
tk func.objc_msgSend.arg.1=char *,selector
tk func.objc_msgSend.args=2
tk func.objc_msgSend.ret=void *
tk func.objc_msgSendSuper2.arg.0=void *,instance
tk func.objc_msgSendSuper2.arg.1=char *,selector
tk func.objc_msgSendSuper2.args=2
tk func.objc_msgSendSuper2.ret=void *
tk func.objc_release.arg.0=void *,instance
tk func.objc_release.args=1
tk func.objc_release.ret=void
tk func.objc_retain.arg.0=void *,instance
tk func.objc_retain.args=1
tk func.objc_retain.ret=void
tk func.objc_retainAutoreleasedReturnValue.arg.0=void *,instance
tk func.objc_retainAutoreleasedReturnValue.args=1
tk func.objc_retainAutoreleasedReturnValue.ret=void
tk func.objc_storeStrong.arg.0=void *,instance
tk func.objc_storeStrong.arg.1=int,type
tk func.objc_storeStrong.args=2
tk func.objc_storeStrong.ret=void *
tk func.open.arg.0=const char *,path
tk func.open.arg.1=int,oflag
tk func.open.args=2
tk func.open.ret=int
tk func.openat.arg.0=int,fd
tk func.openat.arg.1=const char *,path
tk func.openat.arg.2=int,oflag
tk func.openat.args=3
tk func.openat.ret=int
tk func.pclose.arg.0=FILE *,stream
tk func.pclose.args=1
tk func.pclose.ret=int
tk func.perror.arg.0=const char *,s
tk func.perror.args=1
tk func.perror.ret=void
tk func.popen.arg.0=const char *,filename
tk func.popen.arg.1=const char *,mode
tk func.popen.args=2
tk func.popen.ret=file*
tk func.pow.arg.0=arithmetic,x
tk func.pow.arg.1=arithmetic,y
tk func.pow.args=2
tk func.pow.ret=floating_point
tk func.powf.arg.0=float,x
tk func.powf.arg.1=float,y
tk func.powf.args=2
tk func.powf.ret=float
tk func.powl.arg.0=long double,x
tk func.powl.arg.1=long double,y
tk func.powl.args=2
tk func.powl.ret=long double
tk func.prctl.arg.0=int,option
tk func.prctl.arg.1=unsigned long,v2
tk func.prctl.arg.2=unsigned long,v3
tk func.prctl.arg.3=unsigned long,v4
tk func.prctl.arg.4=unsigned long,v5
tk func.prctl.args=5
tk func.prctl.ret=int
tk func.printf.arg.0=const char *,format
tk func.printf.args=1
tk func.printf.ret=int
tk func.ptrace.arg.0=__ptrace_request,request
tk func.ptrace.arg.1=pid_t,pid
tk func.ptrace.arg.2=void*,addr
tk func.ptrace.arg.3=void*,data
tk func.ptrace.args=4
tk func.ptrace.ret=long
tk func.putc.arg.0=int,c
tk func.putc.arg.1=FILE *,stream
tk func.putc.args=2
tk func.putc.ret=int
tk func.putchar.arg.0=int,c
tk func.putchar.args=1
tk func.putchar.ret=int
tk func.puts.arg.0=const char *,s
tk func.puts.args=1
tk func.puts.ret=int
tk func.pututxline.arg.0=void *,utx
tk func.pututxline.args=1
tk func.pututxline.ret=void *
tk func.putwc.arg.0=wchar_t,c
tk func.putwc.arg.1=FILE *,stream
tk func.putwc.args=2
tk func.putwc.ret=wint_t
tk func.putwchar.arg.0=wchar_t,c
tk func.putwchar.args=1
tk func.putwchar.ret=wint_t
tk func.qsort.arg.0=void *,base
tk func.qsort.arg.1=size_t,nmemb
tk func.qsort.arg.2=size_t,size
tk func.qsort.arg.3=int(*compar)(const void *,const void *)
tk func.qsort.args=4
tk func.quick_exit.arg.0=int,status
tk func.quick_exit.args=1
tk func.quick_exit.ret=void
tk func.raise.arg.0=int,sig
tk func.raise.args=1
tk func.raise.ret=int
tk func.rand.args=0
tk func.rand.ret=int
tk func.random.args=0
tk func.random.ret=uint32_t
tk func.read.arg.0=int,fildes
tk func.read.arg.1=void *,buf
tk func.read.arg.2=size_t,nbyte
tk func.read.args=3
tk func.read.ret=ssize_t
tk func.realloc.arg.0=void *,ptr
tk func.realloc.arg.1=size_t,size
tk func.realloc.args=2
tk func.realloc.ret=void *
tk func.remainder.arg.0=arithmetic,x
tk func.remainder.arg.1=arithmetic,y
tk func.remainder.args=2
tk func.remainder.ret=floating_point
tk func.remainderf.arg.0=float,x
tk func.remainderf.arg.1=float,y
tk func.remainderf.args=2
tk func.remainderf.ret=float
tk func.remainderl.arg.0=long double,x
tk func.remainderl.arg.1=long double,y
tk func.remainderl.args=2
tk func.remainderl.ret=long double
tk func.remove.arg.0=const char *,filename
tk func.remove.args=1
tk func.remove.ret=int
tk func.remquo.arg.0=arithmetic,x
tk func.remquo.arg.1=arithmetic,y
tk func.remquo.arg.2=int *,pquo
tk func.remquo.args=3
tk func.remquo.ret=floating_point
tk func.remquof.arg.0=float,x
tk func.remquof.arg.1=float,y
tk func.remquof.arg.2=int *,pquo
tk func.remquof.args=3
tk func.remquof.ret=float
tk func.remquol.arg.0=long double,x
tk func.remquol.arg.1=long double,y
tk func.remquol.arg.2=int *,pquo
tk func.remquol.args=3
tk func.remquol.ret=long double
tk func.rename.arg.0=const char *,oldpath
tk func.rename.arg.1=const char *,newpath
tk func.rename.args=2
tk func.rename.ret=int
tk func.rewind.arg.0=FILE *,stream
tk func.rewind.args=1
tk func.rewind.ret=void
tk func.rint.arg.0=arithmetic,x
tk func.rint.args=1
tk func.rint.ret=floating_point
tk func.rintf.arg.0=float,x
tk func.rintf.args=1
tk func.rintf.ret=float
tk func.rintl.arg.0=long double,x
tk func.rintl.args=1
tk func.rintl.ret=long double
tk func.round.arg.0=arithmetic,x
tk func.round.args=1
tk func.round.ret=floating_point
tk func.roundf.arg.0=float,x
tk func.roundf.args=1
tk func.roundf.ret=float
tk func.roundl.arg.0=long double,x
tk func.roundl.args=1
tk func.roundl.ret=long double
tk func.scalbln.arg.0=arithmetic,x
tk func.scalbln.arg.1=long,ex
tk func.scalbln.args=2
tk func.scalbln.ret=floating_point
tk func.scalblnf.arg.0=float,x
tk func.scalblnf.arg.1=long,ex
tk func.scalblnf.args=2
tk func.scalblnf.ret=float
tk func.scalblnl.arg.0=long double,x
tk func.scalblnl.arg.1=long,ex
tk func.scalblnl.args=2
tk func.scalblnl.ret=long double
tk func.scalbn.arg.0=arithmetic,x
tk func.scalbn.arg.1=int,ex
tk func.scalbn.args=2
tk func.scalbn.ret=floating_point
tk func.scalbnf.arg.0=float,x
tk func.scalbnf.arg.1=int,ex
tk func.scalbnf.args=2
tk func.scalbnf.ret=float
tk func.scalbnl.arg.0=long double,x
tk func.scalbnl.arg.1=int,ex
tk func.scalbnl.args=2
tk func.scalbnl.ret=long double
tk func.scanf.arg.0=const char *,format
tk func.scanf.args=1
tk func.scanf.ret=int
tk func.select.arg.0=int,nfds
tk func.select.arg.1=fd_set *,readfds
tk func.select.arg.2=fd_set *,writefds
tk func.select.arg.3=fd_set *,exceptfds
tk func.select.arg.4=struct timeval *,timeout
tk func.select.args=5
tk func.select.ret=int
tk func.send.arg.0=int,socket
tk func.send.arg.1=void *,buffer
tk func.send.arg.2=size_t,length
tk func.send.arg.3=int,flags
tk func.send.args=4
tk func.send.ret=ssize_t
tk func.setbuf.arg.0=FILE *,stream
tk func.setbuf.arg.1=char *,buf
tk func.setbuf.args=2
tk func.setbuf.ret=void
tk func.setenv.arg.0=const char *,name
tk func.setenv.arg.1=const char *,value
tk func.setenv.arg.2=int,overwrite
tk func.setenv.args=3
tk func.setenv.ret=int
tk func.setjmp.arg.0=jmpbuf,env
tk func.setjmp.args=1
tk func.setjmp.ret=int
tk func.setlocale.arg.0=int,category
tk func.setlocale.arg.1=const char *,locale
tk func.setlocale.args=2
tk func.setlocale.ret=char *
tk func.setsockopt.arg.0=int,sockfd
tk func.setsockopt.arg.1=int,level
tk func.setsockopt.arg.2=int,optname
tk func.setsockopt.arg.3=void *,optval
tk func.setsockopt.arg.4=socklen_t,optlen
tk func.setsockopt.args=5
tk func.setsockopt.ret=int
tk func.setstate.arg.0=const char *,state
tk func.setstate.args=1
tk func.setstate.ret=const char *
tk func.setvbuf.arg.0=FILE*,stream
tk func.setvbuf.arg.1=char *,buf
tk func.setvbuf.arg.2=int,mode
tk func.setvbuf.arg.3=size_t,size
tk func.setvbuf.args=4
tk func.setvbuf.ret=int
tk func.sigaction.arg.0=int,signum
tk func.sigaction.arg.1=const struct sigaction *,act
tk func.sigaction.arg.2=struct sigaction *,oldact
tk func.sigaction.args=3
tk func.sigaction.ret=int
tk func.signal.arg.0=int,sig
tk func.signal.arg.1=void *,func
tk func.signal.args=2
tk func.signal.ret=void
tk func.signbit.arg.0=arithmetic,x
tk func.signbit.args=1
tk func.signbit.ret=bool
tk func.sin.arg.0=arithmetic,x
tk func.sin.args=1
tk func.sin.ret=floating_point
tk func.sinf.arg.0=float,x
tk func.sinf.args=1
tk func.sinf.ret=float
tk func.sinh.arg.0=arithmetic,x
tk func.sinh.args=1
tk func.sinh.ret=floating_point
tk func.sinhf.arg.0=float,x
tk func.sinhf.args=1
tk func.sinhf.ret=float
tk func.sinhl.arg.0=long double,x
tk func.sinhl.args=1
tk func.sinhl.ret=long double
tk func.sinl.arg.0=long double,x
tk func.sinl.args=1
tk func.sinl.ret=long double
tk func.sleep.arg.0=int,s
tk func.sleep.args=1
tk func.sleep.ret=int
tk func.snprintf.arg.0=char *,s
tk func.snprintf.arg.1=size_t,size
tk func.snprintf.arg.2=const char *,format
tk func.snprintf.arg.3=,...
tk func.snprintf.args=4
tk func.snprintf.ret=int
tk func.sprintf.arg.0=char *,s
tk func.sprintf.arg.1=const char *,format
tk func.sprintf.arg.2=,...
tk func.sprintf.args=3
tk func.sprintf.ret=int
tk func.sprintf_chk.arg.0=char *,s
tk func.sprintf_chk.arg.1=const char *,format
tk func.sprintf_chk.arg.2=,...
tk func.sprintf_chk.args=3
tk func.sprintf_chk.ret=int
tk func.sqrt.arg.0=arithmetic,x
tk func.sqrt.args=1
tk func.sqrt.ret=floating_point
tk func.sqrtf.arg.0=float,x
tk func.sqrtf.args=1
tk func.sqrtf.ret=float
tk func.sqrtl.arg.0=long double,x
tk func.sqrtl.args=1
tk func.sqrtl.ret=long double
tk func.srand.arg.0=int,seed
tk func.srand.args=1
tk func.srand.ret=void
tk func.srandom.arg.0=uint32_t,seed
tk func.srandom.args=1
tk func.srandom.ret=uint32_t
tk func.srandomdev.args=0
tk func.srandomdev.ret=void
tk func.sscanf.arg.0=const char *,s
tk func.sscanf.arg.1=const char *,format
tk func.sscanf.arg.2= ,...
tk func.sscanf.args=3
tk func.sscanf.ret=int
tk func.strcasecmp.arg.0=const char *,s1
tk func.strcasecmp.arg.1=const char *,s2
tk func.strcasecmp.args=2
tk func.strcasecmp.ret=int
tk func.strcat.arg.0=char *,s1
tk func.strcat.arg.1=const char *,s2
tk func.strcat.args=2
tk func.strcat.ret=char *
tk func.strchr.arg.0=const char *,s
tk func.strchr.arg.1=int,c
tk func.strchr.args=2
tk func.strchr.ret=char *
tk func.strcmp.arg.0=const char *,s1
tk func.strcmp.arg.1=const char *,s2
tk func.strcmp.args=2
tk func.strcmp.ret=int
tk func.strcoll.arg.0=const char *,s1
tk func.strcoll.arg.1=const char *,s2
tk func.strcoll.args=2
tk func.strcoll.ret=int
tk func.strcpy.arg.0=char *,dest
tk func.strcpy.arg.1=const char *,src
tk func.strcpy.args=2
tk func.strcpy.ret=char *
tk func.strcpy_chk.arg.0=char *,dest
tk func.strcpy_chk.arg.1=const char *,src
tk func.strcpy_chk.args=2
tk func.strcpy_chk.ret=char *
tk func.strcspn.arg.0=const char *,s1
tk func.strcspn.arg.1=const char *,s2
tk func.strcspn.args=2
tk func.strcspn.ret=size_t
tk func.strdup.arg.0=const char *,src
tk func.strdup.args=1
tk func.strdup.ret=char *
tk func.strerror.arg.0=int,errnum
tk func.strerror.args=1
tk func.strerror.ret=char *
tk func.strftime.arg.0=char *,s
tk func.strftime.arg.1=size_t,maxsize
tk func.strftime.arg.2=const char *,format
tk func.strftime.arg.3=const tm *,timeptr
tk func.strftime.args=4
tk func.strftime.ret=size_t
tk func.strlcpy.arg.0=char *,dest
tk func.strlcpy.arg.1=const char *,src
tk func.strlcpy.arg.2=size_t, n
tk func.strlcpy.args=3
tk func.strlcpy.ret=char *
tk func.strlen.arg.0=const char *,s
tk func.strlen.args=1
tk func.strlen.ret=size_t
tk func.strmode.arg.0=int,mode
tk func.strmode.arg.1=char *,bp
tk func.strmode.args=2
tk func.strmode.ret=void
tk func.strncasecmp.arg.0=const char *,s1
tk func.strncasecmp.arg.1=const char *,s2
tk func.strncasecmp.arg.2=size_t,n
tk func.strncasecmp.args=3
tk func.strncasecmp.ret=int
tk func.strncat.arg.0=char *,s1
tk func.strncat.arg.1=const char *,s2
tk func.strncat.arg.2=size_t,n
tk func.strncat.args=3
tk func.strncat.ret=char *
tk func.strncmp.arg.0=const char *,s1
tk func.strncmp.arg.1=const char *,s2
tk func.strncmp.arg.2=size_t,n
tk func.strncmp.args=3
tk func.strncmp.ret=int
tk func.strncpy.arg.0=char *,dest
tk func.strncpy.arg.1=const char *,src
tk func.strncpy.arg.2=size_t, n
tk func.strncpy.args=3
tk func.strncpy.ret=char *
tk func.strndup.arg.0=const char *,src
tk func.strndup.arg.1=int,n
tk func.strndup.args=2
tk func.strndup.ret=char *
tk func.strpbrk.arg.0=const char *,s1
tk func.strpbrk.arg.1=const char *,s2
tk func.strpbrk.args=2
tk func.strpbrk.ret=char *
tk func.strrchr.arg.0=const char *,s
tk func.strrchr.arg.1=int,c
tk func.strrchr.args=2
tk func.strrchr.ret=char *
tk func.strspn.arg.0=const char *,s1
tk func.strspn.arg.1=const char *,s2
tk func.strspn.args=2
tk func.strspn.ret=size_t
tk func.strstr.arg.0=const char *,s1
tk func.strstr.arg.1=const char *,s2
tk func.strstr.args=2
tk func.strstr.ret=char *
tk func.strtod.arg.0=const char *,str
tk func.strtod.arg.1=char * *,endptr
tk func.strtod.args=2
tk func.strtod.ret=double
tk func.strtof.arg.0=const char *,str
tk func.strtof.arg.1=char * *,endptr
tk func.strtof.args=2
tk func.strtof.ret=float
tk func.strtoimax.arg.0=const char *,str
tk func.strtoimax.arg.1=char * *,endptr
tk func.strtoimax.arg.2=int,base
tk func.strtoimax.args=3
tk func.strtoimax.ret=intmax_t
tk func.strtok.arg.0=char *,s1
tk func.strtok.arg.1=const char *,s2
tk func.strtok.args=2
tk func.strtok.ret=char *
tk func.strtol.arg.0=const char *,str
tk func.strtol.arg.1=char * *,endptr
tk func.strtol.arg.2=int,base
tk func.strtol.args=3
tk func.strtol.ret=long
tk func.strtold.arg.0=const char *,str
tk func.strtold.arg.1=char * *,endptr
tk func.strtold.args=2
tk func.strtold.ret=long double
tk func.strtoll.arg.0=const char *,str
tk func.strtoll.arg.1=char * *,endptr
tk func.strtoll.arg.2=int,base
tk func.strtoll.args=3
tk func.strtoll.ret=long long
tk func.strtoul.arg.0=const char *,str
tk func.strtoul.arg.1=char * *,endptr
tk func.strtoul.arg.2=int,base
tk func.strtoul.args=3
tk func.strtoul.ret=long
tk func.strtoull.arg.0=const char *,str
tk func.strtoull.arg.1=char * *,endptr
tk func.strtoull.arg.2=int,base
tk func.strtoull.args=3
tk func.strtoull.ret=long long
tk func.strtoumax.arg.0=const char *,str
tk func.strtoumax.arg.1=char * *,endptr
tk func.strtoumax.arg.2=int,base
tk func.strtoumax.args=3
tk func.strtoumax.ret=uintmax_t
tk func.strxfrm.arg.0=char *,s1
tk func.strxfrm.arg.1=const char *,s2
tk func.strxfrm.arg.2=size_t,n
tk func.strxfrm.args=3
tk func.strxfrm.ret=size_t
tk func.swprintf.arg.0=wchar_t *,s
tk func.swprintf.arg.1=size_t,n
tk func.swprintf.arg.2=const wchar_t *,format
tk func.swprintf.args=3
tk func.swprintf.ret=int
tk func.swscanf.arg.0=const wchar_t *,s
tk func.swscanf.arg.1=const wchar_t *,format
tk func.swscanf.args=2
tk func.swscanf.ret=int
tk func.symlink.arg.0=const char *,path1
tk func.symlink.arg.1=const char *,path2
tk func.symlink.args=2
tk func.symlink.ret=int
tk func.system.arg.0=const char *,string
tk func.system.args=1
tk func.system.ret=int
tk func.tan.arg.0=arithmetic,x
tk func.tan.args=1
tk func.tan.ret=floating_point
tk func.tanf.arg.0=float,x
tk func.tanf.args=1
tk func.tanf.ret=float
tk func.tanh.arg.0=arithmetic,x
tk func.tanh.args=1
tk func.tanh.ret=floating_point
tk func.tanhf.arg.0=float,x
tk func.tanhf.args=1
tk func.tanhf.ret=float
tk func.tanhl.arg.0=long double,x
tk func.tanhl.args=1
tk func.tanhl.ret=long double
tk func.tanl.arg.0=long double,x
tk func.tanl.args=1
tk func.tanl.ret=long double
tk func.textdomain.arg.0=char *,domainname
tk func.textdomain.args=1
tk func.textdomain.ret=char *
tk func.tgamma.arg.0=arithmetic,x
tk func.tgamma.args=1
tk func.tgamma.ret=floating_point
tk func.tgammaf.arg.0=float,x
tk func.tgammaf.args=1
tk func.tgammaf.ret=float
tk func.tgammal.arg.0=long double,x
tk func.tgammal.args=1
tk func.tgammal.ret=long double
tk func.tgoto.arg.0=const char *,cap
tk func.tgoto.arg.1=int,col
tk func.tgoto.arg.2=int,row
tk func.tgoto.args=3
tk func.tgoto.ret=char *
tk func.time.arg.0=time_t *,timer
tk func.time.args=1
tk func.time.ret=time_t
tk func.tmpfile.args=0
tk func.tmpfile.ret=file*
tk func.tmpnam.arg.0=char *,s
tk func.tmpnam.args=1
tk func.tmpnam.ret=char *
tk func.tolower.arg.0=int,c
tk func.tolower.args=1
tk func.tolower.ret=int
tk func.toupper.arg.0=int,c
tk func.toupper.args=1
tk func.toupper.ret=int
tk func.towctrans.arg.0=wint_t,wc
tk func.towctrans.arg.1=wctrans_t,desc
tk func.towctrans.args=2
tk func.towctrans.ret=wint_t
tk func.towlower.arg.0=wint_t,wc
tk func.towlower.args=1
tk func.towlower.ret=wint_t
tk func.towupper.arg.0=wint_t,wc
tk func.towupper.args=1
tk func.towupper.ret=wint_t
tk func.trunc.arg.0=arithmetic,x
tk func.trunc.args=1
tk func.trunc.ret=floating_point
tk func.truncf.arg.0=float,x
tk func.truncf.args=1
tk func.truncf.ret=float
tk func.truncl.arg.0=long double,x
tk func.truncl.args=1
tk func.truncl.ret=long double
tk func.umask.arg.0=int,m
tk func.umask.args=1
tk func.umask.ret=int
tk func.ungetc.arg.0=int,c
tk func.ungetc.arg.1=FILE *,stream
tk func.ungetc.args=2
tk func.ungetc.ret=int
tk func.ungetwc.arg.0=wint_t,c
tk func.ungetwc.arg.1=FILE *,stream
tk func.ungetwc.args=2
tk func.ungetwc.ret=wint_t
tk func.unlink.arg.0=const char *,path
tk func.unlink.args=1
tk func.unlink.ret=int
tk func.usleep.arg.0=int,s
tk func.usleep.args=1
tk func.usleep.ret=int
tk func.vfprintf.arg.0=FILE *,stream
tk func.vfprintf.arg.1=const char *,format
tk func.vfprintf.arg.2=va_list,ap
tk func.vfprintf.args=3
tk func.vfprintf.ret=int
tk func.vfscanf.arg.0=FILE *,stream
tk func.vfscanf.arg.1=const char *,format
tk func.vfscanf.arg.2=va_list,ap
tk func.vfscanf.args=3
tk func.vfscanf.ret=int
tk func.vfwprintf.arg.0=FILE *,stream
tk func.vfwprintf.arg.1=const wchar_t *,format
tk func.vfwprintf.arg.2=va_list,arg
tk func.vfwprintf.args=3
tk func.vfwprintf.ret=int
tk func.vfwscanf.arg.0=FILE *,stream
tk func.vfwscanf.arg.1=const wchar_t *,format
tk func.vfwscanf.arg.2=va_list,arg
tk func.vfwscanf.args=3
tk func.vfwscanf.ret=int
tk func.vprintf.arg.0=const char *,format
tk func.vprintf.arg.1=va_list,ap
tk func.vprintf.args=2
tk func.vprintf.ret=int
tk func.vscanf.arg.0=const char *,format
tk func.vscanf.arg.1=va_list,ap
tk func.vscanf.args=2
tk func.vscanf.ret=int
tk func.vsnprintf.arg.0=char *,s
tk func.vsnprintf.arg.1=size_t,size
tk func.vsnprintf.arg.2=const char *,format
tk func.vsnprintf.arg.3=va_list,arg
tk func.vsnprintf.args=4
tk func.vsnprintf.ret=int
tk func.vsprintf.arg.0=char *,s
tk func.vsprintf.arg.1=const char *,format
tk func.vsprintf.arg.2=va_list,arg
tk func.vsprintf.args=3
tk func.vsprintf.ret=int
tk func.vsscanf.arg.0=const char *,s
tk func.vsscanf.arg.1=const char *,format
tk func.vsscanf.arg.2=va_list,arg
tk func.vsscanf.args=3
tk func.vsscanf.ret=int
tk func.vswprintf.arg.0=wchar_t *,s
tk func.vswprintf.arg.1=size_t,n
tk func.vswprintf.arg.2=const wchar_t *,format
tk func.vswprintf.arg.3=va_list,arg
tk func.vswprintf.args=4
tk func.vswprintf.ret=int
tk func.vswscanf.arg.0=const wchar_t *,s
tk func.vswscanf.arg.1=const wchar_t *,format
tk func.vswscanf.arg.2=va_list,arg
tk func.vswscanf.args=3
tk func.vswscanf.ret=int
tk func.vwprintf.arg.0=const wchar_t *,format
tk func.vwprintf.arg.1=va_list,arg
tk func.vwprintf.args=2
tk func.vwprintf.ret=int
tk func.vwscanf.arg.0=const wchar_t *,format
tk func.vwscanf.arg.1=va_list,arg
tk func.vwscanf.args=2
tk func.vwscanf.ret=int
tk func.wait.arg.0=int *,wstatus
tk func.wait.args=1
tk func.wait.ret=pid_t
tk func.waitid.arg.0=idtype_t,idtype
tk func.waitid.arg.1=id_t,id
tk func.waitid.arg.2=siginfo_t *,infop
tk func.waitid.arg.3=int,options
tk func.waitid.args=4
tk func.waitid.ret=int
tk func.waitpid.arg.0=pid_t,pid
tk func.waitpid.arg.1=int *,wstatus
tk func.waitpid.arg.2=int,options
tk func.waitpid.args=3
tk func.waitpid.ret=pid_t
tk func.warn.arg.0=const char *,format
tk func.warn.args=1
tk func.warn.ret=void
tk func.warnc.arg.0=const char *,format
tk func.warnc.arg.1=int,opt
tk func.warnc.args=2
tk func.warnc.ret=void
tk func.warnx.arg.0=const char *,format
tk func.warnx.args=1
tk func.warnx.ret=void
tk func.wcrtomb.arg.0=char *,s
tk func.wcrtomb.arg.1=wchar_t,wc
tk func.wcrtomb.arg.2=mbstate_t *,ps
tk func.wcrtomb.args=3
tk func.wcrtomb.ret=size_t
tk func.wcscat.arg.0=wchar_t *,s1
tk func.wcscat.arg.1=const wchar_t *,s2
tk func.wcscat.args=2
tk func.wcscat.ret=wchar_t*
tk func.wcschr.arg.0=wchar_t *,s
tk func.wcschr.arg.1=wchar_t,c
tk func.wcschr.args=2
tk func.wcschr.ret=wchar_t*
tk func.wcscmp.arg.0=const wchar_t *,s1
tk func.wcscmp.arg.1=const wchar_t *,s2
tk func.wcscmp.args=2
tk func.wcscmp.ret=int
tk func.wcscoll.arg.0=const wchar_t *,s1
tk func.wcscoll.arg.1=const wchar_t *,s2
tk func.wcscoll.args=2
tk func.wcscoll.ret=int
tk func.wcscpy.arg.0=wchar_t *,s1
tk func.wcscpy.arg.1=const wchar_t *,s2
tk func.wcscpy.args=2
tk func.wcscpy.ret=wchar_t*
tk func.wcscspn.arg.0=const wchar_t *,s1
tk func.wcscspn.arg.1=const wchar_t *,s2
tk func.wcscspn.args=2
tk func.wcscspn.ret=size_t
tk func.wcsftime.arg.0=wchar_t *,s
tk func.wcsftime.arg.1=size_t,maxsize
tk func.wcsftime.arg.2=const wchar_t *,format
tk func.wcsftime.arg.3=const tm *,timeptr
tk func.wcsftime.args=4
tk func.wcsftime.ret=size_t
tk func.wcslen.arg.0=const wchar_t *,s
tk func.wcslen.args=1
tk func.wcslen.ret=size_t
tk func.wcsncat.arg.0=wchar_t *,s1
tk func.wcsncat.arg.1=const wchar_t *,s2
tk func.wcsncat.arg.2=size_t,n
tk func.wcsncat.args=3
tk func.wcsncat.ret=wchar_t*
tk func.wcsncmp.arg.0=const wchar_t *,s1
tk func.wcsncmp.arg.1=const wchar_t *,s2
tk func.wcsncmp.arg.2=size_t,n
tk func.wcsncmp.args=3
tk func.wcsncmp.ret=int
tk func.wcsncpy.arg.0=wchar_t *,s1
tk func.wcsncpy.arg.1=const wchar_t *,s2
tk func.wcsncpy.arg.2=size_t,n
tk func.wcsncpy.args=3
tk func.wcsncpy.ret=wchar_t*
tk func.wcspbrk.arg.0=wchar_t *,s1
tk func.wcspbrk.arg.1=const wchar_t *,s2
tk func.wcspbrk.args=2
tk func.wcspbrk.ret=wchar_t*
tk func.wcsrchr.arg.0=wchar_t *,s
tk func.wcsrchr.arg.1=wchar_t,c
tk func.wcsrchr.args=2
tk func.wcsrchr.ret=wchar_t*
tk func.wcsrtombs.arg.0=char *,dst
tk func.wcsrtombs.arg.1=const wchar_t* *,src
tk func.wcsrtombs.arg.2=size_t,len
tk func.wcsrtombs.arg.3=mbstate_t *,ps
tk func.wcsrtombs.args=4
tk func.wcsrtombs.ret=size_t
tk func.wcsspn.arg.0=const wchar_t *,s1
tk func.wcsspn.arg.1=const wchar_t *,s2
tk func.wcsspn.args=2
tk func.wcsspn.ret=size_t
tk func.wcsstr.arg.0=wchar_t *,s1
tk func.wcsstr.arg.1=const wchar_t *,s2
tk func.wcsstr.args=2
tk func.wcsstr.ret=wchar_t*
tk func.wcstod.arg.0=const wchar_t *,nptr
tk func.wcstod.arg.1=wchar_t* *,endptr
tk func.wcstod.args=2
tk func.wcstod.ret=double
tk func.wcstof.arg.0=const wchar_t *,nptr
tk func.wcstof.arg.1=wchar_t* *,endptr
tk func.wcstof.args=2
tk func.wcstof.ret=float
tk func.wcstoimax.arg.0=const,wchar_t*
tk func.wcstoimax.arg.1=wchar_t* *,endptr
tk func.wcstoimax.arg.2=int,base
tk func.wcstoimax.args=3
tk func.wcstoimax.ret=intmax_t
tk func.wcstok.arg.0=wchar_t *,s1
tk func.wcstok.arg.1=const wchar_t *,s2
tk func.wcstok.arg.2=wchar_t* *,ptr
tk func.wcstok.args=3
tk func.wcstok.ret=wchar_t*
tk func.wcstol.arg.0=const wchar_t *,nptr
tk func.wcstol.arg.1=wchar_t* *,endptr
tk func.wcstol.arg.2=int,base
tk func.wcstol.args=3
tk func.wcstol.ret=long
tk func.wcstold.arg.0=const wchar_t *,nptr
tk func.wcstold.arg.1=wchar_t* *,endptr
tk func.wcstold.args=2
tk func.wcstold.ret=long double
tk func.wcstoll.arg.0=const wchar_t *,nptr
tk func.wcstoll.arg.1=wchar_t* *,endptr
tk func.wcstoll.arg.2=int,base
tk func.wcstoll.args=3
tk func.wcstoll.ret=long long
tk func.wcstombs.arg.0=char *,s
tk func.wcstombs.arg.1=const wchar_t *,pwcs
tk func.wcstombs.arg.2=size_t,n
tk func.wcstombs.args=3
tk func.wcstombs.ret=size_t
tk func.wcstoul.arg.0=const wchar_t *,nptr
tk func.wcstoul.arg.1=wchar_t* *,endptr
tk func.wcstoul.arg.2=int,base
tk func.wcstoul.args=3
tk func.wcstoul.ret=long
tk func.wcstoull.arg.0=const wchar_t *,nptr
tk func.wcstoull.arg.1=wchar_t* *,endptr
tk func.wcstoull.arg.2=int,base
tk func.wcstoull.args=3
tk func.wcstoull.ret=long long
tk func.wcstoumax.arg.0=const,wchar_t*
tk func.wcstoumax.arg.1=wchar_t* *,endptr
tk func.wcstoumax.arg.2=int,base
tk func.wcstoumax.args=3
tk func.wcstoumax.ret=uintmax_t
tk func.wcsxfrm.arg.0=wchar_t *,s1
tk func.wcsxfrm.arg.1=const wchar_t *,s2
tk func.wcsxfrm.arg.2=size_t,n
tk func.wcsxfrm.args=3
tk func.wcsxfrm.ret=size_t
tk func.wctob.arg.0=wint_t,c
tk func.wctob.args=1
tk func.wctob.ret=int
tk func.wctomb.arg.0=char *,s
tk func.wctomb.arg.1=wchar_t,wchar
tk func.wctomb.args=2
tk func.wctomb.ret=int
tk func.wctrans.arg.0=const char *,property
tk func.wctrans.args=1
tk func.wctrans.ret=wctrans_t
tk func.wctype.arg.0=const char *,property
tk func.wctype.args=1
tk func.wctype.ret=wctype_t
tk func.wmemchr.arg.0=wchar_t *,s
tk func.wmemchr.arg.1=wchar_t,c
tk func.wmemchr.arg.2=size_t,n
tk func.wmemchr.args=3
tk func.wmemchr.ret=wchar_t*
tk func.wmemcmp.arg.0=wchar_t *,s1
tk func.wmemcmp.arg.1=const wchar_t *,s2
tk func.wmemcmp.arg.2=size_t,n
tk func.wmemcmp.args=3
tk func.wmemcmp.ret=int
tk func.wmemcpy.arg.0=wchar_t *,s1
tk func.wmemcpy.arg.1=const wchar_t *,s2
tk func.wmemcpy.arg.2=size_t,n
tk func.wmemcpy.args=3
tk func.wmemcpy.ret=wchar_t*
tk func.wmemmove.arg.0=wchar_t *,s1
tk func.wmemmove.arg.1=const wchar_t *,s2
tk func.wmemmove.arg.2=size_t,n
tk func.wmemmove.args=3
tk func.wmemmove.ret=wchar_t*
tk func.wmemset.arg.0=wchar_t *,s
tk func.wmemset.arg.1=wchar_t,c
tk func.wmemset.arg.2=size_t,n
tk func.wmemset.args=3
tk func.wmemset.ret=wchar_t*
tk func.wprintf.arg.0=const wchar_t *,format
tk func.wprintf.args=1
tk func.wprintf.ret=int
tk func.write.arg.0=int,fd
tk func.write.arg.1=const char *,ptr
tk func.write.arg.2=size_t,nbytes
tk func.write.args=3
tk func.write.ret=ssize_t
tk func.wscanf.arg.0=const wchar_t *,format
tk func.wscanf.args=1
tk func.wscanf.ret=int
tk func.xmalloc.arg.0=size_t,size
tk func.xmalloc.args=1
tk func.xmalloc.ret= void *
tk fwide=func
tk fwprintf=func
tk fwrite=func
tk fwscanf=func
tk getc=func
tk getchar=func
tk getenv=func
tk geteuid=func
tk getopt=func
tk getpid=func
tk getprogname=func
tk gets=func
tk getsockname=func
tk getsockopt=func
tk getuid=func
tk getwc=func
tk getwchar=func
tk gmtime=func
tk humanize_number=func
tk hypot=func
tk hypotf=func
tk hypotl=func
tk ilogb=func
tk ilogbf=func
tk ilogbl=func
tk imaxabs=func
tk imaxdiv=func
tk inet_aton=func
tk inet_ntoa=func
tk initstate=func
tk int=type
tk int16_t=type
tk int32_t=type
tk int64_t=type
tk int8_t=type
tk ioctl=func
tk isalnum=func
tk isalpha=func
tk isatty=func
tk isblank=func
tk iscntrl=func
tk isdigit=func
tk isfinite=func
tk isgraph=func
tk isgreater=func
tk isgreaterequal=func
tk isinf=func
tk isless=func
tk islessequal=func
tk islessgreater=func
tk islower=func
tk isnan=func
tk isnormal=func
tk isprint=func
tk ispunct=func
tk isspace=func
tk isunordered=func
tk isupper=func
tk iswalnum=func
tk iswalpha=func
tk iswblank=func
tk iswcntrl=func
tk iswctype=func
tk iswdigit=func
tk iswgraph=func
tk iswlower=func
tk iswprint=func
tk iswpunct=func
tk iswspace=func
tk iswupper=func
tk iswxdigit=func
tk isxdigit=func
tk labs=func
tk ldexp=func
tk ldexpf=func
tk ldexpl=func
tk ldiv=func
tk lgamma=func
tk lgammaf=func
tk lgammal=func
tk llabs=func
tk lldiv=func
tk llrint=func
tk llrintf=func
tk llrintl=func
tk llround=func
tk llroundf=func
tk llroundl=func
tk localeconv=func
tk localtime=func
tk log=func
tk log10=func
tk log10f=func
tk log10l=func
tk log1p=func
tk log1pf=func
tk log1pl=func
tk log2=func
tk log2f=func
tk log2l=func
tk logb=func
tk logbf=func
tk logbl=func
tk logf=func
tk logl=func
tk long=type
tk long long=type
tk longjmp=func
tk lrint=func
tk lrintf=func
tk lrintl=func
tk lround=func
tk lroundf=func
tk lroundl=func
tk lstat=func
tk main=func
tk malloc=func
tk maskrune=func
tk mblen=func
tk mbrlen=func
tk mbrtowc=func
tk mbsinit=func
tk mbsrtowcs=func
tk mbstowcs=func
tk mbtowc=func
tk memchr=func
tk memcmp=func
tk memcpy=func
tk memmem=func
tk memmove=func
tk memset=func
tk mkstemp=func
tk mktemp=func
tk mktime=func
tk mmap=func
tk modf=func
tk modff=func
tk modfl=func
tk munmap=func
tk nan=func
tk nanf=func
tk nanl=func
tk nanosleep=func
tk nearbyint=func
tk nearbyintf=func
tk nearbyintl=func
tk nextafter=func
tk nextafterf=func
tk nextafterl=func
tk nexttoward=func
tk nexttowardf=func
tk nexttowardl=func
tk nl_langinfo=func
tk nl_langinfo_l=func
tk objc_enumerationMutation=func
tk objc_msgSend=func
tk objc_msgSendSuper2=func
tk objc_release=func
tk objc_retain=func
tk objc_retainAutoreleasedReturnValue=func
tk objc_storeStrong=func
tk open=func
tk openat=func
tk pclose=func
tk perror=func
tk popen=func
tk pow=func
tk powf=func
tk powl=func
tk prctl=func
tk printf=func
tk ptrace=func
tk putc=func
tk putchar=func
tk puts=func
tk pututxline=func
tk putwc=func
tk putwchar=func
tk qsort=func
tk quick_exit=func
tk raise=func
tk rand=func
tk random=func
tk read=func
tk realloc=func
tk remainder=func
tk remainderf=func
tk remainderl=func
tk remove=func
tk remquo=func
tk remquof=func
tk remquol=func
tk rename=func
tk rewind=func
tk rint=func
tk rintf=func
tk rintl=func
tk round=func
tk roundf=func
tk roundl=func
tk scalbln=func
tk scalblnf=func
tk scalblnl=func
tk scalbn=func
tk scalbnf=func
tk scalbnl=func
tk scanf=func
tk select=func
tk send=func
tk setbuf=func
tk setenv=func
tk setjmp=func
tk setlocale=func
tk setsockopt=func
tk setstate=func
tk setvbuf=func
tk short=type
tk sigaction=func
tk signal=func
tk signbit=func
tk sin=func
tk sinf=func
tk sinh=func
tk sinhf=func
tk sinhl=func
tk sinl=func
tk size_t=type
tk sleep=func
tk snprintf=func
tk sprintf=func
tk sprintf_chk=func
tk sqrt=func
tk sqrtf=func
tk sqrtl=func
tk srand=func
tk srandom=func
tk srandomdev=func
tk sscanf=func
tk strcasecmp=func
tk strcat=func
tk strchr=func
tk strcmp=func
tk strcoll=func
tk strcpy=func
tk strcpy_chk=func
tk strcspn=func
tk strdup=func
tk strerror=func
tk strftime=func
tk strlcpy=func
tk strlen=func
tk strmode=func
tk strncasecmp=func
tk strncat=func
tk strncmp=func
tk strncpy=func
tk strndup=func
tk strpbrk=func
tk strrchr=func
tk strspn=func
tk strstr=func
tk strtod=func
tk strtof=func
tk strtoimax=func
tk strtok=func
tk strtol=func
tk strtold=func
tk strtoll=func
tk strtoul=func
tk strtoull=func
tk strtoumax=func
tk strxfrm=func
tk swprintf=func
tk swscanf=func
tk symlink=func
tk system=func
tk tan=func
tk tanf=func
tk tanh=func
tk tanhf=func
tk tanhl=func
tk tanl=func
tk textdomain=func
tk tgamma=func
tk tgammaf=func
tk tgammal=func
tk tgoto=func
tk time=func
tk tmpfile=func
tk tmpnam=func
tk tolower=func
tk toupper=func
tk towctrans=func
tk towlower=func
tk towupper=func
tk trunc=func
tk truncf=func
tk truncl=func
tk type.char=c
tk type.char *=z
tk type.char *.size=64
tk type.char.size=8
tk type.double=F
tk type.double.size=64
tk type.float=f
tk type.float.size=32
tk type.int=d
tk type.int.size=32
tk type.int16_t=w
tk type.int16_t.size=16
tk type.int32_t=d
tk type.int32_t.size=32
tk type.int64_t=q
tk type.int64_t.size=64
tk type.int8_t=b
tk type.int8_t.size=8
tk type.long=x
tk type.long long=q
tk type.long long.size=64
tk type.long.size=64
tk type.short=w
tk type.short.size=16
tk type.size_t=x
tk type.size_t.size=64
tk type.uid_t=i
tk type.uid_t.size=64
tk type.uint16_t=w
tk type.uint16_t.size=16
tk type.uint32_t=d
tk type.uint32_t.size=32
tk type.uint64_t=q
tk type.uint64_t.size=64
tk type.uint8_t=b
tk type.uint8_t.size=8
tk type.unsigned char=b
tk type.unsigned char.size=8
tk type.unsigned int=i
tk type.unsigned int.size=32
tk type.unsigned short=w
tk type.unsigned short.size=16
tk type.void *=p
tk type.void *.size=64
tk uid_t=type
tk uint16_t=type
tk uint32_t=type
tk uint64_t=type
tk uint8_t=type
tk umask=func
tk ungetc=func
tk ungetwc=func
tk unlink=func
tk unsigned char=type
tk unsigned int=type
tk unsigned short=type
tk usleep=func
tk vfprintf=func
tk vfscanf=func
tk vfwprintf=func
tk vfwscanf=func
tk void *=type
tk vprintf=func
tk vscanf=func
tk vsnprintf=func
tk vsprintf=func
tk vsscanf=func
tk vswprintf=func
tk vswscanf=func
tk vwprintf=func
tk vwscanf=func
tk wait=func
tk waitid=func
tk waitpid=func
tk warn=func
tk warnc=func
tk warnx=func
tk wcrtomb=func
tk wcscat=func
tk wcschr=func
tk wcscmp=func
tk wcscoll=func
tk wcscpy=func
tk wcscspn=func
tk wcsftime=func
tk wcslen=func
tk wcsncat=func
tk wcsncmp=func
tk wcsncpy=func
tk wcspbrk=func
tk wcsrchr=func
tk wcsrtombs=func
tk wcsspn=func
tk wcsstr=func
tk wcstod=func
tk wcstof=func
tk wcstoimax=func
tk wcstok=func
tk wcstol=func
tk wcstold=func
tk wcstoll=func
tk wcstombs=func
tk wcstoul=func
tk wcstoull=func
tk wcstoumax=func
tk wcsxfrm=func
tk wctob=func
tk wctomb=func
tk wctrans=func
tk wctype=func
tk wmemchr=func
tk wmemcmp=func
tk wmemcpy=func
tk wmemmove=func
tk wmemset=func
tk wprintf=func
tk write=func
tk wscanf=func
tk xmalloc=func
# macros
# aliases
# seek
s 0x88009a4c
